"use strict";(self.webpackChunksc_envimonitor=self.webpackChunksc_envimonitor||[]).push([[82951],{82951:(e,t,r)=>{r.r(t),r.d(t,{default:()=>z});var i=r(89379),s=r(35143),a=r(3825),o=r(50076),n=r(27741),l=r(77717),p=r(50346),d=r(46053),u=r(40565),h=(r(81806),r(47249),r(28379)),c=r(85842),m=r(17707),y=r(49140),v=r(76797),g=r(68002),b=r(80963),f=r(25515),A=r(12406),_=r(36648),S=r(19502),x=r(65624),M=r(31362),w=r(11270),I=r(94729),O=r(21617),Z=r(5682),P=r(73907),T=r(78817),E=r(95363),L=r(1420),F=r(16852),R=r(39568),j=r(65419),V=r(38278),J=r(731),N=r(48718),k=r(67478),q=r(61701);let U=class extends((0,x.dM)((0,T.e)((0,Z.j)((0,P.I)((0,_.V)((0,S.b)((0,w.q)((0,I.A)((0,l.P)((0,O.J)((0,A.p)((0,M.d)(f.A))))))))))))){constructor(){super(...arguments),this._exportImageParameters=new L.g({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.elevationInfo=new J.A({mode:"on-the-ground"}),this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null,this._debouncedSaveOperations=(0,p.sg)(async(e,t,i)=>{const{save:s,saveAs:a}=await r.e(56300).then(r.bind(r,56300));switch(e){case q.X.SAVE:return s(this,t);case q.X.SAVE_AS:return a(this,i,t)}})}normalizeCtorArgs(e,t){return"string"==typeof e?(0,i.A)({url:e},t):e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(p.QP).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.includes("PNG32")?"png32":"png24"}writeSublayers(e,t,r,s){var a,o;if(!this.loaded||!e)return;const n=e.slice().reverse().flatten(e=>{let{sublayers:t}=e;return t&&t.toArray().reverse()}).toArray();let l=!1;const p=(0,y.aB)(s.origin);let d;if(null!==(a=this.capabilities)&&void 0!==a&&a.operations.supportsExportMap&&null!==(o=this.capabilities)&&void 0!==o&&null!==(o=o.exportMap)&&void 0!==o&&o.supportsDynamicLayers)if(p===y.Gr.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;l=(0,j.Zx)(n,e,y.Gr.SERVICE)}else if(p>y.Gr.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");l=(0,j.Zx)(n,e.sublayers,(0,y.aB)(e.origin)),d=e.originWithPartialOverrides}const u=[],h=(0,i.A)((0,i.A)({writeSublayerStructure:l},s),{},{minimumWritableOrigin:d});let c=l||this.hasVisibleLayersForOrigin(p);n.forEach(e=>{const t=e.write({},h);u.push(t),c=c||"user"===e.originOf("visible")}),u.some(e=>Object.keys(e).length>1)&&(t.layers=u),c&&(t.visibleLayers=n.filter(e=>e.visible).map(e=>e.id))}createExportImageParameters(e,t,r,s){var a,o;const n=(null===s||void 0===s?void 0:s.pixelRatio)||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=null!==(a=null===s||void 0===s?void 0:s.floors)&&void 0!==a?a:null,this._exportImageParameters.scale=(0,g.X_)({extent:e,width:t})*n;const l=this._exportImageParameters.toJSON(),p=null===s||void 0===s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},d=null===(o=e)||void 0===o?void 0:o.spatialReference,u=(0,b.YX)(d);l.dpi*=n;const h={};if(null!==s&&void 0!==s&&s.timeExtent){const{start:e,end:t}=s.timeExtent.toJSON();h.time=e&&t&&e===t?""+e:"".concat(null!==e&&void 0!==e?e:"null",",").concat(null!==t&&void 0!==t?t:"null")}else this.timeInfo&&!this.timeInfo.hasLiveData&&(h.time="null,null");return(0,i.A)((0,i.A)((0,i.A)({bbox:e?e.xmin+","+e.ymin+","+e.xmax+","+e.ymax:void 0,bboxSR:u,imageSR:u,size:t+","+r},l),p),h)}async fetchImage(e,t,r,i){const{data:s}=await this._fetchImage("image",e,t,r,i);return s}async fetchImageBitmap(e,t,r,i){const{data:s,url:a}=await this._fetchImage("blob",e,t,r,i);return(0,F.m)(s,a,null===i||void 0===i?void 0:i.signal)}async fetchRecomputedExtents(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=(0,i.A)((0,i.A)({},e),{},{query:(0,i.A)((0,i.A)({returnUpdates:!0,f:"json"},this.customParameters),{},{token:this.apiKey})}),{data:r}=await(0,a.A)(this.url,t),{extent:s,fullExtent:o,timeExtent:n}=r,l=s||o;return{fullExtent:l&&v.A.fromJSON(l),timeExtent:n&&N.T.fromJSON({start:n[0],end:n[1]})}}loadAll(){return(0,n.g)(this,e=>{e(this.allSublayers),e(this.subtables)})}async save(e){return this._debouncedSaveOperations(q.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(q.X.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return(0,V.D)(this,e)}async _fetchImage(e,t,r,s,n){var l,d,u;const h={responseType:e,signal:null!==(l=null===n||void 0===n?void 0:n.signal)&&void 0!==l?l:null,query:(0,i.A)((0,i.A)((0,i.A)((0,i.A)((0,i.A)({},this.parsedUrl.query),this.createExportImageParameters(t,r,s,n)),{},{f:"image"},this.refreshParameters),this.customParameters),{},{token:this.apiKey})},c=this.parsedUrl.path+"/export";if(null!=(null===(d=h.query)||void 0===d?void 0:d.dynamicLayers)&&(null===(u=this.capabilities)||void 0===u||null===(u=u.exportMap)||void 0===u||!u.supportsDynamicLayers))throw new o.A("mapimagelayer:dynamiclayer-not-supported","service ".concat(this.url," doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source."),{query:h.query});try{const{data:e}=await(0,a.A)(c,h);return{data:e,url:c}}catch(m){if((0,p.zf)(m))throw m;throw new o.A("mapimagelayer:image-fetch-error","Unable to load image: ".concat(c),{error:m})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await(0,a.A)(this.parsedUrl.path,{query:(0,i.A)((0,i.A)((0,i.A)({f:"json"},this.parsedUrl.query),this.customParameters),{},{token:this.apiKey}),signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){var t;return!(null==e||null===(t=this.sublayersSourceJSON[e])||void 0===t||!t.visibleLayers)}};(0,s._)([(0,d.MZ)((0,k.P6)("dateFieldsTimeReference"))],U.prototype,"dateFieldsTimeZone",void 0),(0,s._)([(0,d.MZ)({type:Boolean})],U.prototype,"datesInUnknownTimezone",void 0),(0,s._)([(0,d.MZ)()],U.prototype,"dpi",void 0),(0,s._)([(0,d.MZ)()],U.prototype,"elevationInfo",void 0),(0,s._)([(0,d.MZ)()],U.prototype,"gdbVersion",void 0),(0,s._)([(0,d.MZ)()],U.prototype,"imageFormat",void 0),(0,s._)([(0,h.w)("imageFormat",["supportedImageFormatTypes"])],U.prototype,"readImageFormat",null),(0,s._)([(0,d.MZ)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],U.prototype,"imageMaxHeight",void 0),(0,s._)([(0,d.MZ)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],U.prototype,"imageMaxWidth",void 0),(0,s._)([(0,d.MZ)()],U.prototype,"imageTransparency",void 0),(0,s._)([(0,d.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],U.prototype,"isReference",void 0),(0,s._)([(0,d.MZ)({json:{read:!1,write:!1}})],U.prototype,"labelsVisible",void 0),(0,s._)([(0,d.MZ)({type:["ArcGISMapServiceLayer"]})],U.prototype,"operationalLayerType",void 0),(0,s._)([(0,d.MZ)({json:{read:!1,write:!1}})],U.prototype,"popupEnabled",void 0),(0,s._)([(0,d.MZ)((0,k.P6)("preferredTimeReference"))],U.prototype,"preferredTimeZone",void 0),(0,s._)([(0,d.MZ)()],U.prototype,"sourceJSON",void 0),(0,s._)([(0,d.MZ)({json:{write:{ignoreOrigin:!0}}})],U.prototype,"sublayers",void 0),(0,s._)([(0,m.K)("sublayers",{layers:{type:[R.A]},visibleLayers:{type:[u.jz]}})],U.prototype,"writeSublayers",null),(0,s._)([(0,d.MZ)({type:["show","hide","hide-children"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],U.prototype,"listMode",void 0),(0,s._)([(0,d.MZ)({json:{read:!1},readOnly:!0,value:"map-image"})],U.prototype,"type",void 0),(0,s._)([(0,d.MZ)(E.OZ)],U.prototype,"url",void 0),U=(0,s._)([(0,c.$)("esri.layers.MapImageLayer")],U);const z=U}}]);
//# sourceMappingURL=82951.f70470cd.chunk.js.map