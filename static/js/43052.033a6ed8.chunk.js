"use strict";(self.webpackChunksc_envimonitor=self.webpackChunksc_envimonitor||[]).push([[43052],{8350:(e,t,i)=>{i.d(t,{H:()=>d});var r=i(35143),n=i(46053),o=(i(81806),i(76460),i(47249),i(85842)),s=i(69098),a=i(42553),l=i(40565),u=i(6409),p=i(88205);let c=class extends(s.A.ClonableMixin(a.A)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,r._)([(0,n.MZ)({type:String,json:{write:{isRequired:!0}}})],c.prototype,"name",void 0),(0,r._)([(0,n.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,u.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],c.prototype,"method",void 0),(0,r._)([(0,n.MZ)({type:String,json:{write:{isRequired:!0}}})],c.prototype,"value",void 0),(0,r._)([(0,n.MZ)({type:[l.jz],json:{write:{isRequired:!0}}})],c.prototype,"bandIds",void 0),(0,r._)([(0,n.MZ)({types:p.uy,json:{write:!0,origins:{"web-scene":{types:p.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],c.prototype,"renderer",void 0),c=(0,r._)([(0,o.$)("esri.renderers.support.RasterPresetRenderer")],c);const d=e=>{let t=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,r._)([(0,n.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),(0,r._)([(0,n.MZ)({type:[c],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=(0,r._)([(0,o.$)("esri.layers.mixins.RasterPresetRendererMixin")],t),t}},14009:(e,t,i)=>{i.d(t,{e:()=>u,s:()=>l});var r=i(89379),n=i(54994),o=i(36643),s=i(77725),a=i(97015);async function l(e,t,i,r){const n=await u(e,t,i,r);return s.A.fromJSON(n)}async function u(e,t,i,s){const l=(0,n.Dl)(e),u=(0,r.A)({},i),p=a.A.from(t),{data:c}=await(0,o.eW)(l,p,p.sourceSpatialReference,u,s);return c}},16852:(e,t,i)=>{i.d(t,{C:()=>s,m:()=>o});var r=i(50076),n=i(50346);async function o(e,t,i){let o;try{o=await createImageBitmap(e)}catch(s){throw new r.A("request:server","Unable to load ".concat(t),{url:t,error:s})}return(0,n.Te)(i),o}async function s(e,t,i,o,s){let a;try{a=await createImageBitmap(e)}catch(l){throw new r.A("request:server","Unable to load tile ".concat(t,"/").concat(i,"/").concat(o),{error:l,level:t,row:i,col:o})}return(0,n.Te)(s),a}},25213:(e,t,i)=>{i.d(t,{E9:()=>h,Tw:()=>m,X6:()=>y});var r=i(89379),n=i(3825),o=i(76797),s=i(19247),a=i(13312),l=i(23032),u=i(49653),p=i(54994),c=i(77725);async function d(e,t,i){var d,m,y,h,g,f,v,w,R,_;const S=(0,p.Dl)(e),{rasterFunction:b,sourceJSON:A}=t||{},x=b?JSON.stringify(b.rasterFunctionDefinition||b):null,I=(0,p.lF)((0,r.A)((0,r.A)({},S.query),{},{renderingRule:x,f:"json"})),M=(0,p.jV)(I,i);e=S.path;const F=A||await(0,n.A)(e,M).then(e=>e.data),D=F.hasRasterAttributeTable?(0,n.A)("".concat(e,"/rasterAttributeTable"),M):null,j=F.hasColormap?(0,n.A)("".concat(e,"/colormap"),M):null,T=F.hasHistograms?(0,n.A)("".concat(e,"/histograms"),M):null,P=F.currentVersion>=10.3?(0,n.A)("".concat(e,"/keyProperties"),M):null,O=F.hasMultidimensions?(0,n.A)("".concat(e,"/multidimensionalInfo"),M):null,N=await Promise.allSettled([D,j,T,P,O]);let Z=null;if(F.minValues&&F.minValues.length===F.bandCount){Z=[];for(let e=0;e<F.minValues.length;e++)Z.push({min:F.minValues[e],max:F.maxValues[e],avg:F.meanValues[e],stddev:F.stdvValues[e]})}const C=o.A.fromJSON(F.extent),V=Math.ceil(C.width/F.pixelSizeX-.1),q=Math.ceil(C.height/F.pixelSizeY-.1),E=a.A.fromJSON(F.spatialReference||F.extent.spatialReference),J="fulfilled"===N[0].status?null===(d=N[0].value)||void 0===d?void 0:d.data:null,G=null!==J&&void 0!==J&&null!==(m=J.features)&&void 0!==m&&m.length?c.A.fromJSON(J):null,z="fulfilled"===N[1].status?null===(y=N[1].value)||void 0===y?void 0:y.data.colormap:null,L=null!==z&&void 0!==z&&z.length?z:null,U="fulfilled"===N[2].status?null===(h=N[2].value)||void 0===h?void 0:h.data.histograms:null,B=null!==U&&void 0!==U&&null!==(g=U[0])&&void 0!==g&&null!==(g=g.counts)&&void 0!==g&&g.length?U:null,k="fulfilled"===N[3].status&&null!==(f=null===(v=N[3].value)||void 0===v?void 0:v.data)&&void 0!==f?f:{},Q="fulfilled"===N[4].status?null===(w=N[4].value)||void 0===w?void 0:w.data.multidimensionalInfo:null,$=null!==Q&&void 0!==Q&&null!==(R=Q.variables)&&void 0!==R&&R.length?Q:null;$&&$.variables.forEach(e=>{var t,i;null!==(t=e.statistics)&&void 0!==t&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),null===(i=e.dimensions)||void 0===i||i.forEach(e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")})});const{defaultVariable:H,serviceDataType:K}=F;H&&H!==k.DefaultVariable&&(k.DefaultVariable=H),(null===K||void 0===K?void 0:K.includes("esriImageServiceDataTypeVector"))&&!K.includes(k.DataType)&&(k.DataType=K.replace("esriImageServiceDataType",""));let W=F.noDataValue;(null===(_=F.noDataValues)||void 0===_?void 0:_.length)&&F.noDataValues.some(e=>e!==W)&&(W=F.noDataValues);const X=F.transposeInfo?new u.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new s.A({x:F.extent.xmin,y:F.extent.ymax,spatialReference:E}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(V,q))/Math.LN2-8)),transposeInfo:F.transposeInfo}):void 0;return new l.A({width:V,height:q,bandCount:F.bandCount,extent:o.A.fromJSON(F.extent),spatialReference:E,pixelSize:new s.A({x:F.pixelSizeX,y:F.pixelSizeY,spatialReference:E}),pixelType:F.pixelType.toLowerCase(),statistics:Z,attributeTable:G,colormap:L,histograms:B,keyProperties:k,noDataValue:W,multidimensionalInfo:$,storageInfo:X})}function m(e,t,i){return d(e,{sourceJSON:t},i)}function y(e,t,i){return d(e,{rasterFunction:t},i)}function h(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},36643:(e,t,i)=>{i.d(t,{GB:()=>R,IJ:()=>h,Jf:()=>w,Pk:()=>f,eW:()=>y,gW:()=>v,kS:()=>g});var r=i(89379),n=i(3825),o=i(90534),s=i(19902),a=i(1438),l=i(80963),u=i(78238),p=i(89122),c=i(57831);const d="Layer does not support extent calculation.";function m(e,t,i){var r,n;const o=e.geometry,a=e.toJSON();delete a.compactGeometryEnabled,delete a.defaultSpatialReferenceEnabled;const u=a;let p,c,d;if(o&&(c=o.spatialReference,d=(0,l.YX)(c),u.geometryType=(0,s.$B)(o),u.geometry=function(e,t){if(t&&"extent"===e.type)return"".concat(e.xmin,",").concat(e.ymin,",").concat(e.xmax,",").concat(e.ymax);if(t&&"point"===e.type)return"".concat(e.x,",").concat(e.y);const i=e.toJSON();return delete i.spatialReference,JSON.stringify(i)}(o,e.compactGeometryEnabled),u.inSR=d),a.groupByFieldsForStatistics&&(u.groupByFieldsForStatistics=a.groupByFieldsForStatistics.join(",")),a.objectIds)switch(null===i||void 0===i||null===(r=i.uniqueIdFields)||void 0===r?void 0:r.length){case void 0:u.objectIds=a.objectIds.join(",");break;case 1:u.uniqueIds=JSON.stringify(a.objectIds),delete u.objectIds;break;default:u.uniqueIds=JSON.stringify(a.objectIds.map(e=>JSON.parse(e))),delete u.objectIds}if(a.orderByFields&&(u.orderByFields=a.orderByFields.join(",")),!a.outFields||!a.returnDistinctValues&&(null!==t&&void 0!==t&&t.returnCountOnly||null!==t&&void 0!==t&&t.returnExtentOnly||null!==t&&void 0!==t&&t.returnIdsOnly)?delete u.outFields:a.outFields.includes("*")?u.outFields="*":u.outFields=a.outFields.join(","),a.outSR?(u.outSR=(0,l.YX)(a.outSR),p=e.outSpatialReference):o&&(a.returnGeometry||a.returnCentroid)&&(u.outSR=u.inSR,p=c),a.returnGeometry&&delete a.returnGeometry,a.outStatistics&&(u.outStatistics=JSON.stringify(a.outStatistics)),a.fullText&&(u.fullText=JSON.stringify(a.fullText)),a.pixelSize&&(u.pixelSize=JSON.stringify(a.pixelSize)),a.quantizationParameters&&(e.defaultSpatialReferenceEnabled&&null!=c&&null!=(null===(n=e.quantizationParameters)||void 0===n?void 0:n.extent)&&c.equals(e.quantizationParameters.extent.spatialReference)&&delete a.quantizationParameters.extent.spatialReference,u.quantizationParameters=JSON.stringify(a.quantizationParameters)),a.parameterValues&&(u.parameterValues=JSON.stringify(a.parameterValues)),a.rangeValues&&(u.rangeValues=JSON.stringify(a.rangeValues)),a.dynamicDataSource&&(u.layer=JSON.stringify({source:a.dynamicDataSource}),delete a.dynamicDataSource),a.timeExtent){const e=a.timeExtent,{start:t,end:i}=e;null==t&&null==i||(u.time=t===i?t:"".concat(null!==t&&void 0!==t?t:"null",",").concat(null!==i&&void 0!==i?i:"null")),delete a.timeExtent}return e.defaultSpatialReferenceEnabled&&null!=c&&null!=p&&c.equals(p)&&(u.defaultSR=u.inSR,delete u.inSR,delete u.outSR),u}async function y(e,t,i,r,n){var o;const s=null!==(o=t.timeExtent)&&void 0!==o&&o.isEmpty?{data:{features:[]}}:await R(e,t,"json",r,void 0,n);return(0,c.q)(t,i,s.data),s}async function h(e,t,i,r,n){var o;if(null!==(o=t.timeExtent)&&void 0!==o&&o.isEmpty)return{data:i.createFeatureResult()};const s=await g(e,t,r,n),a=s;return a.data=(0,p.m)(s.data,i),a}function g(e,t,i,r){return R(e,t,"pbf",i,void 0,r)}function f(e,t,i,r){var n;return null!==(n=t.timeExtent)&&void 0!==n&&n.isEmpty?Promise.resolve({data:{objectIds:[]}}):R(e,t,"json",i,{returnIdsOnly:!0},r)}function v(e,t,i,r){var n;return null!==(n=t.timeExtent)&&void 0!==n&&n.isEmpty?Promise.resolve({data:{count:0}}):R(e,t,"json",i,{returnIdsOnly:!0,returnCountOnly:!0},r)}async function w(e,t,i){var r;if(null!==(r=t.timeExtent)&&void 0!==r&&r.isEmpty)return{data:{count:0,extent:null}};const n=await R(e,t,"json",i,{returnExtentOnly:!0,returnCountOnly:!0}),o=n.data;if(o.hasOwnProperty("extent"))return n;if(o.features)throw new Error(d);if(o.hasOwnProperty("count"))throw new Error(d);return n}async function R(e,t,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};const c="string"==typeof e?(0,o.An)(e):e,d=t.geometry?[t.geometry]:[],y=await(0,a.el)(d,null,{signal:s.signal}),h=null===y||void 0===y?void 0:y[0];null!=h&&((t=t.clone()).geometry=h);const g=(0,u.z)((0,r.A)((0,r.A)((0,r.A)({},c.query),{},{f:i},function(e,t){if(!e.returnIdsOnly||!t.uniqueIdFields)return e;const i=(0,r.A)((0,r.A)({},e),{},{returnUniqueIdsOnly:!0});return delete i.returnIdsOnly,i}(l,p)),m(t,l,p)));return(0,n.A)((0,o.fj)(c.path,(f=l,null==t.formatOf3DObjects||f.returnCountOnly||f.returnExtentOnly||f.returnIdsOnly?"query":"query3d")),(0,r.A)((0,r.A)({},s),{},{responseType:"pbf"===i?"array-buffer":"json",query:(0,r.A)((0,r.A)({},g),s.query)}));var f}},37713:(e,t,i)=>{i.d(t,{I:()=>s});var r=i(54994),n=i(36643),o=i(97015);async function s(e,t,i,s){const a=(0,r.Dl)(e),{data:l}=await(0,n.gW)(a,o.A.from(t),i,s);return l.count}},43052:(e,t,i)=>{i.r(t),i.d(t,{default:()=>ni});var r=i(89379),n=i(35143),o=i(16868),s=i(69098),a=i(50076),l=i(77717),u=i(50346),p=i(46053),c=(i(81806),i(76460)),d=(i(47249),i(85842)),m=i(17707),y=i(25515),h=i(39356),g=i(3825),f=i(63241),v=i(53084),w=i(68134),R=i(90534),_=i(40565),S=i(28379),b=i(76797),A=i(65215),x=i(13312),I=i(80963),M=i(95363),F=i(15359),D=i(42553),j=i(44038),T=i(52297);const P={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var O=i(93187),N=i(74916),Z=i(73137);const C=new Set(["u1","u2","u4","u8","s8","u16","s16"]),V={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},q=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function E(e){return q.has(e.type)}function J(e,t){var i;if(!e||!t)return(0,v.o8)(e||t);const r=(0,v.o8)(e);if(r.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),G(r.functionDefinition.arguments,t),r.rasterFunctionDefinition=r.functionDefinition.toJSON()}else"none"!==(null===(i=t.functionName)||void 0===i?void 0:i.toLowerCase())&&(U(r.functionArguments).Raster=t);return r}function G(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&G(e[i].arguments,t))}function z(e){const t=(0,v.o8)(P[e.functionName+"Function"]),i=e.functionArguments;for(const r in i)"raster"===r.toLowerCase()?(t.arguments[r]=z(i[r]),t.arguments[r].type="RasterFunctionTemplate"):"colormap"===r.toLowerCase()?(t.arguments[r].value=H(i[r]),t.arguments.ColorSchemeType.value=0):t.arguments[r].value=i[r];return t}function L(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){var i;const r=t.convertToRFT,n=new j.A;n.functionName="Stretch";const o=B[N.u.toJSON(e.stretchType)],s="u8",a=null===(i=e.customStatistics)||void 0===i?void 0:i.map(e=>{var t,i;return[e.min,e.max,null!==(t=e.avg)&&void 0!==t?t:0,null!==(i=e.stddev)&&void 0!==i?i:1]}),l={StretchType:o,Statistics:a,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(l.Min=e.outputMin),null!=e.outputMax&&(l.Max=e.outputMax),o===B.standardDeviation?(l.NumberOfStandardDeviations=e.numberOfStandardDeviations,n.outputPixelType=s):o===B.percentClip?(l.MinPercent=e.minPercent,l.MaxPercent=e.maxPercent,n.outputPixelType=s):o===B.minMax?n.outputPixelType=s:o===B.sigmoid&&(l.SigmoidStrengthLevel=e.sigmoidStrengthLevel),n.functionArguments=l,n.variableName="Raster",e.colorRamp){const i=e.colorRamp,o=new j.A;if(r)o.functionArguments={ColorRamp:(0,O.hf)(i)};else{const r=(0,O.hs)(i,!0);if(r)o.functionArguments={colorRampName:r};else if(!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type){var u;const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&(null===(u=t.colorRamps)||void 0===u?void 0:u.length)&&t.colorRamps.forEach(e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm"),o.functionArguments={colorRamp:t}}else o.functionArguments={Colormap:(0,O.R8)(i)}}return o.variableName="Raster",o.functionName="Colormap",o.functionArguments.Raster=n,r?new j.A({rasterFunctionDefinition:z(o)}):o}return r?new j.A({rasterFunctionDefinition:z(n)}):n}(e,t);case"class-breaks":return function(e,t){const i=[],r=[],n=[],o=[],s=1e-4,{pixelType:a,rasterAttributeTable:l}=t,u=null==l?null:l.features,p=Q(l);if(p&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach((t,i)=>{var r;const n=null===(r=t.symbol)||void 0===r?void 0:r.color;let s;(null===n||void 0===n?void 0:n.a)&&null!=t.minValue&&null!=t.maxValue&&u.forEach(r=>{null!=t.minValue&&null!=t.maxValue&&(s=r.attributes[e.field],(s>=t.minValue&&s<t.maxValue||i===e.classBreakInfos.length-1&&s>=t.minValue)&&o.push([r.attributes[p],n.r,n.g,n.b]))})});const i=a?k(o,a):o,r=new j.A;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=i,r.variableName="Raster",t.convertToRFT?new j.A({rasterFunctionDefinition:z(r)}):r}e.classBreakInfos.forEach((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const a=e.symbol&&e.symbol.color;null!==a&&void 0!==a&&a.a?(0===t?i.push(e.minValue,e.maxValue+s):i.push(e.minValue+s,e.maxValue+s),r.push(t),o.push([t,a.r,a.g,a.b])):n.push(e.minValue,e.maxValue)});const c=a?k(o,a):o,d=new j.A;d.functionName="Remap",d.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:n},d.variableName="Raster";const m=new j.A;return m.functionName="Colormap",m.functionArguments={Colormap:c,Raster:d},t.convertToRFT?new j.A({rasterFunctionDefinition:z(m)}):m}(e,t);case"unique-value":return function(e,t){var i;const r=[],{pixelType:n,rasterAttributeTable:o}=t,s=null==o?null:o.features,a=Q(o),l=null===(i=e.defaultSymbol)||void 0===i||null===(i=i.color)||void 0===i?void 0:i.toRgb(),u=e.uniqueValueInfos;if(u)if(s){if(a){const t=new Map;u.forEach(e=>{const i=e.value,r=$(e);null!=i&&(null===r||void 0===r?void 0:r.a)&&t.set(String(i),r.toRgb())});const i=e.field;i&&s.forEach(e=>{let{attributes:n}=e;const o=String(n[i]),s=n[a],u=t.get(o);u?r.push([s,...u]):l&&r.push([s,...l])})}}else for(let d=0;d<u.length;d++){const e=u[d],t=$(e),i=+e.value;if(null!==t&&void 0!==t&&t.a){if(isNaN(i))return null;r.push([i,t.r,t.g,t.b])}}const p=n?k(r,n):r,c=new j.A;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=p,c.variableName="Raster",t.convertToRFT?new j.A({rasterFunctionDefinition:z(c)}):c}(e,t);case"raster-colormap":return function(e,t){const i=e.extractColormap();if(!i||0===i.length)return null;const{pixelType:r}=t,n=r?k(i,r):i,o=new j.A;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=n,t.convertToRFT?new j.A({rasterFunctionDefinition:z(o)}):o}(e,t);case"vector-field":return function(e,t){const i=new j.A;i.functionName="VectorFieldRenderer";const{dataType:r,bandNames:n}=t,o="vector-uv"===r;let s,a;if(n&&2===n.length){const e=n.map(e=>e.toLowerCase());s=e.indexOf("magnitude"),a=e.indexOf("direction")}-1!==s&&null!==s||(s=0,a=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find(e=>"Magnitude"===e.field):new Z.A,c={magnitudeBandID:s,directionBandID:a,isUVComponents:o,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:V[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};i.functionArguments=c;const d=z(i);return t.convertToRFT?j.A.fromJSON({rasterFunctionDefinition:d}):i}(e,t);case"raster-shaded-relief":return function(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new j.A;const r=new j.A;r.functionName="Hillshade";const n="traditional"===e.hillshadeType?0:1,o="none"===e.scalingType?1:3,s={HillshadeType:n,SlopeType:o,ZFactor:e.zFactor};return 0===n&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===o&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),r.functionArguments=s,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",i?s.ColorRamp=(0,O.hf)(e.colorRamp):s.Colormap=(0,O.R8)(e.colorRamp)),i?new j.A({rasterFunctionDefinition:z(r)}):r}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function U(e){var t;const i=null!==(t=null===e||void 0===e?void 0:e.Raster)&&void 0!==t?t:null===e||void 0===e?void 0:e.raster;return i&&"esri.layers.support.RasterFunction"===i.declaredClass?U(i.functionArguments):e}const B={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function k(e,t){const i=C.has(t)?(0,T.hP)(t):null;return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function Q(e){if(null==e)return;const{fields:t}=e,i=null===t||void 0===t?void 0:t.find(e=>(null===e||void 0===e?void 0:e.name)&&"value"===e.name.toLowerCase());return null===i||void 0===i?void 0:i.name}function $(e){var t,i,r;return"polygon-3d"===(null===(t=e.symbol)||void 0===t?void 0:t.type)?null===(i=e.symbol.symbolLayers)||void 0===i||null===(i=i.find(e=>"fill"===e.type))||void 0===i||null===(i=i.material)||void 0===i?void 0:i.color:null===(r=e.symbol)||void 0===r?void 0:r.color}function H(e){const t=[],i=[];return e.forEach(e=>{t.push(e[0]),i.push((0,O.vL)([...e.slice(1),255]))}),{type:"RasterColormap",values:t,colors:i}}var K=i(29365),W=i(58646);let X=class extends D.A{constructor(){super(...arguments),this.layer=null,this.requestRawData=!1,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){var e;return this.requestRawData||"vector-field"===(null===(e=this.layer.renderer)||void 0===e?void 0:e.type)?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new K.A({where:i})),t}get rasterFunction(){var e,t;const i=this.layer;let{rasterFunction:r}=i;const n=i.pixelFilter,o=!i.format||i.format.includes("jpg")||i.format.includes("png");this.requestRawData||(r=this._addResampleRasterFunction(r));const s=null===(e=i.multidimensionalSubset)||void 0===e?void 0:e.areaOfInterest;return s&&(r=function(e,t){const i=new j.A({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return J(i,e)}(r,s)),this.requestRawData||!o||n||"vector-field"===(null===(t=i.renderer)||void 0===t?void 0:t.type)||(r=this.combineRendererWithRenderingRule(r)),r}combineRendererWithRenderingRule(e){var t;const i=this.layer,{rasterInfo:r,renderer:n}=i;return e=e||i.rasterFunction,n&&E(n)?J(L(n,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandNames:r.bandInfos.map(e=>{let{name:t}=e;return t}),convertColorRampToColormap:i.version<10.6,convertToRFT:!(null===(t=e)||void 0===t||!t.rasterFunctionDefinition),bandCount:r.bandCount}),e):e}_addResampleRasterFunction(e){var t;if("vector-field"!==(null===(t=this.layer.renderer)||void 0===t?void 0:t.type)||"Resample"===(null===e||void 0===e?void 0:e.functionName))return e;const i="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,r=this.layer.serviceRasterInfo.pixelSize;let n=new j.A({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:r}});return n=null!==e&&void 0!==e&&e.rasterFunctionDefinition?new j.A({rasterFunctionDefinition:z(n)}):n,J(n,e)}};(0,n._)([(0,p.MZ)()],X.prototype,"layer",void 0),(0,n._)([(0,p.MZ)()],X.prototype,"requestRawData",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"adjustAspectRatio",null),(0,n._)([(0,m.K)("adjustAspectRatio")],X.prototype,"writeAdjustAspectRatio",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"bandIds",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"compression",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"compressionQuality",null),(0,n._)([(0,m.K)("compressionQuality")],X.prototype,"writeCompressionQuality",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"compressionTolerance",null),(0,n._)([(0,m.K)("compressionTolerance")],X.prototype,"writeCompressionTolerance",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"format",null),(0,n._)([(0,p.MZ)({type:String,json:{read:{reader:W.SZ.read},write:{writer:W.SZ.write}}})],X.prototype,"interpolation",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"noData",null),(0,n._)([(0,p.MZ)({type:String,json:{read:{reader:W.hm.read},write:{writer:W.hm.write}}})],X.prototype,"noDataInterpretation",null),(0,n._)([(0,p.MZ)({type:W.e8.apiValues,json:{read:W.e8.read,write:W.e8.write}})],X.prototype,"pixelType",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"lercVersion",void 0),(0,n._)([(0,m.K)("lercVersion")],X.prototype,"writeLercVersion",null),(0,n._)([(0,p.MZ)({type:Number})],X.prototype,"version",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],X.prototype,"mosaicRule",null),(0,n._)([(0,p.MZ)({json:{write:!0,name:"renderingRule"}})],X.prototype,"rasterFunction",null),X=(0,n._)([(0,d.$)("esri.layers.support.ExportImageServiceParameters")],X);var Y=i(44135),ee=i(1900),te=i(16852),ie=i(13023),re=i(66486),ne=i(51939),oe=i(23032),se=i(68347),ae=i(59648),le=i(99846),ue=i(78937),pe=i(20118),ce=i(88205),de=i(19902),me=i(1438),ye=i(54994),he=i(19247);let ge=class extends(s.A.ClonableMixin(D.A)){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};(0,n._)([(0,p.MZ)({type:he.A,json:{read:!0}})],ge.prototype,"fromGeometry",void 0),(0,n._)([(0,p.MZ)({type:he.A,json:{read:!0,write:!0}})],ge.prototype,"toGeometry",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],ge.prototype,"objectIds",void 0),(0,n._)([(0,p.MZ)({type:String,json:{write:!0}})],ge.prototype,"where",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],ge.prototype,"maxCount",void 0),ge=(0,n._)([(0,d.$)("esri.rest.support.FindImagesParameters")],ge);const fe=e=>{let t=class extends e{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"make",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"model",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"focalLength",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"pixelSize",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"rows",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],t.prototype,"cols",void 0),t=(0,n._)([(0,d.$)("esri.rest.support.CameraInfoMixin")],t),t};let ve=class extends(fe(D.A)){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=null===e||void 0===e?void 0:e.getTime()}};(0,n._)([(0,p.MZ)({json:{write:!0}})],ve.prototype,"id",void 0),(0,n._)([(0,p.MZ)({json:{name:"uri",write:!0}})],ve.prototype,"referenceUri",void 0),(0,n._)([(0,p.MZ)({type:Date,json:{write:!0}})],ve.prototype,"acquisitionDate",void 0),(0,n._)([(0,m.K)("acquisitionDate")],ve.prototype,"writeAcquisitionDate",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],ve.prototype,"cameraID",void 0),(0,n._)([(0,p.MZ)({type:he.A,json:{write:!0}})],ve.prototype,"center",void 0),(0,n._)([(0,p.MZ)({type:he.A,json:{write:!0}})],ve.prototype,"perspectiveCenter",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],ve.prototype,"orientation",void 0),ve=(0,n._)([(0,d.$)("esri.rest.support.ImageInspectionInfo")],ve);const we=ve;let Re=class extends D.A{constructor(){super(...arguments),this.images=null}};var _e;(0,n._)([(0,p.MZ)({type:[we],json:{write:!0}})],Re.prototype,"images",void 0),Re=(0,n._)([(0,d.$)("esri.rest.support.FindImagesResult")],Re);let Se=_e=class extends D.A{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new _e((0,v.o8)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,n._)([(0,p.MZ)({type:[String],json:{name:"angleName",write:!0}})],Se.prototype,"angleNames",void 0),(0,n._)([(0,p.MZ)({type:he.A,json:{write:!0}})],Se.prototype,"point",void 0),(0,n._)([(0,p.MZ)({type:x.A,json:{write:!0}})],Se.prototype,"spatialReference",void 0),(0,n._)([(0,p.MZ)({type:_.jz,json:{write:!0}})],Se.prototype,"rasterId",void 0),Se=_e=(0,n._)([(0,d.$)("esri.rest.support.ImageAngleParameters")],Se);let be=class extends D.A{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],be.prototype,"north",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],be.prototype,"up",void 0),(0,n._)([(0,p.MZ)({type:x.A,json:{write:!0}})],be.prototype,"spatialReference",void 0),be=(0,n._)([(0,d.$)("esri.rest.support.ImageAngleResult")],be);var Ae=i(31633),xe=i(31608),Ie=i(45802);const Me=new Ie.J({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let Fe=class extends D.A{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,n._)([(0,p.MZ)({type:Number,json:{read:!0,write:!0}})],Fe.prototype,"value",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:!0,write:!0}})],Fe.prototype,"displayValue",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{read:!0,write:!0}})],Fe.prototype,"uncertainty",void 0),Fe=(0,n._)([(0,d.$)("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],Fe);let De=class extends Fe{constructor(){super(...arguments),this.unit=null}};(0,n._)([(0,p.MZ)({type:String,json:{read:Ae.Sk.read,write:Ae.Sk.write}})],De.prototype,"unit",void 0),De=(0,n._)([(0,d.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],De);let je=class extends Fe{constructor(){super(...arguments),this.unit=null}};(0,n._)([(0,p.MZ)({type:String,json:{read:Ae.dk.read,write:Ae.dk.write}})],je.prototype,"unit",void 0),je=(0,n._)([(0,d.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],je);let Te=class extends Fe{constructor(){super(...arguments),this.unit=null}};(0,n._)([(0,p.MZ)({type:String,json:{read:Ae.b$.read,write:Ae.b$.write}})],Te.prototype,"unit",void 0),Te=(0,n._)([(0,d.$)("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],Te);let Pe=class extends D.A{constructor(e){super(e),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};var Oe;(0,n._)([(0,p.MZ)()],Pe.prototype,"type",void 0),(0,n._)([(0,p.MZ)({type:Me.apiValues,json:{read:Me.read,write:Me.write}})],Pe.prototype,"measureOperation",void 0),(0,n._)([(0,p.MZ)({type:K.A,json:{write:!0}})],Pe.prototype,"mosaicRule",void 0),(0,n._)([(0,p.MZ)({type:he.A,json:{write:!0}})],Pe.prototype,"pixelSize",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],Pe.prototype,"raster",void 0),Pe=(0,n._)([(0,d.$)("esri.rest.support.BaseImageMeasureParameters")],Pe);let Ne=Oe=class extends Pe{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,de.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new Oe((0,v.o8)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n._)([(0,p.MZ)({types:xe.yR,json:{name:"fromGeometry",read:!0,write:!0}})],Ne.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],Ne.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({type:Me.apiValues,json:{write:Me.write}})],Ne.prototype,"measureOperation",null),(0,n._)([(0,p.MZ)({json:{read:!0}})],Ne.prototype,"is3D",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:Ae.Sk.read,write:Ae.Sk.write}})],Ne.prototype,"linearUnit",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:Ae.dk.read,write:Ae.dk.write}})],Ne.prototype,"areaUnit",void 0),Ne=Oe=(0,n._)([(0,d.$)("esri.rest.support.ImageAreaParameters")],Ne);let Ze=class extends D.A{constructor(e){super(e),this.name=null,this.sensorName=null}};(0,n._)([(0,p.MZ)({type:String,json:{read:!0,write:!0}})],Ze.prototype,"name",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:!0,write:!0}})],Ze.prototype,"sensorName",void 0),Ze=(0,n._)([(0,d.$)("esri.rest.support.BaseImageMeasureResult")],Ze);let Ce=class extends Ze{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,n._)([(0,p.MZ)({type:je,json:{read:!0,write:!0}})],Ce.prototype,"area",void 0),(0,n._)([(0,p.MZ)({type:De,json:{read:!0,write:!0}})],Ce.prototype,"perimeter",void 0),Ce=(0,n._)([(0,d.$)("esri.rest.support.ImageAreaResult")],Ce);let Ve=class extends(s.A.ClonableMixin(D.A)){constructor(){super(...arguments),this.outSpatialReference=null}};(0,n._)([(0,p.MZ)({type:x.A,json:{name:"outSR",write:!0}})],Ve.prototype,"outSpatialReference",void 0),Ve=(0,n._)([(0,d.$)("esri.rest.support.ImageBoundaryParameters")],Ve);let qe=class extends D.A{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,t){return null==e?null:e.rings?A.A.fromJSON(e):b.A.fromJSON(e)}};var Ee;(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],qe.prototype,"area",void 0),(0,n._)([(0,p.MZ)({types:xe.yR,json:{name:"shape",write:!0}})],qe.prototype,"geometry",void 0),(0,n._)([(0,S.w)("geometry")],qe.prototype,"readGeometry",null),qe=(0,n._)([(0,d.$)("esri.rest.support.ImageBoundaryResult")],qe);let Je=Ee=class extends Pe{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,de.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new Ee((0,v.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n._)([(0,p.MZ)({type:he.A,json:{read:!0,write:!0}})],Je.prototype,"fromGeometry",void 0),(0,n._)([(0,m.K)("fromGeometry")],Je.prototype,"writeFromGeometry",null),(0,n._)([(0,p.MZ)({type:he.A,json:{read:!0,write:!0}})],Je.prototype,"toGeometry",void 0),(0,n._)([(0,p.MZ)({type:Me.apiValues,json:{write:Me.write}})],Je.prototype,"measureOperation",null),(0,n._)([(0,p.MZ)({json:{read:!0}})],Je.prototype,"is3D",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:Ae.Sk.read,write:Ae.Sk.write}})],Je.prototype,"linearUnit",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:Ae.b$.read,write:Ae.b$.write}})],Je.prototype,"angularUnit",void 0),Je=Ee=(0,n._)([(0,d.$)("esri.rest.support.ImageDistanceParameters")],Je);let Ge=class extends Ze{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,n._)([(0,p.MZ)({type:De,json:{read:!0,write:!0}})],Ge.prototype,"distance",void 0),(0,n._)([(0,p.MZ)({type:Te,json:{read:!0,write:!0}})],Ge.prototype,"azimuthAngle",void 0),(0,n._)([(0,p.MZ)({type:Te,json:{read:!0,write:!0}})],Ge.prototype,"elevationAngle",void 0),Ge=(0,n._)([(0,d.$)("esri.rest.support.ImageDistanceResult")],Ge);var ze=i(6409),Le=i(38432),Ue=i(48718);let Be=class extends(s.A.ClonableMixin(D.A)){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,de.$B)(e),t[i]=JSON.stringify(e.toJSON()))}};(0,n._)([(0,p.MZ)({types:xe.yR,json:{read:de.rS,write:!0}})],Be.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],Be.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],Be.prototype,"objectIds",void 0),(0,n._)([(0,ze.e)(Le.x,{ignoreUnknown:!1,name:"spatialRel"})],Be.prototype,"spatialRelationship",void 0),(0,n._)([(0,p.MZ)({type:Ue.T,json:{name:"time",write:!0}})],Be.prototype,"timeExtent",void 0),(0,n._)([(0,p.MZ)({type:String,json:{write:!0}})],Be.prototype,"where",void 0),Be=(0,n._)([(0,d.$)("esri.rest.support.ImageGPSInfoParameters")],Be);let ke=class extends(fe(D.A)){constructor(){super(...arguments),this.id=null}};(0,n._)([(0,p.MZ)({json:{write:!0}})],ke.prototype,"id",void 0),ke=(0,n._)([(0,d.$)("esri.rest.support.CameraInfo")],ke);const Qe=ke;let $e=class extends D.A{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=null===e||void 0===e?void 0:e.getTime()}};(0,n._)([(0,p.MZ)({json:{write:!0}})],$e.prototype,"id",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],$e.prototype,"name",void 0),(0,n._)([(0,p.MZ)({type:Date,json:{write:!0}})],$e.prototype,"acquisitionDate",void 0),(0,n._)([(0,m.K)("acquisitionDate")],$e.prototype,"writeAcquisitionDate",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],$e.prototype,"cameraID",void 0),(0,n._)([(0,p.MZ)({type:he.A,json:{write:!0}})],$e.prototype,"center",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],$e.prototype,"gps",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],$e.prototype,"orientation",void 0),$e=(0,n._)([(0,d.$)("esri.rest.support.ImageGPSInfo")],$e);const He=$e;let Ke=class extends D.A{constructor(){super(...arguments),this.images=null,this.cameras=null}};var We;(0,n._)([(0,p.MZ)({type:[He],json:{write:!0}})],Ke.prototype,"images",void 0),(0,n._)([(0,p.MZ)({type:[Qe],json:{write:!0}})],Ke.prototype,"cameras",void 0),Ke=(0,n._)([(0,d.$)("esri.rest.support.ImageGPSInfoResult")],Ke);let Xe=We=class extends Pe{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,de.$B)(e),t[i]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new We((0,v.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n._)([(0,p.MZ)({type:he.A,json:{read:!0}})],Xe.prototype,"fromGeometry",void 0),(0,n._)([(0,m.K)("fromGeometry")],Xe.prototype,"writeFromGeometry",null),(0,n._)([(0,p.MZ)({type:he.A,json:{read:!0,write:!0}})],Xe.prototype,"toGeometry",void 0),(0,n._)([(0,p.MZ)({type:Me.apiValues,json:{write:Me.write}})],Xe.prototype,"measureOperation",null),(0,n._)([(0,p.MZ)({json:{read:!0}})],Xe.prototype,"operationType",void 0),(0,n._)([(0,p.MZ)({type:String,json:{read:Ae.Sk.read,write:Ae.Sk.write}})],Xe.prototype,"linearUnit",void 0),Xe=We=(0,n._)([(0,d.$)("esri.rest.support.ImageHeightParameters")],Xe);let Ye=class extends Ze{constructor(){super(...arguments),this.height=null}};(0,n._)([(0,p.MZ)({type:De,json:{read:!0,write:!0}})],Ye.prototype,"height",void 0),Ye=(0,n._)([(0,d.$)("esri.rest.support.ImageHeightResult")],Ye);var et,tt=i(46570);let it=et=class extends D.A{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,de.$B)(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){var t;let i=e;null!==(t=i)&&void 0!==t&&t.mosaicMethod&&(i=K.A.fromJSON((0,r.A)((0,r.A)({},i.toJSON()),{},{mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation}))),this._set("mosaicRule",i)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}set rasterFunction(e){var t;let i=e;null!==(t=i)&&void 0!==t&&t.rasterFunction&&(i=j.A.fromJSON((0,r.A)((0,r.A)({},i.toJSON()),{},{rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments}))),this._set("rasterFunction",i)}writeRasterFunction(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const r=null!=e.start?e.start.getTime():null,n=null!=e.end?e.end.getTime():null;t[i]=null!=r?null!=n?"".concat(r,",").concat(n):"".concat(r):null}}clone(){return new et((0,v.o8)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,n._)([(0,p.MZ)({types:xe.yR,json:{write:!0}})],it.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],it.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({type:K.A,json:{write:!0}})],it.prototype,"mosaicRule",null),(0,n._)([(0,m.K)("mosaicRule")],it.prototype,"writeMosaicRule",null),(0,n._)([(0,p.MZ)({type:j.A,json:{write:!0,name:"renderingRule"}})],it.prototype,"rasterFunction",null),(0,n._)([(0,m.K)("rasterFunction")],it.prototype,"writeRasterFunction",null),(0,n._)([(0,p.MZ)({type:[j.A],json:{write:!0,name:"renderingRules"}})],it.prototype,"rasterFunctions",void 0),(0,n._)([(0,m.K)("rasterFunctions")],it.prototype,"writeRasterFunctions",null),(0,n._)([(0,p.MZ)({type:he.A,json:{write:!0}})],it.prototype,"pixelSize",void 0),(0,n._)([(0,m.K)("pixelSize")],it.prototype,"writePixelSize",null),(0,n._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],it.prototype,"returnGeometry",void 0),(0,n._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],it.prototype,"returnCatalogItems",void 0),(0,n._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],it.prototype,"returnPixelValues",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],it.prototype,"maxItemCount",void 0),(0,n._)([(0,p.MZ)({type:Ue.T,json:{write:{target:"time"}}})],it.prototype,"timeExtent",void 0),(0,n._)([(0,m.K)("timeExtent")],it.prototype,"writeTimeExtent",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],it.prototype,"raster",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],it.prototype,"viewId",void 0),(0,n._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],it.prototype,"processAsMultidimensional",void 0),it=et=(0,n._)([(0,d.$)("esri.rest.support.ImageIdentifyParameters")],it);var rt=i(77725);let nt=class extends D.A{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};var ot;(0,n._)([(0,p.MZ)({json:{write:!0}})],nt.prototype,"catalogItemVisibilities",void 0),(0,n._)([(0,p.MZ)({type:rt.A,json:{write:!0}})],nt.prototype,"catalogItems",void 0),(0,n._)([(0,p.MZ)({type:he.A,json:{write:!0}})],nt.prototype,"location",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],nt.prototype,"name",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],nt.prototype,"objectId",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],nt.prototype,"processedValues",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],nt.prototype,"properties",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],nt.prototype,"value",void 0),nt=(0,n._)([(0,d.$)("esri.rest.support.ImageIdentifyResult")],nt);let st=ot=class extends D.A{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,i){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map(e=>e.toJSON())}}clone(){var e,t;return new ot({geometries:null!==(e=null===(t=this.geometries)||void 0===t?void 0:t.map(e=>e.clone()))&&void 0!==e?e:[],rasterId:this.rasterId})}};(0,n._)([(0,p.MZ)({type:[he.A],json:{write:!0}})],st.prototype,"geometries",void 0),(0,n._)([(0,m.K)("geometries")],st.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({type:_.jz,json:{write:!0}})],st.prototype,"rasterId",void 0),st=ot=(0,n._)([(0,d.$)("esri.rest.support.ImagePixelLocationParameters")],st);let at=class extends D.A{constructor(){super(...arguments),this.geometries=null}};var lt;(0,n._)([(0,p.MZ)({json:{write:!0}})],at.prototype,"geometries",void 0),at=(0,n._)([(0,d.$)("esri.rest.support.ImagePixelLocationResult")],at);let ut=lt=class extends Pe{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,de.$B)(e),t[i]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new lt((0,v.o8)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,n._)([(0,p.MZ)({types:xe.yR,json:{name:"fromGeometry",read:de.rS}})],ut.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],ut.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({type:Me.apiValues,json:{read:Me.read,write:Me.write}})],ut.prototype,"measureOperation",null),(0,n._)([(0,p.MZ)({json:{read:!0}})],ut.prototype,"is3D",void 0),ut=lt=(0,n._)([(0,d.$)("esri.rest.support.ImagePointParameters")],ut);let pt=class extends Ze{constructor(){super(...arguments),this.point=null}};(0,n._)([(0,p.MZ)({type:he.A,json:{name:"point.value",read:!0,write:!0}})],pt.prototype,"point",void 0),pt=(0,n._)([(0,d.$)("esri.rest.support.ImagePointResult")],pt);var ct=i(76400),dt=i(56333);let mt=class extends(s.A.ClonableMixin(D.A)){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,t,i){t.geometries=null!==e&&void 0!==e&&e.length?{geometryType:(0,de.$B)(e[0]),geometries:e.map(e=>(0,r.A)((0,r.A)({},e.toJSON()),{},{spatialReference:void 0}))}:null}};(0,n._)([(0,p.MZ)({types:[xe.yR]})],mt.prototype,"geometries",void 0),(0,n._)([(0,m.K)("geometries")],mt.prototype,"writeGeometries",null),(0,n._)([(0,p.MZ)({type:[_.jz],json:{write:!0}})],mt.prototype,"rasterIds",void 0),(0,n._)([(0,p.MZ)({type:x.A,json:{name:"outSR",write:!0}})],mt.prototype,"outSpatialReference",void 0),mt=(0,n._)([(0,d.$)("esri.rest.support.ImageToMapMultirayParameters")],mt);let yt=class extends(s.A.ClonableMixin(D.A)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,de.$B)(e),t[i]=(0,r.A)((0,r.A)({},e.toJSON()),{},{spatialReference:void 0}))}};(0,n._)([(0,p.MZ)({types:xe.yR,json:{read:de.rS,write:!0}})],yt.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],yt.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],yt.prototype,"rasterId",void 0),(0,n._)([(0,p.MZ)({type:x.A,json:{name:"outSR",write:!0}})],yt.prototype,"outSpatialReference",void 0),(0,n._)([(0,p.MZ)({json:{name:"options.DOff",write:!0}})],yt.prototype,"depthOffset",void 0),(0,n._)([(0,p.MZ)({json:{name:"options.Adjust",write:!0}})],yt.prototype,"adjust",void 0),yt=(0,n._)([(0,d.$)("esri.rest.support.ImageToMapParameters")],yt);let ht=class extends(s.A.ClonableMixin(D.A)){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};(0,n._)([(0,p.MZ)({type:String,json:{name:"uri",write:!0}})],ht.prototype,"referenceUri",void 0),(0,n._)([(0,p.MZ)({type:Number,json:{write:!0}})],ht.prototype,"rasterId",void 0),ht=(0,n._)([(0,d.$)("esri.rest.support.ImageUrlParameters")],ht);let gt=class extends D.A{constructor(){super(...arguments),this.url=null}};(0,n._)([(0,p.MZ)({json:{name:"imageURL",write:!0}})],gt.prototype,"url",void 0),gt=(0,n._)([(0,d.$)("esri.rest.support.ImageUrlResult")],gt);const ft=new Ie.J({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let vt=class extends(s.A.ClonableMixin(D.A)){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(e,t,i){(null===e||void 0===e?void 0:e.length)&&(t.geometryType=(0,de.$B)(e[0]),t.geometries=e.map(e=>e.toJSON()))}};(0,n._)([(0,p.MZ)({types:[xe.yR]})],vt.prototype,"geometries",void 0),(0,n._)([(0,m.K)("geometries")],vt.prototype,"writeGeometries",null),(0,n._)([(0,p.MZ)({type:K.A,json:{write:!0}})],vt.prototype,"mosaicRule",void 0),(0,n._)([(0,p.MZ)({type:he.A,json:{write:!0}})],vt.prototype,"pixelSize",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],vt.prototype,"constantZ",void 0),(0,n._)([(0,p.MZ)({type:ft.apiValues,json:{read:ft.read,write:ft.write}})],vt.prototype,"baseType",void 0),vt=(0,n._)([(0,d.$)("esri.rest.support.ImageVolumeParameters")],vt);let wt=class extends D.A{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};(0,n._)([(0,p.MZ)({json:{write:!0}})],wt.prototype,"area",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],wt.prototype,"cut",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],wt.prototype,"fill",void 0),(0,n._)([(0,p.MZ)({json:{name:"maxz",write:!0}})],wt.prototype,"maxZ",void 0),(0,n._)([(0,p.MZ)({json:{name:"minz",write:!0}})],wt.prototype,"minZ",void 0),(0,n._)([(0,p.MZ)({json:{name:"meanz",write:!0}})],wt.prototype,"meanZ",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],wt.prototype,"cutCellCount",void 0),(0,n._)([(0,p.MZ)({json:{write:!0}})],wt.prototype,"fillCellCount",void 0),wt=(0,n._)([(0,d.$)("esri.rest.support.ImageVolume")],wt);const Rt=wt;let _t=class extends D.A{constructor(){super(...arguments),this.volumes=[]}};(0,n._)([(0,p.MZ)({type:[Rt],json:{write:!0}})],_t.prototype,"volumes",void 0),_t=(0,n._)([(0,d.$)("esri.rest.support.ImageVolumeResult")],_t);let St=class extends(s.A.ClonableMixin(D.A)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,de.$B)(e),t[i]=JSON.stringify(e))}};(0,n._)([(0,p.MZ)({types:xe.yR,json:{read:de.rS,write:!0}})],St.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],St.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],St.prototype,"rasterId",void 0),(0,n._)([(0,p.MZ)({json:{name:"options.VisibleOnly",write:!0}})],St.prototype,"visibleOnly",void 0),St=(0,n._)([(0,d.$)("esri.rest.support.MapToImageParameters")],St);let bt=class extends D.A{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,t){return e.spatialReference||(e=(0,r.A)((0,r.A)({},e),{},{spatialReference:t.Shape.spatialReference})),he.A.fromJSON(e)}};var At;(0,n._)([(0,p.MZ)({types:xe.yR,json:{name:"Shape",read:de.rS,write:!0}})],bt.prototype,"geometry",void 0),(0,n._)([(0,p.MZ)({json:{name:"Length",write:!0}})],bt.prototype,"length",void 0),(0,n._)([(0,p.MZ)({json:{name:"Area",write:!0}})],bt.prototype,"area",void 0),(0,n._)([(0,p.MZ)({type:he.A,json:{name:"Center",write:!0}})],bt.prototype,"center",void 0),(0,n._)([(0,S.w)("center")],bt.prototype,"readCenter",null),bt=(0,n._)([(0,d.$)("esri.rest.support.MeasureAreaFromImageResult")],bt);let xt=At=class extends D.A{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,de.$B)(e),t[i]=(0,r.A)((0,r.A)({},e.toJSON()),{},{spatialReference:void 0}))}clone(){const e=(0,v.o8)({geometry:this.geometry,rasterId:this.rasterId});return new At(e)}};(0,n._)([(0,p.MZ)({types:xe.yR,json:{name:"fromGeometry",read:de.rS,write:!0}})],xt.prototype,"geometry",void 0),(0,n._)([(0,m.K)("geometry")],xt.prototype,"writeGeometry",null),(0,n._)([(0,p.MZ)({json:{write:!0}})],xt.prototype,"rasterId",void 0),xt=At=(0,n._)([(0,d.$)("esri.rest.support.MeasureFromImageParameters")],xt);let It=class extends D.A{constructor(){super(...arguments),this.geometry=null,this.length=null}};function Mt(e){const t=null===e||void 0===e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const i=[];null!=t.start&&i.push(t.start),null==t.end||i.includes(t.end)||i.push(t.end),e.time=i.join(",")}}async function Ft(e,t,i){t=(0,_.PZ)(tt.A,t);const n=(0,ye.Dl)(e),o=t.geometry?[t.geometry]:[],s=await(0,me.el)(o),a=t.toJSON();Mt(a);const l=null===s||void 0===s?void 0:s[0];null!=l&&(a.geometry=Pt(l));const u=(0,ye.lF)((0,r.A)((0,r.A)({},n.query),{},{f:"json"},a));return(0,ye.jV)(u,i)}async function Dt(e,t,i){t=(0,_.PZ)(it,t);const n=(0,ye.Dl)(e),o=t.geometry?[t.geometry]:[];return(0,me.el)(o).then(e=>{const o=t.toJSON(),s=null===e||void 0===e?void 0:e[0];null!=s&&(o.geometry=JSON.stringify(Pt(s)));const a=(0,ye.lF)((0,r.A)((0,r.A)({},n.query),{},{f:"json"},o)),l=(0,ye.jV)(a,i);return(0,g.A)(n.path+"/identify",l)}).then(e=>nt.fromJSON(e.data))}async function jt(e,t,i,n){const o=(0,ye.Dl)(e),s=await(0,me.el)(i),a=t.toJSON();null!=s[0]&&(a.fromGeometry=JSON.stringify(Pt(s[0]))),null!=s[1]&&(a.toGeometry=JSON.stringify(Pt(s[1])));const l=(0,ye.lF)((0,r.A)((0,r.A)({},o.query),{},{f:"json"},a)),u=(0,ye.jV)(l,n),{data:p}=await(0,g.A)(o.path+"/measure",u);return p}async function Tt(e,t,i){t=(0,_.PZ)(xt,t);const n=(0,ye.Dl)(e),o=t.toJSON(),s=(0,ye.lF)((0,r.A)((0,r.A)({},n.query),{},{f:"json"},o)),a=(0,ye.jV)(s,i),{data:l}=await(0,g.A)(n.path+"/measureFromImage",a);return l}function Pt(e){var t;const i=e.toJSON();return null!==(t=e.spatialReference)&&void 0!==t&&t.imageCoordinateSystem&&(i.spatialReference=Ot(e.spatialReference)),i}function Ot(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:i}=t;return null!=e?i?{icsid:e,icsns:i}:{icsid:e}:{ics:t}}return e.toJSON()}function Nt(e,t){if(!e.imageCoordinateSystem)return(0,I.YX)(e);const i=Ot(e),{icsid:r,icsns:n}=i;return null!=r&&(null==n||null!==t&&void 0!==t&&t.toLowerCase().includes("/"+n.toLowerCase()+"/"))?"0:".concat(r):JSON.stringify(i)}(0,n._)([(0,p.MZ)({types:xe.yR,json:{name:"Shape",read:de.rS,write:!0}})],It.prototype,"geometry",void 0),(0,n._)([(0,p.MZ)({json:{name:"Length",write:!0}})],It.prototype,"length",void 0),It=(0,n._)([(0,d.$)("esri.rest.support.MeasureLengthFromImageResult")],It);var Zt=i(25213),Ct=i(49653);var Vt=i(37713),qt=i(53104),Et=i(14009),Jt=i(97015);const Gt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),zt=(0,_.Qp)(_.GB,{min:0,max:255});const Lt=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new X({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?K.A.fromJSON(t):null}get fieldsIndex(){return this.fields?new ee.A(this.fields):null}set format(e){e&&Gt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){var t;let i=e;null!==(t=i)&&void 0!==t&&t.mosaicMethod&&(i=K.A.fromJSON((0,r.A)((0,r.A)({},i.toJSON()),{},{mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation}))),this._set("mosaicRule",i)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?K.A.fromJSON(i):this._isMosaicRuleSupported(t)?K.A.fromJSON(t):null}writeMosaicRule(e,t,i){const{mosaicRule:r}=this;this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=zt(e))}readObjectIdField(e,t){if(!e){const i=t.fields.find(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=null===i||void 0===i?void 0:i.name}return e}get parsedUrl(){return(0,R.An)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const i=null===t||void 0===t?void 0:t.find(t=>{let{name:i}=t;return i===e});return null===i||void 0===i?void 0:i.renderer.clone()}return this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,i){var r;const n=null===t||void 0===t||null===(r=t.layerDefinition)||void 0===r||null===(r=r.drawingInfo)||void 0===r?void 0:r.renderer,o=(0,ce.LF)(n,i);return null==o?null:("vector-field"===o.type&&t.symbolTileSize&&!n.symbolTileSize&&(o.symbolTileSize=t.symbolTileSize),E(o)||c.A.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),o)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var e,t,i;const r=null!==(e=null===(t=this.fields)||void 0===t?void 0:t.map(e=>e.clone()))&&void 0!==e?e:[];r.push((0,ne.rZ)()),"mosaic-dataset"===this.sourceType&&null!==(i=this.fields)&&void 0!==i&&i.length&&r.push((0,ne.Nd)()),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some(e=>{let{name:t}=e;return"none"===t.toLowerCase()})&&r.push((0,ne.dy)()),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(e=>{let{name:t}=e;return"none"!==t.toLowerCase()}).forEach(e=>{let{name:t}=e;return r.push((0,ne.nq)(t))});const{rasterInfo:n}=this;if(this._isVectorDataSet()){var o;const e=null===n||void 0===n||null===(o=n.multidimensionalInfo)||void 0===o||null===(o=o.variables[0].unit)||void 0===o?void 0:o.trim(),t=(0,ne.DV)(e),i=(0,ne.y6)();r.push(t,i)}if(null!==n&&void 0!==n&&n.multidimensionalInfo&&"raster-dataset"===this.sourceType){const e=(0,ne.AL)(n.multidimensionalInfo);r.push(...e)}const s=null===n||void 0===n?void 0:n.attributeTable;if(null!=s){const e=(0,ne.jC)(s);r.push(...e)}return r}set rasterFunction(e){var t;let i=e;null!==(t=i)&&void 0!==t&&t.rasterFunction&&(i=j.A.fromJSON((0,r.A)((0,r.A)({},i.toJSON()),{},{rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments}))),this._set("rasterFunction",i)}readRasterFunction(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||null!==i&&void 0!==i&&i.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?j.A.fromJSON({rasterFunctionDefinition:t.renderingRule}):j.A.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?x.A.fromJSON(i):null}writePixelType(e,t,i){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=W.e8.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;const{renderer:r,symbolizer:n,pixelFilter:o}=this;if(!this._isPicture()&&r&&n&&!o){await this._updateSymbolizer(n,r);const{bandIds:o}=this;i=await this._symbolize({pixelData:e,bandIds:o,symbolizer:n},t)}return i}destroy(){this._shutdownJobHandler()}async calculateVolume(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsCalculateVolume)throw new a.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,v.o8)(e),this.mosaicRule&&null==e.mosaicRule&&(e.mosaicRule=this.mosaicRule),async function(e,t,i){const n=(t=(0,_.PZ)(vt,t)).toJSON();n.geometries=JSON.stringify(n.geometries);const o=(0,ye.Dl)(e),s=(0,ye.lF)((0,r.A)((0,r.A)({},o.query),{},{f:"json"},n)),a=(0,ye.jV)(s,i),{data:l}=await(0,g.A)("".concat(o.path,"/calculateVolume"),a);return _t.fromJSON({volumes:l.results})}(this.url,e,this._getRequestOptions(t))}async computeAngles(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeAngles)throw new a.A("imagery-layer:compute-angles","this operation is not supported on the input image service");return async function(e,t,i){var n,o;const s=(t=(0,_.PZ)(Se,t)).toJSON();null!=s.angleName&&(s.angleName=s.angleName.join(",")),null!==(n=t)&&void 0!==n&&null!==(n=n.point)&&void 0!==n&&null!==(n=n.spatialReference)&&void 0!==n&&n.imageCoordinateSystem&&(s.point.spatialReference=Ot(t.point.spatialReference)),(null===(o=t)||void 0===o||null===(o=o.spatialReference)||void 0===o?void 0:o.imageCoordinateSystem)&&(s.spatialReference=Nt(t.spatialReference));const a=(0,ye.Dl)(e),l=(0,ye.lF)((0,r.A)((0,r.A)({},a.query),{},{f:"json"},s)),u=(0,ye.jV)(l,i),{data:p}=await(0,g.A)("".concat(a.path,"/computeAngles"),u);return p.spatialReference=p.spatialReference?null!=p.spatialReference.geodataXform?new x.A({wkid:0,imageCoordinateSystem:p.spatialReference}):x.A.fromJSON(p.spatialReference):null,"NaN"===p.north&&(p.north=null),"NaN"===p.up&&(p.up=null),new be(p)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputePixelLocation)throw new a.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return async function(e,t,i){const n=(t=(0,_.PZ)(st,t)).toJSON(),{geometries:o}=t;if(o)for(let r=0;r<o.length;r++){var s;(null===(s=o[r].spatialReference)||void 0===s?void 0:s.imageCoordinateSystem)&&(n.geometries.geometries[r].spatialReference=Ot(o[r].spatialReference))}const a=(0,ye.Dl)(e),l=(0,ye.lF)((0,r.A)((0,r.A)({},a.query),{},{f:"json"},n)),u=(0,ye.jV)(l,i),{data:p}=await(0,g.A)("".concat(a.path,"/computePixelLocation"),u);return at.fromJSON(p)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeHistograms)throw new a.A("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,v.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await Ft(e,t,i),n=(0,ye.Dl)(e),{data:o}=await(0,g.A)("".concat(n.path,"/computeHistograms"),r);return{histograms:o.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new a.A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,v.o8)(e),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await Ft(e,t,i),n=(0,ye.Dl)(e),{data:o}=await(0,g.A)("".concat(n.path,"/computeStatisticsHistograms"),r),{statistics:s}=o;return null!==s&&void 0!==s&&s.length&&s.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:s,histograms:o.histograms}}(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!("base-and-top"===e.operationType?i.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?i.mensuration.supportsHeightFromBaseAndTopShadow:i.mensuration.supportsHeightFromTopAndTopShadow))throw new a.A("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,v.o8)(e),this._applyMosaicRule(e),async function(e,t,i){t=(0,_.PZ)(Xe,t);const r=await jt(e,t,[t.fromGeometry,t.toGeometry],i);return Ye.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!i.mensuration.supportsAreaAndPerimeter||e.is3D&&!i.mensuration.supports3D)throw new a.A("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,v.o8)(e),this._applyMosaicRule(e),async function(e,t,i){t=(0,_.PZ)(Ne,t);const r=await jt(e,t,[t.geometry],i);return Ce.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!i.mensuration.supportsDistanceAndAngle||e.is3D&&!i.mensuration.supports3D)throw new a.A("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,v.o8)(e),this._applyMosaicRule(e),async function(e,t,i){t=(0,_.PZ)(Je,t);const r=await jt(e,t,[t.fromGeometry,t.toGeometry],i);return Ge.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(!i.mensuration.supportsPointOrCentroid||e.is3D&&!i.mensuration.supports3D)throw new a.A("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,v.o8)(e),this._applyMosaicRule(e),async function(e,t,i){t=(0,_.PZ)(ut,t);const r=await jt(e,t,[t.geometry],i);return pt.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsMeasureFromImage)throw new a.A("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new a.A("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return async function(e,t,i){const r=await Tt(e,t,i);return It.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsMeasureFromImage)throw new a.A("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new a.A("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return async function(e,t,i){const r=await Tt(e,t,i);return bt.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}fetchImage(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if((0,f.eO)(c.A.getLogger(this),"`ImageryLayer.fetchImage` is deprecated in favor of 'ImageryLayer.fetchPixels'.",{replacement:"ImageryLayer.fetchPixels",version:"4.33",warnOnce:!0}),null==e||null==t||null==i)throw new a.A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");return this.internalFetchImage(e,t,i,r)}async internalFetchImage(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};await this._updateCurrentRasterInfo();const o=this.getExportImageServiceParameters(e,t,r,n.timeExtent);if(null==o){var s;if(n.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,n.returnImageBitmap?{imageBitmap:await(0,te.m)(e,"".concat(i(this.parsedUrl),"/exportImage"),n.signal)}:{imageOrCanvasElement:e}}const{bandIds:o,rasterInfo:a}=this,l=null!==(s=(null===o||void 0===o?void 0:o.length)||a.bandCount)&&void 0!==s?s:0,u=t*r,p=a.pixelType,c=[];for(let e=0;e<l;e++)c.push(re.A.createEmptyBand(p,u));return{pixelData:{pixelBlock:new re.A({width:t,height:r,pixels:c,mask:new Uint8Array(u),pixelType:p}),extent:e}}}const a=!!n.requestAsImageElement&&!this.pixelFilter,l=a&&!!n.returnImageBitmap,u={imageServiceParameters:o,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:a,returnImageBitmap:l,signal:n.signal};return this._requestArrayBuffer(u)}async fetchPixels(e,t,i){var r,n;let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};await this._initJobHandler(),o.applyRendering&&await this._updateCurrentRasterInfo();const s=o.applyRendering?void 0:new X({layer:this,requestRawData:!0,interpolation:null!==(r=o.interpolation)&&void 0!==r?r:"nearest",bandIds:null!==(n=o.bandIds)&&void 0!==n?n:[]}),a=this.getExportImageServiceParameters(e,t,i,o.timeExtent,s);if(null==a)return{extent:e,pixelBlock:null};delete a.pixelType,delete a.bandIds,delete a.compressionQuality;const l={imageServiceParameters:a,imageProps:{extent:e,width:t,height:i,format:this.format},requestAsImageElement:!1,returnImageBitmap:!1,signal:o.signal},{pixelData:u}=await this._requestArrayBuffer(l);return null!==u&&void 0!==u?u:{extent:e,pixelBlock:null}}fetchKeyProperties(e){return(0,g.A)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?null===e||void 0===e?void 0:e.rasterFunction:null})}).then(e=>e.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new a.A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,g.A)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?null===e||void 0===e?void 0:e.rasterFunction:null})}).then(e=>rt.A.fromJSON(e.data))}getCatalogItemRasterInfo(e,t){const n=(0,r.A)((0,r.A)({},t),{},{query:this._getQueryParams()});return async function(e,t,i){var n,o;const s=(0,ye.Dl)(e),a=(0,ye.lF)((0,r.A)((0,r.A)({},null===s||void 0===s?void 0:s.query),{},{f:"json"})),l=(0,ye.jV)(a,i),u="".concat(null===s||void 0===s?void 0:s.path,"/").concat(t,"/info"),p=(0,g.A)("".concat(u),l),c=(0,g.A)("".concat(u,"/keyProperties"),l),d=await Promise.allSettled([p,c]),m="fulfilled"===d[0].status?d[0].value.data:null,y="fulfilled"===d[1].status?d[1].value.data:null;let h=null;(null===(n=m.statistics)||void 0===n?void 0:n.length)&&(h=m.statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})));const f=b.A.fromJSON(m.extent),v=Math.ceil(f.width/m.pixelSizeX-.1),w=Math.ceil(f.height/m.pixelSizeY-.1),R=f.spatialReference,_=new he.A({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:R}),S=null!==(o=m.histograms)&&void 0!==o&&o.length?m.histograms:null,A=new Ct.A({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new oe.A({width:v,height:w,bandCount:m.bandCount,extent:f,spatialReference:R,pixelSize:_,pixelType:m.pixelType.toLowerCase(),statistics:h,histograms:S,keyProperties:y,storageInfo:A})}(i(this.parsedUrl),e,n)}async getCatalogItemICSInfo(e,t){var n,o;const{data:s}=await(0,g.A)(i(this.parsedUrl)+"/"+e+"/info/ics",(0,r.A)({query:this._getQueryParams()},t)),a=null===s||void 0===s?void 0:s.ics;if(!a)return;let l=null;try{l=(await(0,g.A)(i(this.parsedUrl)+"/"+e+"/info",(0,r.A)({query:this._getQueryParams()},t))).data.extent}catch(E){}if(null===(n=l)||void 0===n||!n.spatialReference)return{ics:a,icsToPixelTransform:null,icsExtent:null,northDirection:null};const u=this.version>=10.7?(0,g.A)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",(0,r.A)({query:this._getQueryParams()},t)).then(e=>e.data).catch(()=>({})):{},p=l.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[l]}),inSR:(0,I.YX)(p),outSR:"0:"+e},d=(0,g.A)(i(this.parsedUrl)+"/project",(0,r.A)({query:this._getQueryParams(c)},t)).then(e=>e.data).catch(()=>({})),m=(l.xmin+l.xmax)/2,y=(l.ymax-l.ymin)/6,h=l.ymin+y,f=[];for(let i=0;i<5;i++)f.push({x:m,y:h+y*i});const v={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:f}),inSR:(0,I.YX)(p),outSR:"0:"+e},w=(0,g.A)(i(this.parsedUrl)+"/project",(0,r.A)({query:this._getQueryParams(v)},t)).then(e=>e.data).catch(()=>({})),R=await Promise.all([u,d,w]);let _=R[0].ipxf;if(null==_){var S,A,M;const e=null===(S=a.geodataXform)||void 0===S?void 0:S.xf_0;"topup"===(null===e||void 0===e||null===(A=e.name)||void 0===A?void 0:A.toLowerCase())&&6===(null===e||void 0===e||null===(M=e.coefficients)||void 0===M?void 0:M.length)&&(_={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const F=b.A.fromJSON(null===(o=R[1])||void 0===o||null===(o=o.geometries)||void 0===o?void 0:o[0]);F&&(F.spatialReference=new x.A({wkid:0,imageCoordinateSystem:a}));const D=R[2].geometries?R[2].geometries.filter(e=>null!=(null===e||void 0===e?void 0:e.x)&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],j=D.length;if(j<3)return{ics:a,icsToPixelTransform:_,icsExtent:F,northDirection:null};let T=0,P=0,O=0,N=0;for(let i=0;i<j;i++)T+=D[i].x,P+=D[i].y,O+=D[i].x*D[i].x,N+=D[i].x*D[i].y;const Z=(j*N-T*P)/(j*O-T*T);let C=0;const V=D[4].x>D[0].x,q=D[4].y>D[0].y;return Z===1/0?C=q?90:270:0===Z?C=V?0:180:Z>0?C=V?180*Math.atan(Z)/Math.PI:180*Math.atan(Z)/Math.PI+180:Z<0&&(C=q?180+180*Math.atan(Z)/Math.PI:360+180*Math.atan(Z)/Math.PI),{ics:a,icsToPixelTransform:_,icsExtent:F,northDirection:C}}async generateRasterInfo(e,t){var n,o;e=(0,_.PZ)(j.A,e);const s=(0,r.A)((0,r.A)({},t),{},{query:this._getQueryParams()});if(!e||"none"===(null===(n=e.functionName)||void 0===n?void 0:n.toLowerCase())||this._isVectorFieldResampleFunction(e))return null!==(o=this.serviceRasterInfo)&&void 0!==o?o:(0,Zt.Tw)(i(this.parsedUrl),this.sourceJSON,s);const l=function(e){const t=JSON.stringify(e),i=t.includes('"rasterFunctionDefinition":{'),r=i?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),n=null===r||void 0===r?void 0:r.map(e=>i?e.slice(8,-18):e.slice(18,-1));return n?n.join("/"):null}(e);if(!l)throw new a.A("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=(0,Zt.X6)(i(this.parsedUrl),e,s);this._functionRasterInfos[l]=u;try{return await u}catch(Pe){throw this._functionRasterInfos[l]=null,Pe}}getExportImageServiceParameters(e,t,n,o,s){var a,l;const u=Nt((e=e.clone().shiftCentralMeridian()).spatialReference,i(this.parsedUrl));null!==s&&void 0!==s||(s=this.exportImageServiceParameters);const p=s.toJSON(),{bandIds:c,noData:d}=p;let{renderingRule:m}=p;const y=null===(a=this.rasterFunction)||void 0===a?void 0:a.rasterFunctionDefinition,h=null===(l=this.renderer)||void 0===l?void 0:l.type,g=!h||"raster-stretch"===h||"raster-colormap"===h||"unique-value"===h||"class-breaks"===h||"raster-shaded-relief"===h;if(null!==c&&void 0!==c&&c.length&&this._hasRasterFunction(this.rasterFunction)&&!y&&g){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:c}};if("Stretch"===m.rasterFunction)e.rasterFunctionArguments.Raster=m.rasterFunctionArguments.Raster,m.rasterFunctionArguments.Raster=e;else if("Colormap"===m.rasterFunction){const t=m.rasterFunctionArguments.Raster;"Stretch"===(null===t||void 0===t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,m.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=m,m=e;p.bandIds=void 0}else p.bandIds=null===c||void 0===c?void 0:c.join(",");Array.isArray(d)&&d.length>0&&(p.noData=d.join(","));const f=this._processMultidimensionalIntersection(null,o,s.mosaicRule);if(f.isOutSide)return null;p.mosaicRule=null!=f.mosaicRule?JSON.stringify(f.mosaicRule):null,o=f.timeExtent,p.renderingRule=this._getRenderingRuleString(j.A.fromJSON(m));const v={};if(null!=o){const{start:e,end:t}=o.toJSON();e&&t&&e===t?v.time=""+e:null==e&&null==t||(v.time="".concat(null!==e&&void 0!==e?e:"null",",").concat(null!==t&&void 0!==t?t:"null"))}return(0,r.A)((0,r.A)({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+n},p),v)}async getSamples(e,t){const i=await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal);if(null===i||void 0===i||!i.operations.supportsGetSamples)throw new a.A("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,v.o8)(e);const{raster:n}=this;return n&&null==e.raster&&(e.raster=n),async function(e,t,i){var n;const o=(t=(0,_.PZ)(ct.A,t)).toJSON();Mt(o),(null===(n=o.outFields)||void 0===n?void 0:n.length)&&(o.outFields=o.outFields.join(","));const s=await(0,me.el)(t.geometry),a=null===s||void 0===s?void 0:s[0];null!=a&&(o.geometry=Pt(a));const l=(0,ye.Dl)(e),u=(0,ye.lF)((0,r.A)((0,r.A)({},l.query),{},{f:"json"},o)),p=(0,ye.jV)(u,i),{data:c}=await(0,g.A)("".concat(l.path,"/getSamples"),p),d=c.samples.map(e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map(e=>Number(e));return(0,r.A)((0,r.A)({},e),{},{pixelValue:t})});return dt.A.fromJSON({samples:d})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){var i;if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsIdentify)throw new a.A("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,v.o8)(e),this.version<10.91&&"extent"===(null===(i=e.geometry)||void 0===i?void 0:i.type)&&(e.geometry=A.A.fromExtent(e.geometry));const r=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(r.isOutSide)throw new a.A("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=r.timeExtent,e.mosaicRule=r.mosaicRule;const{raster:n,rasterFunction:o}=this;return o&&null==e.rasterFunction&&(e.rasterFunction=o),n&&null==e.raster&&(e.raster=n),Dt(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsImageToMap)throw new a.A("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return async function(e,t,i){const n=(t=(0,_.PZ)(yt,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(n.geometry=Pt(t.geometry)),t.depthOffset&&t.adjust||delete n.options;const o=(0,ye.Dl)(e),s=(0,ye.lF)((0,r.A)((0,r.A)({},o.query),{},{f:"json"},n)),a=(0,ye.jV)(s,i),{data:l}=await(0,g.A)("".concat(o.path,"/imageToMap"),a);return(0,de.rS)(l)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsImageToMapMultiray)throw new a.A("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return async function(e,t,i){var n;const o=(t=(0,_.PZ)(mt,t)).toJSON();(null===(n=t.rasterIds)||void 0===n?void 0:n.length)&&(o.rasterIds=t.rasterIds.join(","));const s=(0,ye.Dl)(e),a=(0,ye.lF)((0,r.A)((0,r.A)({},s.query),{},{f:"json"},o)),l=(0,ye.jV)(a,i),{data:u}=await(0,g.A)("".concat(s.path,"/imageToMapMultiray"),l);return(0,de.rS)(u)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsMapToImage)throw new a.A("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return async function(e,t,i){var n,o;const s=(t=(0,_.PZ)(St,t)).toJSON(),a=await(0,me.el)(t.geometry),l=null===a||void 0===a?void 0:a[0];null!=l&&(s.geometry=Pt(l)),t.visibleOnly||delete s.options;const u=null!==(n=null===l||void 0===l?void 0:l.spatialReference)&&void 0!==n?n:null===(o=t.geometry)||void 0===o?void 0:o.spatialReference;u&&(s.inSR=Nt(u));const p=(0,ye.Dl)(e),c=(0,ye.lF)((0,r.A)((0,r.A)({},p.query),{},{f:"json"},s)),d=(0,ye.jV)(c,i),{data:m}=await(0,g.A)("".concat(p.path,"/mapToImage"),d);return(0,de.rS)(m)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsFindImages)throw new a.A("imagery-layer:find-images","findImages operation is not supported on the input image service");return async function(e,t,i){var n;const o=(t=(0,_.PZ)(ge,t)).toJSON(),s=await(0,me.el)([t.fromGeometry,t.toGeometry]);null!=s[0]&&(o.fromGeometry=Pt(s[0]),s[0].spatialReference&&(o.inSR=Nt(s[0].spatialReference))),null!=s[1]&&(o.toGeometry=Pt(s[1])),(null===(n=t.objectIds)||void 0===n?void 0:n.length)&&(o.objectIds=o.objectIds.join(","));const a=(0,ye.Dl)(e),l=(0,ye.lF)((0,r.A)((0,r.A)({},a.query),{},{f:"json"},o)),u=(0,ye.jV)(l,i),{data:p}=await(0,g.A)("".concat(a.path,"/find"),u);return Re.fromJSON(p)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsGetImageUrl)throw new a.A("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return async function(e,t,i){const n=(t=(0,_.PZ)(ht,t)).toJSON(),o=(0,ye.Dl)(e),s=(0,ye.lF)((0,r.A)((0,r.A)({},o.query),{},{f:"json"},n)),a=(0,ye.jV)(s,i),{data:l}=await(0,g.A)("".concat(o.path,"/getImageUrl"),a);return gt.fromJSON(l)}(i(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new Jt.A({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsQueryBoundary)throw new a.A("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=null!==e&&void 0!==e?e:{outSpatialReference:this.spatialReference},async function(e,t,i){t=(0,_.PZ)(Ve,t);const n=(0,ye.Dl)(e),o=t.toJSON();t.outSpatialReference&&(o.outSR=Nt(t.outSpatialReference));const s=(0,ye.lF)((0,r.A)((0,r.A)({},n.query),{},{f:"json"},o)),a=(0,ye.jV)(s,i),{data:l}=await(0,g.A)(n.path+"/queryBoundary",a);return qe.fromJSON(l)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Et.s)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,qt.V)(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(null===t||void 0===t?void 0:t.signal)).operations.supportsQueryGPSInfo)throw new a.A("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=null!==e&&void 0!==e?e:{where:"1=1"},async function(e,t,i){var n,o,s;const a=(t=(0,_.PZ)(Be,t)).toJSON();Mt(a),null!==(n=a.objectIds)&&void 0!==n&&n.length&&(a.objectIds=a.objectIds.join(",")),a.geometry||a.objectIds||a.time||a.where||(a.where="1=1");const l=await(0,me.el)(t.geometry),u=null===l||void 0===l?void 0:l[0];null!=u&&(a.geometry=Pt(u));const p=null!==(o=null===u||void 0===u?void 0:u.spatialReference)&&void 0!==o?o:null===(s=t.geometry)||void 0===s?void 0:s.spatialReference;p&&(a.inSR=Nt(p));const c=(0,ye.Dl)(e),d=(0,ye.lF)((0,r.A)((0,r.A)({},c.query),{},{f:"json"},a)),m=(0,ye.jV)(d,i),{data:y}=await(0,g.A)("".concat(c.path,"/queryGPSInfo"),m);return Ke.fromJSON(y)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Vt.I)(this.url,e,t)}async queryVisibleRasters(e,t){var i;if(!e)throw new a.A("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:n,returnDomainValues:o,returnTopmostRaster:s,showNoDataRecords:l}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let u=!1,p=null,c=null;const d=ne.F_.servicePixelValue.toLowerCase(),m=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(u=e.outFields.some(e=>!e.toLowerCase().startsWith(d)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().startsWith(d)&&e.length>d.length).map(e=>{const t=e.slice(d.length+1);return[this._updateRenderingRulesFunctionName(t,m),t]});p=t.map(e=>new j.A({functionName:e[0]})),c=t.map(e=>e[1]);const{rasterFunction:i}=this;0===p.length?null!==i&&void 0!==i&&i.functionName?(p.push(i),c.push(i.functionName)):p=null:(null===i||void 0===i?void 0:i.functionName)&&!p.some(e=>e.functionName===i.functionName)&&(p.push(i),c.push(i.functionName))}const y=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:h}=this;let g=e.timeExtent||this.timeExtent;if(h){var f;const{isOutside:t,intersection:i}=(0,se.Rp)(h,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:null===(f=this.exportImageServiceParameters.mosaicRule)||void 0===f?void 0:f.multidimensionalDefinition});if(t)throw new a.A("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=(null===i||void 0===i?void 0:i.timeExtent)&&(g=i.timeExtent)}const v=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,g);let w=e.geometry;this.version<10.91&&"extent"===(null===(i=w)||void 0===i?void 0:i.type)&&(w=A.A.fromExtent(w));const R=this._getQueryParams({geometry:w,timeExtent:g,mosaicRule:v,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:p,pixelSize:n,returnCatalogItems:u,returnGeometry:y,raster:this.raster,maxItemCount:s?1:null});delete R.f;const _=new it(R);try{var S,b,x,I;await this._generateRasterInfo(this.rasterFunction);const i=await Dt(this.url,_,{signal:null===t||void 0===t?void 0:t.signal,query:(0,r.A)({},this.customParameters)}),n=e.outFields,s=null!=i.value&&i.value.toLowerCase().includes("nodata"),a=u&&!y&&(null===i||void 0===i||null===(S=i.catalogItems)||void 0===S?void 0:S.features.length)&&(l||!s),p=this.multidimensionalInfo&&"raster-dataset"===this.sourceType?(0,se.XU)({rasterInfo:this.rasterInfo,multidimensionalDefinition:null===v||void 0===v?void 0:v.multidimensionalDefinition,timeExtent:g,multidimensionalSubset:this.multidimensionalSubset}):null;if(!a)return this._processVisibleRastersResponse(i,{returnDomainValues:o,templateRRFunctionNames:c,showNoDataRecords:l,templateFields:n,effectiveMultidimensionalDefinition:p});const d=this.objectIdField||"ObjectId",m=null!==(b=null===(x=i.catalogItems)||void 0===x?void 0:x.features)&&void 0!==b?b:[],h=m.map(e=>{var t;return null===(t=e.attributes)||void 0===t?void 0:t[d]}),f=new Jt.A({objectIds:h,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[d]}),w=await this.queryRasters(f);return null!==w&&void 0!==w&&null!==(I=w.features)&&void 0!==I&&I.length&&w.features.forEach(t=>{m.forEach(i=>{i.attributes[d]===t.attributes[d]&&t.geometry&&(i.geometry=t.geometry.clone(),null!=e.outSpatialReference&&(i.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(i,{returnDomainValues:o,templateRRFunctionNames:c,showNoDataRecords:l,templateFields:n,effectiveMultidimensionalDefinition:p})}catch(M){throw new a.A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,g.A)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics}),n=(0,g.A)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms}),o=await Promise.all([r,n]);return o[0]&&o[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:o[0]||null,histograms:o[1]||null}}getMultidimensionalSubsetVariables(e){const t=null!==e&&void 0!==e?e:this.serviceRasterInfo.multidimensionalInfo;return(0,se.z2)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,Zt.Tw)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,Zt.E9)(e,t),e)),n=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,o=this._getRasterFunctionInfos();return Promise.all([r,n,o]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),c.A.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([(0,w.wB)(()=>this.rasterFunction,e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})})]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)})}_combineMosaicRuleWithTimeExtent(e,t){var i;const r=this.timeInfo,{multidimensionalInfo:n}=this.serviceRasterInfo;if(null==e||null==n||null==t||null==(null===r||void 0===r?void 0:r.startField))return e;const{startField:o}=r,s=n.variables.some(e=>e.dimensions.some(e=>e.name===o))?o:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=null===(i=e.multidimensionalDefinition)||void 0===i?void 0:i.filter(e=>e.dimensionName!==s),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const a=e.multidimensionalDefinition.filter(e=>e.dimensionName===s),l=null!=t.start?t.start.getTime():null,u=null!=t.end?t.end.getTime():null,p=null==l||null==u||l===u,c=p?[l||u]:[[l,u]],d=this.version>=10.8;if(a.length)a.forEach(e=>{e.dimensionName===s&&(d?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=p,e.values=c))});else if(!d){const t=e.multidimensionalDefinition.filter(e=>null!=e.variableName&&null==e.dimensionName);t.length?t.forEach(e=>{e.dimensionName=s,e.isSlice=p,e.values=c}):e.multidimensionalDefinition.push(new F.A({variableName:"",dimensionName:s,isSlice:p,values:c}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(e=>!(!e.variableName&&!e.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var i;if(!(await this._fetchCapabilities(null===(i=t)||void 0===i?void 0:i.signal)).operations.supportsQuery)throw new a.A("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,_.PZ)(Jt.A,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query=(0,r.A)((0,r.A)({},t.query),{},{raster:this.raster})),{query:e,requestOptions:t}}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:i}=this;return"unique-value"===e.type&&this._hasRasterFunction(i)&&1===(null===t||void 0===t?void 0:t.bandCount)&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,ue.fp)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:n}=await(0,g.A)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,n&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null===(t=r.capabilities)||void 0===t?void 0:t.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly"))>-1)throw new a.A("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null===(t=e.fields)||void 0===t?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const i=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&!((null===(t=e.fields)||void 0===t?void 0:t.length)>1);return i||r}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:i}=e,r="resample"===(null===t||void 0===t?void 0:t.toLowerCase()),n=(null===i||void 0===i?void 0:i.ResampleType)||(null===i||void 0===i?void 0:i.resampleType);return r&&(7===n||10===n)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){var r,n,o;const t=null===(r=this.mosaicRule)||void 0===r||null===(r=r.multidimensionalDefinition)||void 0===r?void 0:r[0].variableName,a=(0,ue.I8)({variableName:t,rasterFunctionName:null===(n=this.rasterFunction)||void 0===n?void 0:n.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&i.bandCount>=3){var s;const e=null!==(s=null===a||void 0===a?void 0:a.bandIds)&&void 0!==s?s:(0,ue.ci)(i);!e||3===i.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=null!==(o=null===a||void 0===a?void 0:a.renderer)&&void 0!==o?o:(0,ue.PD)(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:t}));const l=(0,ue.$P)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=i):this.symbolizer=new pe.A({rendererJSON:l,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=(null===e||void 0===e?void 0:e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return(0,r.A)((0,r.A)({raster:t,viewId:i,f:"json"},e),this.customParameters)}_getRequestOptions(e){return(0,r.A)((0,r.A)({},e),{},{query:(0,r.A)((0,r.A)({},null===e||void 0===e?void 0:e.query),this.customParameters)})}_decodePixelBlock(e,t,i){return this._rasterJobHandler?this._rasterJobHandler.decode({data:e,options:t}):(0,ae.D)(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){var r;if(1===t.length&&"none"===t[0].name.toLowerCase())return t;return null===(r=(await(0,g.A)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)||void 0===r?void 0:r.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:n,returnImageBitmap:o,signal:s}=e;if(n&&this._canRequestImageElement(t.format)){const n="".concat(i(this.parsedUrl),"/exportImage"),{data:a}=await(0,g.A)(n,{responseType:o?"blob":"image",query:this._getQueryParams((0,r.A)((0,r.A)({f:"image"},this.refreshParameters),e.imageServiceParameters)),signal:s});return a instanceof Blob?{imageBitmap:await(0,te.m)(a,n,s),params:t}:{imageOrCanvasElement:a,params:t}}const l=this._initJobHandler(),u=(0,g.A)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams((0,r.A)({f:"image"},e.imageServiceParameters)),signal:s}),p=(await Promise.all([u,l]))[0].data,c=t.format||"jpgpng";let d=c;if("bsq"!==d&&"bip"!==d&&(d=(0,ae.g)(p)),!d)throw new a.A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(p)));const m={signal:s},y="gif"===c||"bmp"===c||c.includes("png")&&("png"===d||"jpg"===d)?(0,ae.D)(p,(0,r.A)({useCanvas:!0},t),m):this._decodePixelBlock(p,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:c},m);return{pixelData:{pixelBlock:await y,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify(null===(t=this.defaultMosaicRule)||void 0===t?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,se.fy)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){var i;this.mosaicRule=this.mosaicRule||new K.A;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==(null===(i=this.rasterFunction.functionName)||void 0===i?void 0:i.toLowerCase())&&t.forEach(e=>e.variableName=""),t=t.filter(e=>{let{variableName:t,dimensionName:i}=e;return t&&"*"!==t||i}),(null===e||void 0===e||!e.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){var i,r;t=t||{};const n=e.value,{templateRRFunctionNames:o,showNoDataRecords:s,returnDomainValues:a,templateFields:l}=t,u=e.processedValues;let p=null===(i=e.catalogItems)||void 0===i?void 0:i.features,c=(null===(r=e.properties)||void 0===r||null===(r=r.Values)||void 0===r?void 0:r.map(e=>e.replaceAll(/ /gi,", ")))||[];const d=this.objectIdField||"ObjectId",m="string"==typeof n&&n.toLowerCase().includes("nodata"),y=[];if(n&&!p&&(!m||s)){const e={};e[d]=0,c=[n],p=[new h.A({geometry:this.fullExtent,attributes:e})],this.multidimensionalInfo&&"raster-dataset"===this.sourceType&&(0,ne.eS)(this.rasterFields,e,t.effectiveMultidimensionalDefinition)}if(!p)return[];this._updateResponseFieldNames(p,l),m&&!s&&(p=[]);const{itemPixelValue:g,servicePixelValue:f}=ne.F_,v=this.rasterFields.some(e=>e.name===g);for(let h=0;h<p.length;h++){const e=p[h];if(null!=n){const t=c[h],i=this.rasterFunction&&u&&u.length>0&&o&&o.length>0&&o.includes(this.rasterFunction.functionName)?u[o.indexOf(this.rasterFunction.functionName)]:n;if("nodata"===t.toLowerCase()&&!s)continue;v&&(e.attributes[g]=t),e.attributes[f]=i,this._updateFeatureWithMagDirValues(e,t);const r=this.fields&&this.fields.length>0;let a=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?r?t:n:i;this.rasterFunction||(a=r?t:n),this._updateFeatureWithRasterAttributeTableValues(e,a)}if(e.sourceLayer=e.layer=this,a&&this._updateFeatureWithDomainValues(e),o&&u&&o.length===u.length)for(let t=0;t<o.length;t++){const i="".concat(ne.F_.servicePixelValue,".").concat(o[t]);e.attributes[i]=u[t]}y.push(p[h])}return y}_processMultidimensionalIntersection(e,t,i){var r;const{multidimensionalSubset:n}=this;if(!n)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(n){const{isOutside:i,intersection:r}=(0,se.Rp)(n,{geometry:e,timeExtent:t});if(i)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=(null===r||void 0===r?void 0:r.timeExtent)&&(t=r.timeExtent)}if(null!==(r=i=this._combineMosaicRuleWithTimeExtent(i,t))&&void 0!==r&&r.multidimensionalDefinition){const{isOutside:e}=(0,se.Rp)(n,{multidimensionalDefinition:i.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==i)return;const{features:r,fields:n}=i,o=n.map(e=>e.name).find(e=>"value"===e.toLowerCase());if(!o)return;const s=r.filter(e=>e.attributes[o]===(null!=t?parseInt(t,10):null));s&&s[0]&&n.forEach(t=>{const i=ne.ER+t.name;e.attributes[i]=s[0].attributes[t.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map(e=>parseFloat(e)),r=i.map(e=>[e]),n=i.map(e=>({minValue:e,maxValue:e,noDataValue:null})),o=new re.A({height:1,width:1,pixelType:"f32",pixels:r,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:o,extent:new b.A(0,0,0,0,this.spatialReference)});const s="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[o.pixels[0][0],o.pixels[1][0]]:(0,le.Lu)([o.pixels[0][0],o.pixels[1][0]]);e.attributes[ne.F_.magnitude]=s[0],e.attributes[ne.F_.direction]=s[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.find(e=>e.code===i);r&&(e.attributes[t.name]=r.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;null!=i&&e.forEach(e=>{if(null!==e&&void 0!==e&&e.attributes)for(const n of t){var r;const t=null===(r=i.get(n))||void 0===r?void 0:r.name;t&&t!==n&&(e.attributes[n]=e.attributes[t],delete e.attributes[t])}})}_getRenderingRuleString(e){if(e){var t;let i=e.toJSON();return i=null!==(t=i.rasterFunctionDefinition)&&void 0!==t?t:i,(i.thumbnail||i.thumbnailEx)&&(i.thumbnail=i.thumbnailEx=null),JSON.stringify(i)}return null}_hasRasterFunction(e){return null!=(null===e||void 0===e?void 0:e.functionName)&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return(null===e||void 0===e?void 0:e.name)&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:i,rasterFunction:r}=this;r&&null==e.rasterFunction&&(e.rasterFunction=r),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}async _updateCurrentRasterInfo(e){if(this.renderer||this.symbolizer){const t=await this._generateRasterInfo(this.rasterFunction,{signal:e});t&&(this.rasterInfo=t)}}_applyMosaicRule(e){const{raster:t,mosaicRule:i}=this;i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){var t,i;const r=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:n,maxRecordCount:o}=e,s=r.includes("image"),a="esriImageServiceDataTypeElevation"===e.serviceDataType,l=!(!e.spatialReference&&(null===(t=e.extent)||void 0===t||!t.spatialReference)),u=r.includes("edit"),p=r.includes("mensuration")&&l,c=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map(e=>e.trim()),d=p&&c.includes("basic"),m=this._isMosaicDataset(e)&&r.includes("catalog"),y=r.includes("download"),h=n>=10.7&&a||n>=11.4&&(a||p&&c.includes("3d")),g=m&&e.fields&&e.fields.length>0,f=g&&e.supportsAdvancedQueries?e.advancedQueryCapabilities:void 0;return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:s,supportsExportImage:s,supportsIdentify:s,supportsImageToMap:n>=11.2&&m,supportsImageToMapMultiray:n>=11.2&&m,supportsMapToImage:n>=11.2&&m,supportsFindImages:n>=11.2&&m,supportsGetImageUrl:n>=11.3&&y,supportsMeasure:p,supportsMeasureFromImage:n>=11.2,supportsDownload:y,supportsQuery:g,supportsGetSamples:n>=10.2&&s,supportsProject:n>=10.3&&s,supportsComputeStatisticsHistograms:n>=10.4&&s,supportsQueryBoundary:n>=10.6&&s,supportsCalculateVolume:h,supportsComputePixelLocation:n>=10.7&&m,supportsComputeAngles:n>=10.91,supportsQueryGPSInfo:n>=11.2&&m,supportsAdd:u,supportsDelete:u,supportsEditing:u,supportsUpdate:u,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:o,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,supportsStatistics:!(null===f||void 0===f||!f.supportsStatistics),supportsOrderBy:!(null===f||void 0===f||!f.supportsOrderBy),supportsDistinct:!(null===f||void 0===f||!f.supportsDistinct),supportsPagination:!(null===f||void 0===f||!f.supportsPagination),supportsPaginationOnAggregatedQueries:!(null===f||void 0===f||!f.supportsPaginationOnAggregatedQueries),supportsStandardizedQueriesOnly:!(null===f||void 0===f||!f.useStandardizedQueries),supportsPercentileStatistics:!(null===f||void 0===f||!f.supportsPercentileStatistics),supportsCentroid:!(null===f||void 0===f||!f.supportsReturningGeometryCentroid),supportsCurrentUser:!1,supportsDistance:!(null===f||void 0===f||!f.supportsQueryWithDistance),supportsExtent:!(null===f||void 0===f||!f.supportsReturningQueryExtent),supportsGeometryProperties:!(null===f||void 0===f||!f.supportsReturningGeometryProperties),supportsHavingClause:!(null===f||void 0===f||!f.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:null!==(i=null===f||void 0===f?void 0:f.supportsSqlExpression)&&void 0!==i?i:!!f,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(null===f||void 0===f||!f.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:d,supportsAreaAndPerimeter:d,supportsPointOrCentroid:d,supportsHeightFromBaseAndTop:p&&c.includes("base-top height"),supportsHeightFromBaseAndTopShadow:p&&c.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:p&&c.includes("top-top shadow height"),supports3D:p&&c.includes("3d")}}}};function i(e){var t;return null!==(t=null===e||void 0===e?void 0:e.path)&&void 0!==t?t:""}return(0,n._)([(0,p.MZ)({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,n._)([(0,S.w)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,n._)([(0,p.MZ)()],t.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,p.MZ)({type:[_.jz],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,n._)([(0,S.w)("bandIds")],t.prototype,"readBandIds",null),(0,n._)([(0,p.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,n._)([(0,S.w)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,n._)([(0,p.MZ)({type:Number})],t.prototype,"compressionQuality",void 0),(0,n._)([(0,m.K)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,n._)([(0,p.MZ)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,n._)([(0,m.K)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,n._)([(0,p.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,n._)([(0,p.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,n._)([(0,S.w)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,n._)([(0,p.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,n._)([(0,p.MZ)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,n._)([(0,p.MZ)()],t.prototype,"rasterInfo",void 0),(0,n._)([(0,p.MZ)({readOnly:!0,type:[Y.A]})],t.prototype,"fields",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,n._)([(0,p.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),(0,n._)([(0,S.w)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,n._)([(0,p.MZ)({type:b.A})],t.prototype,"fullExtent",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,n._)([(0,p.MZ)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,n._)([(0,p.MZ)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,n._)([(0,p.MZ)({type:String,json:{type:W.SZ.jsonValues,read:W.SZ.read,write:W.SZ.write}})],t.prototype,"interpolation",void 0),(0,n._)([(0,p.MZ)()],t.prototype,"minScale",void 0),(0,n._)([(0,S.w)("service","minScale")],t.prototype,"readMinScale",null),(0,n._)([(0,p.MZ)()],t.prototype,"maxScale",void 0),(0,n._)([(0,S.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,n._)([(0,p.MZ)({type:K.A})],t.prototype,"mosaicRule",null),(0,n._)([(0,S.w)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,n._)([(0,m.K)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,n._)([(0,p.MZ)()],t.prototype,"multidimensionalInfo",void 0),(0,n._)([(0,p.MZ)({type:ie.A,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,n._)([(0,p.MZ)({json:{type:_.jz}})],t.prototype,"noData",void 0),(0,n._)([(0,m.K)("noData")],t.prototype,"writeNoData",null),(0,n._)([(0,p.MZ)({type:String,json:{type:W.hm.jsonValues,read:W.hm.read,write:W.hm.write}})],t.prototype,"noDataInterpretation",void 0),(0,n._)([(0,p.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,n._)([(0,S.w)("objectIdField")],t.prototype,"readObjectIdField",null),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"geometryType",void 0),(0,n._)([(0,p.MZ)({})],t.prototype,"typeIdField",void 0),(0,n._)([(0,p.MZ)({})],t.prototype,"types",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,n._)([(0,p.MZ)({type:Function})],t.prototype,"pixelFilter",void 0),(0,n._)([(0,p.MZ)()],t.prototype,"raster",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,n._)([(0,S.w)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,n._)([(0,p.MZ)()],t.prototype,"viewId",void 0),(0,n._)([(0,p.MZ)()],t.prototype,"renderer",null),(0,n._)([(0,p.MZ)({types:ce.uy,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ce.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"internalRenderer",null),(0,n._)([(0,S.w)("internalRenderer")],t.prototype,"readRenderer",null),(0,n._)([(0,m.K)("internalRenderer")],t.prototype,"writeRenderer",null),(0,n._)([(0,p.MZ)({clonable:!1})],t.prototype,"symbolizer",void 0),(0,n._)([(0,p.MZ)(M.ke)],t.prototype,"opacity",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"rasterFields",null),(0,n._)([(0,p.MZ)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,n._)([(0,p.MZ)({type:j.A,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),(0,n._)([(0,S.w)("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"serviceDataType",void 0),(0,n._)([(0,p.MZ)({readOnly:!0,type:x.A})],t.prototype,"spatialReference",void 0),(0,n._)([(0,S.w)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,n._)([(0,p.MZ)({type:W.e8.apiValues,json:{read:W.e8.read,type:W.e8.jsonValues}})],t.prototype,"pixelType",void 0),(0,n._)([(0,m.K)("pixelType")],t.prototype,"writePixelType",null),(0,n._)([(0,p.MZ)({constructOnly:!0,type:oe.A})],t.prototype,"serviceRasterInfo",void 0),(0,n._)([(0,p.MZ)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,p.MZ)(M.OZ)],t.prototype,"url",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],t.prototype,"version",void 0),(0,n._)([(0,S.w)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,n._)([(0,d.$)("esri.layers.mixins.ArcGISImageService")],t),t};var Ut=i(19502),Bt=i(65624),kt=i(31362),Qt=i(11270),$t=i(94729),Ht=i(84008),Kt=i(8350),Wt=i(21617),Xt=i(5682),Yt=i(78817),ei=i(38278),ti=i(30973),ii=i(61701);let ri=class extends((0,Bt.dM)((0,Yt.e)((0,Xt.j)((0,Qt.q)((0,$t.A)((0,Kt.H)(Lt((0,Ht.G)((0,Wt.J)((0,kt.d)((0,Ut.b)((0,l.P)(s.A.ClonableMixin(y.A)))))))))))))){constructor(){super(...arguments),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,u.sg)(async(e,t,r)=>{const{save:n,saveAs:o}=await i.e(20964).then(i.bind(i,20964));switch(e){case ii.X.SAVE:return n(this,t);case ii.X.SAVE_AS:return o(this,r,t)}})}normalizeCtorArgs(e,t){return"string"==typeof e?(0,r.A)({url:e},t):e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(u.QP).then(()=>this._fetchService(t))),Promise.resolve(this)}get legendEnabled(){var e;return!this._isPreviewLayer&&(null===(e=this._get("legendEnabled"))||void 0===e||e)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,i){var r;const n="vector-field"===(null===(r=this.renderer)||void 0===r?void 0:r.type);t[i]=n?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var e;return!(!this.raster||null===(e=this.url)||void 0===e||!e.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const{rasterFields:t}=this,i=new Set,n=ne.F_.itemPixelValue.toLowerCase(),o="raster-dataset"===this.sourceType,s=ne.Oo.toLowerCase(),a="".concat(ne.F_.servicePixelValue.toLowerCase(),".");for(const r of t){const e=r.name.toLowerCase();e===n||e.startsWith(a)||o&&e.startsWith(s)||i.add(r.name)}const l=(0,ti.tn)({fields:t,title:this.title},(0,r.A)((0,r.A)({},e),{},{visibleFieldNames:i})),{rasterInfo:u}=this;return null!==l&&void 0!==l&&l.fieldInfos&&u&&(0,ne.h4)(l.fieldInfos,u),l}queryFeatures(e,t){return this.queryRasters(e,t).then(e=>{if(null!==e&&void 0!==e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(ii.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(ii.X.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return(0,ei.D)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(null!==t&&void 0!==t&&t.messages){const e="".concat(t.origin,"/").concat(t.layerContainerType||"operational-layers");t.messages.push(new a.A("layer:unsupported","Imagery preview layer (".concat(this.title,", ").concat(this.id,") of type '").concat(this.declaredClass,"' are not supported in the context of '").concat(e,"'"),{layer:this}))}return null}};(0,n._)([(0,p.MZ)(M.fV)],ri.prototype,"legendEnabled",null),(0,n._)([(0,p.MZ)({type:["show","hide"]})],ri.prototype,"listMode",null),(0,n._)([(0,p.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ri.prototype,"isReference",void 0),(0,n._)([(0,p.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],ri.prototype,"operationalLayerType",void 0),(0,n._)([(0,m.K)("web-map","operationalLayerType")],ri.prototype,"writeOperationalLayerType",null),(0,n._)([(0,p.MZ)(M.M6)],ri.prototype,"popupEnabled",void 0),(0,n._)([(0,p.MZ)({type:o.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],ri.prototype,"popupTemplate",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],ri.prototype,"defaultPopupTemplate",null),(0,n._)([(0,p.MZ)({readOnly:!0,json:{read:!1}})],ri.prototype,"type",void 0),(0,n._)([(0,p.MZ)({readOnly:!0})],ri.prototype,"_isPreviewLayer",null),ri=(0,n._)([(0,d.$)("esri.layers.ImageryLayer")],ri);const ni=ri},53104:(e,t,i)=>{i.d(t,{V:()=>s});var r=i(54994),n=i(36643),o=i(97015);async function s(e,t,i,s){var l,u;const p=(0,r.Dl)(e),{data:c}=await(0,n.Pk)(p,o.A.from(t),i,s);return null!==(l=null!==(u=c.objectIds)&&void 0!==u?u:a(c.uniqueIds))&&void 0!==l?l:[]}function a(e){if(e)return function(e){return!Array.isArray(e[0])}(e)?e:e.map(e=>JSON.stringify(e))}},78238:(e,t,i)=>{function r(e){const t={};for(const i in e){if("declaredClass"===i)continue;const n=e[i];if(null!=n&&"function"!=typeof n)if(Array.isArray(n)){t[i]=[];for(let e=0;e<n.length;e++)t[i][e]=r(n[e])}else"object"==typeof n?n.toJSON&&(t[i]=JSON.stringify(n)):t[i]=n}return t}i.d(t,{z:()=>r})}}]);
//# sourceMappingURL=43052.033a6ed8.chunk.js.map