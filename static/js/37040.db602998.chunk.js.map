{"version":3,"file":"static/js/37040.db602998.chunk.js","mappings":"yLAI6H,MAAMA,EAAEC,WAAAA,CAAYD,GAAGE,KAAKC,KAAKH,EAAEE,KAAKE,KAAK,uBAAuBF,KAAKG,SAASC,EAAAA,GAAEC,aAAa,EAAE,SAASC,EAAEF,GAAG,MAAM,0BAA0B,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGF,KAAI,CAACK,eAAeC,EAAEJ,GAAG,MAAMN,EAAE,IAAIW,KAAK,CAACL,IAAIE,QAAQR,EAAEY,OAAO,OAAOC,KAAKC,MAAMN,EAAE,CAACC,eAAeM,EAAEP,EAAEE,GAAG,GAAGA,IAAIJ,EAAAA,GAAEC,cAAc,OAAO,IAAIP,EAAEQ,GAAG,MAAMO,EAAE,IAAIJ,KAAK,CAACH,GAAG,CAACJ,KAAKM,IAAI,IAAIM,EAAEC,IAAIC,gBAAgBH,GAAG,OAAOL,GAAG,IAAI,aAAaM,GAAG,QAAQ,MAAM,IAAI,YAAYA,GAAG,QAAQ,MAAMG,EAAE,IAAIC,MAAM,IAAGC,EAAAA,EAAAA,GAAI,eAAe,OAAO,IAAIC,QAAS,CAAChB,EAAEN,KAAK,MAAMQ,EAAEA,KAAKO,IAAIT,EAAEa,IAAIT,EAAEJ,IAAIS,IAAIf,EAAEM,IAAIS,EAAEA,KAAKE,IAAIM,gBAAgBP,GAAGG,EAAEK,oBAAoB,OAAOhB,GAAGW,EAAEK,oBAAoB,QAAQd,IAAIS,EAAEM,iBAAiB,OAAOjB,GAAGW,EAAEM,iBAAiB,QAAQf,GAAGS,EAAEO,IAAIV,IAAK,IAAIG,EAAEO,IAAIV,QAAQG,EAAEQ,QAAQ,CAAC,MAAMC,GAAGC,QAAQC,KAAK,mCAAmC,CAAC,OAAOb,IAAIM,gBAAgBP,GAAGG,CAAC,C","sources":["../node_modules/@arcgis/core/views/3d/glTF/internal/resourceUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import{TextureEncodingMimeType as e}from\"../../webgl-engine/lib/basicInterfaces.js\";class t{constructor(t){this.data=t,this.type=\"encoded-mesh-texture\",this.encoding=e.KTX2_ENCODING}}function n(e){return\"encoded-mesh-texture\"===e?.type}async function r(e){const t=new Blob([e]),n=await t.text();return JSON.parse(n)}async function o(n,r){if(r===e.KTX2_ENCODING)return new t(n);const o=new Blob([n],{type:r});let c=URL.createObjectURL(o);switch(r){case\"image/jpeg\":c+=\"#.jpg\";break;case\"image/png\":c+=\"#.png\"}const s=new Image;if(has(\"esri-iPhone\"))return new Promise(((e,t)=>{const n=()=>{o(),e(s)},r=e=>{o(),t(e)},o=()=>{URL.revokeObjectURL(c),s.removeEventListener(\"load\",n),s.removeEventListener(\"error\",r)};s.addEventListener(\"load\",n),s.addEventListener(\"error\",r),s.src=c}));try{s.src=c,await s.decode()}catch(a){console.warn(\"Failed decoding HTMLImageElement\")}return URL.revokeObjectURL(c),s}export{t as EncodedMeshTexture,o as imageFromBinaryData,n as isEncodedMeshTexture,r as jsonFromBinaryData};\n"],"names":["t","constructor","this","data","type","encoding","e","KTX2_ENCODING","n","async","r","Blob","text","JSON","parse","o","c","URL","createObjectURL","s","Image","has","Promise","revokeObjectURL","removeEventListener","addEventListener","src","decode","a","console","warn"],"sourceRoot":""}