{"version":3,"file":"static/js/82538.498cbe6c.chunk.js","mappings":"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","sources":["../node_modules/lit-html/src/directives/repeat.ts","../node_modules/@esri/calcite-components/dist/chunks/global.js","../node_modules/@esri/calcite-components/dist/chunks/responsive.js","../node_modules/@esri/calcite-components/dist/components/calcite-carousel/customElement.js","../node_modules/@esri/calcite-components/dist/components/calcite-progress/customElement.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>,\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an array but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.3.3 */\nconst calciteContainerSizeWidthXxs = { max: \"320px\" };\nconst calciteContainerSizeWidthXs = { max: \"476px\" };\nconst calciteContainerSizeWidthSm = { max: \"768px\" };\nconst calciteContainerSizeWidthMd = { max: \"1152px\" };\nconst calciteSpacingFixedSm = \"8px\";\nconst calciteSpacingFixedMd = \"12px\";\nconst calciteSpacingFixedXl = \"16px\";\nconst calciteSpacingBase = \"2px\";\nconst calciteSpacingXxs = \"0.25rem\";\nconst calciteSpacingSm = \"0.5rem\";\nexport {\n  calciteSpacingFixedMd as a,\n  calciteSpacingFixedSm as b,\n  calciteSpacingFixedXl as c,\n  calciteContainerSizeWidthXxs as d,\n  calciteContainerSizeWidthXs as e,\n  calciteContainerSizeWidthSm as f,\n  calciteContainerSizeWidthMd as g,\n  calciteSpacingXxs as h,\n  calciteSpacingBase as i,\n  calciteSpacingSm as j\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.3.3 */\nimport { d as calciteContainerSizeWidthXxs, e as calciteContainerSizeWidthXs, f as calciteContainerSizeWidthSm, g as calciteContainerSizeWidthMd } from \"./global.js\";\nconst breakpoints = {\n  width: {\n    medium: cssLengthToNumber(calciteContainerSizeWidthMd.max),\n    small: cssLengthToNumber(calciteContainerSizeWidthSm.max),\n    xsmall: cssLengthToNumber(calciteContainerSizeWidthXs.max),\n    xxsmall: cssLengthToNumber(calciteContainerSizeWidthXxs.max)\n  }\n};\nfunction cssLengthToNumber(length) {\n  return parseInt(length);\n}\nexport {\n  breakpoints as b\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.3.3 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { repeat } from \"lit/directives/repeat.js\";\nimport { css, nothing, html } from \"lit\";\nimport { LitElement, createEvent, safeClassMap } from \"@arcgis/lumina\";\nimport { createRef, ref } from \"lit-html/directives/ref.js\";\nimport { y as whenAnimationDone, s as slotChangeGetAssignedElements, d as focusElementInGroup, g as getElementDir } from \"../../chunks/dom.js\";\nimport { g as guid } from \"../../chunks/guid.js\";\nimport { u as updateHostInteraction, I as InteractiveContainer } from \"../../chunks/interactive.js\";\nimport { c as createObserver } from \"../../chunks/observers.js\";\nimport { b as breakpoints } from \"../../chunks/responsive.js\";\nimport { g as getRoundRobinIndex } from \"../../chunks/array.js\";\nimport { u as useT9n } from \"../../chunks/useT9n.js\";\nimport { u as useSetFocus } from \"../../chunks/useSetFocus.js\";\nconst DURATION = 6e3;\nconst CSS = {\n  container: \"container\",\n  containerOverlaid: \"container--overlaid\",\n  containerEdged: \"container--edged\",\n  itemContainer: \"item-container\",\n  itemContainerForward: \"item-container--forward\",\n  itemContainerBackward: \"item-container--backward\",\n  pagination: \"pagination\",\n  paginationItems: \"pagination-items\",\n  paginationItem: \"pagination-item\",\n  paginationItemIndividual: \"pagination-item--individual\",\n  paginationItemVisible: \"pagination-item--visible\",\n  paginationItemOutOfRange: \"pagination-item--out-of-range\",\n  paginationItemSelected: \"pagination-item--selected\",\n  paginationItemRangeEdge: \"pagination-item--range-edge\",\n  pageNext: \"page-next\",\n  pagePrevious: \"page-previous\",\n  autoplayControl: \"autoplay-control\",\n  autoplayProgress: \"autoplay-progress\"\n};\nconst ICONS = {\n  chevronLeft: \"chevron-left\",\n  chevronRight: \"chevron-right\",\n  inactive: \"bullet-point\",\n  active: \"bullet-point-large\",\n  pause: \"pause-f\",\n  play: \"play-f\"\n};\nconst centerItemsByBreakpoint = {\n  medium: 7,\n  small: 5,\n  xsmall: 3,\n  xxsmall: 1\n};\nconst idPrefix = \"calcite-carousel-container\";\nconst IDS = {\n  host: (id) => `${idPrefix}-${id}`\n};\nconst styles = css`:host{--calcite-internal-color-focus: var( --calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)) )}:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:flex;inline-size:100%;--calcite-internal-carousel-pagination-space: 1.5rem;--calcite-internal-carousel-pagination-space-wide: 3.5rem;--calcite-internal-carousel-pagination-background-color: var( --calcite-carousel-pagination-background-color, transparent );--calcite-internal-carousel-pagination-background-color-hover: var( --calcite-carousel-pagination-background-color-hover, transparent );--calcite-internal-carousel-pagination-background-color-press: var( --calcite-carousel-pagination-background-color-press, transparent );--calcite-internal-carousel-pagination-background-color-selected: var( --calcite-carousel-pagination-background-color-selected, transparent );--calcite-internal-carousel-pagination-overlay-background-color: var( --calcite-carousel-pagination-background-color, var(--calcite-color-foreground-1) );--calcite-internal-carousel-pagination-overlay-background-color-hover: var( --calcite-carousel-pagination-background-color-hover, var(--calcite-color-foreground-2) );--calcite-internal-carousel-pagination-overlay-background-color-active: var( --calcite-carousel-pagination-background-color-press, var(--calcite-color-foreground-2) );--calcite-internal-carousel-pagination-overlay-background-color-selected: var( --calcite-carousel-pagination-background-color-selected, var(--calcite-color-foreground-1) );--calcite-internal-carousel-pagination-icon-color-hover: var( --calcite-carousel-pagination-icon-color-hover, var(--calcite-color-text-1) );--calcite-internal-carousel-pagination-icon-color: var( --calcite-carousel-pagination-icon-color, var(--calcite-color-border-1) );--calcite-internal-carousel-pagination-icon-color-selected: var( --calcite-carousel-pagination-icon-color-selected, var(--calcite-color-brand) );--calcite-internal-carousel-control-icon-color-hover: var( --calcite-carousel-control-icon-color-hover, var(--calcite-internal-carousel-pagination-icon-color-hover) );--calcite-internal-carousel-control-icon-color: var( --calcite-carousel-control-icon-color, var(--calcite-carousel-pagination-icon-color, var(--calcite-color-text-3)) );--calcite-internal-carousel-autoplay-progress-background-color: var( --calcite-carousel-autoplay-progress-background-color, var(--calcite-color-border-3) );--calcite-internal-carousel-autoplay-progress-fill-color: var( --calcite-carousel-autoplay-progress-fill-color, var(--calcite-color-brand) );--calcite-internal-carousel-autoplay-control-color: var( --calcite-carousel-pagination-icon-color, var(--calcite-color-text-3) )}.container{position:relative;display:flex;inline-size:100%;flex-direction:column;overflow:hidden;font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-color-text-2);outline-color:transparent}.container:focus{outline:var(--calcite-border-width-md) solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline:var(--calcite-border-width-md) solid var(--calcite-internal-color-focus);outline-offset:calc(calc(-1 * var(--calcite-spacing-base)) * calc(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}.container--edged:not(.container--overlaid){padding-inline:var(--calcite-internal-carousel-pagination-space-wide);inline-size:calc(100% - var(--calcite-internal-carousel-pagination-space-wide) * 2)}.item-container{display:flex;flex:1 1 auto;align-items:flex-start;justify-content:center;overflow:auto;padding:.25rem;animation-name:none;animation-duration:var(--calcite-animation-timing)}.container--overlaid .item-container{padding:0}.item-container--forward{animation-name:item-forward}.item-container--backward{animation-name:item-backward}calcite-carousel-item:not([selected]){opacity:0}.pagination{margin:.75rem;display:flex;flex-direction:row;align-items:center;justify-content:center;inline-size:auto}.pagination-items{display:flex;flex-direction:row;align-items:center}.container--overlaid .pagination{position:absolute}.pagination-item.page-next,.pagination-item.page-previous{color:var(--calcite-internal-carousel-control-icon-color);--calcite-icon-color: var(--calcite-internal-carousel-control-icon-color)}.pagination-item.page-next:hover,.pagination-item.page-previous:hover{color:var(--calcite-internal-carousel-control-icon-color-hover);--calcite-icon-color: var(--calcite-internal-carousel-control-icon-color-hover)}.container--edged .page-next,.container--edged .page-previous{block-size:3rem;inline-size:3rem;position:absolute;inset-block-start:50%;transform:translateY(-50%)}.container--edged .page-next{inset-inline-end:0}.container--edged .page-previous{inset-inline-start:0}.container--overlaid .pagination{inset-block-start:unset;inset-block-end:0;inset-inline:0}.pagination-item.autoplay-control{position:relative;color:var(--calcite-internal-carousel-autoplay-control-color);--calcite-progress-fill-color: var(--calcite-internal-carousel-autoplay-progress-fill-color);--calcite-progress-background-color: var(--calcite-internal-carousel-autoplay-progress-background-color)}.autoplay-control:focus .autoplay-progress{inset-block-end:4px;inset-inline:2px;inline-size:calc(100% - 4px)}.autoplay-progress{position:absolute;inset-block-end:2px;inset-inline:0;inline-size:100%}.pagination-item{margin:0;block-size:2rem;inline-size:2rem;cursor:pointer;align-items:center;border-style:none;background-color:transparent;transition-property:background-color,block-size,border-color,box-shadow,color,inset-block-end,inset-block-start,inset-inline-end,inset-inline-start,inset-size,opacity,outline-color,transform;transition-duration:var(--calcite-animation-timing);transition-timing-function:ease-in-out;outline-color:transparent;-webkit-appearance:none;display:flex;align-content:center;justify-content:center;background-color:var(--calcite-internal-carousel-pagination-background-color);color:var(--calcite-internal-carousel-pagination-icon-color)}.pagination-item:hover{background-color:var(--calcite-internal-carousel-pagination-background-color-hover);color:var(--calcite-internal-carousel-pagination-icon-color-hover)}.pagination-item:focus{background-color:var(--calcite-internal-carousel-pagination-background-color-press);outline:var(--calcite-border-width-md) solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline:var(--calcite-border-width-md) solid var(--calcite-internal-color-focus);outline-offset:calc(calc(-1 * var(--calcite-spacing-base)) * calc(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}.pagination-item:active{background-color:var(--calcite-internal-carousel-pagination-background-color-press);color:var(--calcite-internal-carousel-pagination-icon-color-hover)}.pagination-item calcite-icon{color:inherit;pointer-events:none}.pagination-item.pagination-item--selected{background-color:var(--calcite-internal-carousel-pagination-background-color-selected);color:var(--calcite-internal-carousel-pagination-icon-color-selected)}.pagination-item--individual{pointer-events:none;inline-size:0px;padding:0;opacity:0;visibility:hidden;transition:var(--calcite-animation-timing) ease-in-out inline-size,var(--calcite-animation-timing) ease-in-out padding,var(--calcite-animation-timing) ease-in-out opacity}.pagination-item--individual.pagination-item--visible{pointer-events:auto;inline-size:2rem;opacity:1;visibility:visible}.pagination-item--range-edge calcite-icon{scale:.75;transition:var(--calcite-animation-timing) ease-in-out scale}.container--overlaid .pagination-item{background-color:var(--calcite-internal-carousel-pagination-overlay-background-color)}.container--overlaid .pagination-item:hover{background-color:var(--calcite-internal-carousel-pagination-overlay-background-color-hover)}.container--overlaid .pagination-item:focus{background-color:var(--calcite-internal-carousel-pagination-overlay-background-color-active)}.container--overlaid .pagination-item:active{background-color:var(--calcite-internal-carousel-pagination-overlay-background-color-active)}.container--overlaid .pagination-item.pagination-item--selected{background-color:var(--calcite-internal-carousel-pagination-overlay-background-color-selected);color:var(--calcite-internal-carousel-pagination-icon-color-selected)}@keyframes item-forward{0%{transform:translate3d(100px,0,0)}to{transform:translateZ(0)}}@keyframes item-backward{0%{transform:translate3d(-100px,0,0)}to{transform:translateZ(0)}}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([hidden]){display:none}[hidden]{display:none}`;\nclass Carousel extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.autoplayHandler = () => {\n      this.clearIntervals();\n      this.slideDurationInterval = setInterval(this.timer, this.autoplayDuration / 100);\n    };\n    this.containerRef = createRef();\n    this.containerId = IDS.host(guid());\n    this.itemContainerRef = createRef();\n    this.resizeHandler = ({ contentRect: { width } }) => {\n      this.setMaxItemsToBreakpoint(width);\n    };\n    this.resizeObserver = createObserver(\"resize\", (entries) => entries.forEach(this.resizeHandler));\n    this.slideDurationInterval = null;\n    this.slideInterval = null;\n    this.tabListRef = createRef();\n    this.timer = () => {\n      let time = this.slideDurationRemaining;\n      const notSuspended = !this.suspendedDueToFocus && !this.suspendedDueToHover || this.userPreventsSuspend;\n      if (notSuspended) {\n        if (time <= 0.01) {\n          time = 1;\n          this.direction = \"forward\";\n          this.nextItem(false);\n        } else {\n          time = time - 0.01;\n        }\n      }\n      if (time > 0) {\n        this.slideDurationRemaining = time;\n      }\n    };\n    this.messages = useT9n();\n    this.focusSetter = useSetFocus()(this);\n    this.direction = \"standby\";\n    this.items = [];\n    this.maxItems = centerItemsByBreakpoint.xxsmall;\n    this.playing = false;\n    this.slideDurationRemaining = 1;\n    this.suspendedDueToFocus = false;\n    this.suspendedDueToHover = false;\n    this.suspendedSlideDurationRemaining = 1;\n    this.userPreventsSuspend = false;\n    this.arrowType = \"inline\";\n    this.autoplay = false;\n    this.autoplayDuration = DURATION;\n    this.controlOverlay = false;\n    this.disabled = false;\n    this.calciteCarouselChange = createEvent({ cancelable: false });\n    this.calciteCarouselPause = createEvent({ cancelable: false });\n    this.calciteCarouselPlay = createEvent({ cancelable: false });\n    this.calciteCarouselResume = createEvent({ cancelable: false });\n    this.calciteCarouselStop = createEvent({ cancelable: false });\n  }\n  static {\n    this.properties = { direction: [16, {}, { state: true }], items: [16, {}, { state: true }], maxItems: [16, {}, { state: true }], playing: [16, {}, { state: true }], selectedIndex: [16, {}, { state: true }], slideDurationRemaining: [16, {}, { state: true }], suspendedDueToFocus: [16, {}, { state: true }], suspendedDueToHover: [16, {}, { state: true }], suspendedSlideDurationRemaining: [16, {}, { state: true }], userPreventsSuspend: [16, {}, { state: true }], arrowType: [3, {}, { reflect: true }], autoplay: [3, {}, { reflect: true }], autoplayDuration: [11, {}, { type: Number, reflect: true }], controlOverlay: [7, {}, { reflect: true, type: Boolean }], disabled: [7, {}, { reflect: true, type: Boolean }], label: 1, messageOverrides: [0, {}, { attribute: false }], paused: [5, {}, { type: Boolean }], selectedItem: [0, {}, { attribute: false }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  async play() {\n    if (this.playing || this.autoplay !== \"\" && !this.autoplay && this.autoplay !== \"paused\") {\n      return;\n    }\n    this.handlePlay(true);\n  }\n  async setFocus(options) {\n    return this.focusSetter(() => this.containerRef.value, options);\n  }\n  async stop() {\n    if (!this.playing) {\n      return;\n    }\n    this.handlePause(true);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.resizeObserver?.observe(this.el);\n  }\n  async load() {\n    if ((this.autoplay === \"\" || this.autoplay) && this.autoplay !== \"paused\") {\n      this.handlePlay(false);\n    } else if (this.autoplay === \"paused\") {\n      this.paused = true;\n    }\n  }\n  willUpdate(changes) {\n    if (changes.has(\"autoplay\") && this.hasUpdated) {\n      this.autoplayWatcher(this.autoplay);\n    }\n    if (changes.has(\"direction\") && (this.hasUpdated || this.direction !== \"standby\")) {\n      this.directionWatcher(this.direction);\n    }\n    if (changes.has(\"playing\") && (this.hasUpdated || this.playing !== false)) {\n      this.paused = !this.playing;\n    }\n    if (changes.has(\"suspendedDueToFocus\") && (this.hasUpdated || this.suspendedDueToFocus !== false) || changes.has(\"suspendedDueToHover\") && (this.hasUpdated || this.suspendedDueToHover !== false)) {\n      this.suspendWatcher();\n    }\n  }\n  updated() {\n    updateHostInteraction(this);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.clearIntervals();\n    this.resizeObserver?.disconnect();\n  }\n  autoplayWatcher(autoplay) {\n    if (!autoplay) {\n      this.handlePause(false);\n    }\n  }\n  async directionWatcher(direction) {\n    if (direction === \"standby\" || !this.itemContainerRef.value) {\n      return;\n    }\n    await whenAnimationDone(this.itemContainerRef.value, direction === \"forward\" ? \"item-forward\" : \"item-backward\");\n    this.direction = \"standby\";\n  }\n  suspendWatcher() {\n    if (!this.suspendedDueToFocus && !this.suspendedDueToHover) {\n      this.suspendEnd();\n    } else {\n      this.suspendStart();\n    }\n  }\n  setMaxItemsToBreakpoint(width) {\n    if (!width) {\n      return;\n    }\n    if (width >= breakpoints.width.small) {\n      this.maxItems = centerItemsByBreakpoint.medium;\n      return;\n    }\n    if (width >= breakpoints.width.xsmall) {\n      this.maxItems = centerItemsByBreakpoint.small;\n      return;\n    }\n    if (width >= breakpoints.width.xxsmall) {\n      this.maxItems = centerItemsByBreakpoint.xsmall;\n      return;\n    }\n    this.maxItems = centerItemsByBreakpoint.xxsmall;\n  }\n  clearIntervals() {\n    clearInterval(this.slideDurationInterval);\n    clearInterval(this.slideInterval);\n  }\n  nextItem(emit) {\n    if (this.playing && emit) {\n      this.playing = false;\n    }\n    const nextIndex = getRoundRobinIndex(this.selectedIndex + 1, this.items.length);\n    this.setSelectedItem(nextIndex, emit);\n  }\n  previousItem() {\n    this.playing = false;\n    const prevIndex = getRoundRobinIndex(Math.max(this.selectedIndex - 1, -1), this.items.length);\n    this.setSelectedItem(prevIndex, true);\n  }\n  handlePlay(emit) {\n    this.playing = true;\n    this.autoplayHandler();\n    this.slideInterval = setInterval(this.autoplayHandler, this.autoplayDuration);\n    if (emit) {\n      this.calciteCarouselPlay.emit();\n    }\n  }\n  handlePause(emit) {\n    this.playing = false;\n    this.clearIntervals();\n    this.slideDurationRemaining = 1;\n    this.suspendedSlideDurationRemaining = 1;\n    if (emit) {\n      this.calciteCarouselStop.emit();\n    }\n  }\n  suspendStart() {\n    this.suspendedSlideDurationRemaining = this.slideDurationRemaining;\n  }\n  suspendEnd() {\n    this.slideDurationRemaining = this.suspendedSlideDurationRemaining;\n  }\n  handleSlotChange(event) {\n    const items = slotChangeGetAssignedElements(event);\n    if (items.length < 1) {\n      return;\n    }\n    const activeItemIndex = items.findIndex((item) => item.selected);\n    const requestedSelectedIndex = activeItemIndex > -1 ? activeItemIndex : 0;\n    this.items = items;\n    this.setSelectedItem(requestedSelectedIndex, false);\n  }\n  setSelectedItem(requestedIndex, emit) {\n    const previousSelected = this.selectedIndex;\n    this.items.forEach((el, index) => {\n      const match = requestedIndex === index;\n      el.selected = match;\n      if (match) {\n        this.selectedItem = el;\n        this.selectedIndex = index;\n      }\n    });\n    if (emit) {\n      this.playing = false;\n      if (previousSelected !== this.selectedIndex) {\n        this.calciteCarouselChange.emit();\n      }\n    }\n  }\n  handleArrowClick(event) {\n    const direction = event.target.dataset.direction;\n    if (this.playing) {\n      this.handlePause(true);\n    }\n    if (direction === \"next\") {\n      this.direction = \"forward\";\n      this.nextItem(true);\n    } else if (direction === \"previous\") {\n      this.direction = \"backward\";\n      this.previousItem();\n    }\n  }\n  handleItemSelection(event) {\n    const item = event.target;\n    const requestedPosition = parseInt(item.dataset.index);\n    if (requestedPosition === this.selectedIndex) {\n      return;\n    }\n    if (this.playing) {\n      this.handlePause(true);\n    }\n    this.direction = requestedPosition > this.selectedIndex ? \"forward\" : \"backward\";\n    this.setSelectedItem(requestedPosition, true);\n  }\n  toggleRotation() {\n    this.userPreventsSuspend = true;\n    if (this.playing) {\n      this.handlePause(true);\n    } else {\n      this.handlePlay(true);\n    }\n  }\n  handleFocusIn() {\n    const isPlaying = this.playing;\n    if (isPlaying) {\n      this.suspendedDueToFocus = true;\n    }\n    if ((!this.suspendedDueToFocus || !this.suspendedDueToHover) && isPlaying) {\n      this.calciteCarouselPause.emit();\n    }\n  }\n  handleMouseIn() {\n    const isPlaying = this.playing;\n    if (isPlaying) {\n      this.suspendedDueToHover = true;\n    }\n    if ((!this.suspendedDueToFocus || !this.suspendedDueToHover) && isPlaying) {\n      this.calciteCarouselPause.emit();\n    }\n  }\n  handleMouseOut(event) {\n    const leavingComponent = !this.el.contains(event.relatedTarget);\n    const isPlaying = this.playing;\n    if (leavingComponent && isPlaying) {\n      this.suspendedDueToHover = false;\n    }\n    if (leavingComponent && isPlaying && !this.suspendedDueToFocus) {\n      this.userPreventsSuspend = false;\n      this.calciteCarouselResume.emit();\n    }\n  }\n  handleFocusOut(event) {\n    const leavingComponent = !event.composedPath().includes(event.relatedTarget);\n    const isPlaying = this.playing;\n    if (leavingComponent && isPlaying) {\n      this.suspendedDueToFocus = false;\n    }\n    if (leavingComponent && isPlaying && !this.suspendedDueToHover) {\n      this.userPreventsSuspend = false;\n      this.calciteCarouselResume.emit();\n    }\n  }\n  containerKeyDownHandler(event) {\n    if (event.target !== this.containerRef.value) {\n      return;\n    }\n    const lastItem = this.items.length - 1;\n    switch (event.key) {\n      case \" \":\n      case \"Enter\":\n        event.preventDefault();\n        if (this.autoplay === \"\" || this.autoplay || this.autoplay === \"paused\") {\n          this.toggleRotation();\n        }\n        break;\n      case \"ArrowRight\":\n        event.preventDefault();\n        this.direction = \"forward\";\n        this.nextItem(true);\n        break;\n      case \"ArrowLeft\":\n        event.preventDefault();\n        this.direction = \"backward\";\n        this.previousItem();\n        break;\n      case \"Home\":\n        event.preventDefault();\n        if (this.selectedIndex === 0) {\n          return;\n        }\n        this.direction = \"backward\";\n        this.setSelectedItem(0, true);\n        break;\n      case \"End\":\n        event.preventDefault();\n        if (this.selectedIndex === lastItem) {\n          return;\n        }\n        this.direction = \"forward\";\n        this.setSelectedItem(lastItem, true);\n        break;\n    }\n  }\n  tabListKeyDownHandler(event) {\n    const visiblePaginationEls = Array(...this.tabListRef.value.querySelectorAll(`button:not(.${CSS.paginationItemOutOfRange})`));\n    const currentEl = event.target;\n    switch (event.key) {\n      case \"ArrowRight\":\n        focusElementInGroup(visiblePaginationEls, currentEl, \"next\");\n        break;\n      case \"ArrowLeft\":\n        focusElementInGroup(visiblePaginationEls, currentEl, \"previous\");\n        break;\n      case \"Home\":\n        event.preventDefault();\n        focusElementInGroup(visiblePaginationEls, currentEl, \"first\");\n        break;\n      case \"End\":\n        event.preventDefault();\n        focusElementInGroup(visiblePaginationEls, currentEl, \"last\");\n        break;\n    }\n  }\n  renderRotationControl() {\n    const text = this.playing ? this.messages.pause : this.messages.play;\n    const formattedValue = this.slideDurationRemaining * 100;\n    return html`<button .ariaLabel=${text} class=${safeClassMap({\n      [CSS.paginationItem]: true,\n      [CSS.autoplayControl]: true\n    })} @click=${this.toggleRotation} title=${text ?? nothing}><calcite-icon .icon=${this.playing ? ICONS.pause : ICONS.play} scale=s></calcite-icon>${this.playing && html`<calcite-progress class=${safeClassMap(CSS.autoplayProgress)} .label=${this.messages.carouselItemProgress} .value=${formattedValue}></calcite-progress>` || \"\"}</button>`;\n  }\n  renderPaginationArea() {\n    return html`<div class=${safeClassMap({\n      [CSS.pagination]: true,\n      [CSS.containerOverlaid]: this.controlOverlay\n    })} @keydown=${this.tabListKeyDownHandler} ${ref(this.tabListRef)}>${(this.playing || this.autoplay === \"\" || this.autoplay || this.autoplay === \"paused\") && this.renderRotationControl() || \"\"}${this.arrowType === \"inline\" && this.renderArrow(\"previous\") || \"\"}${this.renderPaginationItems()}${this.arrowType === \"inline\" && this.renderArrow(\"next\") || \"\"}</div>`;\n  }\n  renderPaginationItems() {\n    const { selectedIndex, maxItems, items, label, handleItemSelection } = this;\n    return html`<div .ariaLabel=${label} class=${safeClassMap(CSS.paginationItems)} role=tablist>${repeat(items, (item) => item.id, (item, index) => {\n      const itemCount = items.length;\n      const match = index === selectedIndex;\n      const first = index === 0;\n      const last = index === itemCount - 1;\n      const endRangeStart = itemCount - maxItems - 1;\n      const inStartRange = selectedIndex < maxItems;\n      const inEndRange = selectedIndex >= endRangeStart;\n      const rangeStart = inStartRange ? 0 : selectedIndex - Math.floor(maxItems / 2);\n      const rangeEnd = inEndRange ? itemCount : rangeStart + maxItems;\n      const low = inStartRange ? 0 : inEndRange ? endRangeStart : rangeStart;\n      const high = inStartRange ? maxItems + 1 : rangeEnd;\n      const isEdge = !first && !last && !match && (index === low - 1 || index === high);\n      const visible = match || index <= high && index >= low - 1;\n      const overflowActive = itemCount - 1 <= maxItems;\n      const icon = match ? ICONS.active : ICONS.inactive;\n      return html`<button aria-controls=${(!match ? item.id : void 0) ?? nothing} .ariaSelected=${match} class=${safeClassMap({\n        [CSS.paginationItem]: true,\n        [CSS.paginationItemIndividual]: true,\n        [CSS.paginationItemSelected]: match,\n        [CSS.paginationItemRangeEdge]: itemCount - 1 > maxItems && isEdge,\n        [CSS.paginationItemOutOfRange]: !(overflowActive || visible),\n        [CSS.paginationItemVisible]: overflowActive || visible\n      })} data-index=${index ?? nothing} @click=${handleItemSelection} role=tab title=${item.label ?? nothing}><calcite-icon .icon=${icon} scale=l></calcite-icon></button>`;\n    })}</div>`;\n  }\n  renderArrow(direction) {\n    const isPrev = direction === \"previous\";\n    const dir = getElementDir(this.el);\n    const scale = this.arrowType === \"edge\" ? \"m\" : \"s\";\n    const css2 = isPrev ? CSS.pagePrevious : CSS.pageNext;\n    const title = isPrev ? this.messages.previous : this.messages.next;\n    const icon = isPrev ? ICONS.chevronLeft : ICONS.chevronRight;\n    return html`<button aria-controls=${this.containerId ?? nothing} class=${safeClassMap({ [CSS.paginationItem]: true, [css2]: true })} data-direction=${direction ?? nothing} @click=${this.handleArrowClick} title=${title ?? nothing}><calcite-icon .flipRtl=${dir === \"rtl\"} .icon=${icon} .scale=${scale}></calcite-icon></button>`;\n  }\n  render() {\n    const { direction } = this;\n    return InteractiveContainer({ disabled: this.disabled, children: html`<div .ariaLabel=${this.label} .ariaLive=${this.playing ? \"off\" : \"polite\"} .ariaRoleDescription=${this.messages.carousel} class=${safeClassMap({\n      [CSS.container]: true,\n      [CSS.containerOverlaid]: this.controlOverlay,\n      [CSS.containerEdged]: this.arrowType === \"edge\"\n    })} @focusin=${this.handleFocusIn} @focusout=${this.handleFocusOut} @keydown=${this.containerKeyDownHandler} @mouseenter=${this.handleMouseIn} @mouseleave=${this.handleMouseOut} role=group tabindex=0 ${ref(this.containerRef)}><section class=${safeClassMap({\n      [CSS.itemContainer]: true,\n      [CSS.itemContainerForward]: direction === \"forward\",\n      [CSS.itemContainerBackward]: direction === \"backward\"\n    })} id=${this.containerId ?? nothing} ${ref(this.itemContainerRef)}><slot @slotchange=${this.handleSlotChange}></slot></section>${this.items.length > 1 && this.renderPaginationArea() || \"\"}${this.arrowType === \"edge\" && this.renderArrow(\"previous\") || \"\"}${this.arrowType === \"edge\" && this.renderArrow(\"next\") || \"\"}</div>` });\n  }\n}\ncustomElement(\"calcite-carousel\", Carousel);\nexport {\n  Carousel\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.3.3 */\nimport { C as CSS_UTILITY, c as customElement } from \"../../chunks/runtime.js\";\nimport { css, html } from \"lit\";\nimport { LitElement, safeClassMap, safeStyleMap } from \"@arcgis/lumina\";\nimport { g as getElementDir } from \"../../chunks/dom.js\";\nconst styles = css`:host{--calcite-internal-color-focus: var( --calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)) )}:host{position:relative;display:block;inline-size:100%}.track,.bar{position:absolute;inset-block-start:0px;block-size:2px}.track{z-index:var(--calcite-z-index);inline-size:100%;overflow:hidden;background-color:var(--calcite-progress-background-color, var(--calcite-color-border-3))}.bar{z-index:var(--calcite-z-index);background-color:var(--calcite-progress-fill-color, var(--calcite-color-brand))}@media (forced-colors: active){.track{background-color:highlightText}.bar{background-color:linkText}}.indeterminate{inline-size:20%;animation:looping-progress-bar-ani calc(var(--calcite-internal-animation-timing-medium) / var(--calcite-internal-duration-factor) * 11 / var(--calcite-internal-duration-factor)) linear infinite}.indeterminate.calcite--rtl{animation-name:looping-progress-bar-ani-rtl}.reversed{animation-direction:reverse}.text{padding-inline:0px;padding-block:1rem 0px;text-align:center;font-size:var(--calcite-font-size--2);line-height:1rem;font-weight:var(--calcite-font-weight-medium);color:var(--calcite-progress-text-color, var(--calcite-color-text-2))}@keyframes looping-progress-bar-ani{0%{transform:translate3d(-100%,0,0)}50%{inline-size:40%}to{transform:translate3d(600%,0,0)}}@keyframes looping-progress-bar-ani-rtl{0%{transform:translate3d(100%,0,0)}50%{inline-size:40%}to{transform:translate3d(-600%,0,0)}}:host([hidden]){display:none}[hidden]{display:none}`;\nconst CSS = {\n  track: \"track\",\n  bar: \"bar\",\n  text: \"text\"\n};\nclass Progress extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.reversed = false;\n    this.type = \"determinate\";\n    this.value = 0;\n  }\n  static {\n    this.properties = { label: 1, reversed: [7, {}, { reflect: true, type: Boolean }], text: 1, type: [3, {}, { reflect: true }], value: [9, {}, { type: Number }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  render() {\n    const isDeterminate = this.type === \"determinate\";\n    const barStyles = isDeterminate ? { width: `${this.value}%` } : {};\n    const dir = getElementDir(this.el);\n    return html`<div .ariaLabel=${this.label || this.text} .ariaValueMax=${isDeterminate ? \"100\" : void 0} .ariaValueMin=${isDeterminate ? \"0\" : void 0} .ariaValueNow=${isDeterminate ? this.value : void 0} role=progressbar><div class=${safeClassMap(CSS.track)}><div class=${safeClassMap({\n      [CSS.bar]: true,\n      indeterminate: this.type === \"indeterminate\",\n      [CSS_UTILITY.rtl]: dir === \"rtl\",\n      reversed: this.reversed\n    })} style=${safeStyleMap(barStyles)}></div></div>${this.text ? html`<div class=${safeClassMap(CSS.text)}>${this.text}</div>` : null}</div>`;\n  }\n}\ncustomElement(\"calcite-progress\", Progress);\nexport {\n  Progress\n};\n"],"names":["u","generateMap","e","s","t","r","Map","l","set","c","constructor","super","type","CHILD","Error","dt","o","i","values","keys","render","this","update","_ref","_this$ut","d","p","a","Array","isArray","ut","h","v","m","y","x","j","length","k","w","has","get","n","f","breakpoints","medium","cssLengthToNumber","small","xsmall","xxsmall","parseInt","CSS","ICONS","centerItemsByBreakpoint","IDS","id","concat","styles","css","_templateObject","_taggedTemplateLiteral","Carousel","LitElement","arguments","autoplayHandler","clearIntervals","slideDurationInterval","setInterval","timer","autoplayDuration","containerRef","createRef","containerId","guid","itemContainerRef","resizeHandler","contentRect","width","setMaxItemsToBreakpoint","resizeObserver","createObserver","entries","forEach","slideInterval","tabListRef","time","slideDurationRemaining","suspendedDueToFocus","suspendedDueToHover","userPreventsSuspend","direction","nextItem","messages","useT9n","focusSetter","useSetFocus","items","maxItems","playing","suspendedSlideDurationRemaining","arrowType","autoplay","controlOverlay","disabled","calciteCarouselChange","createEvent","cancelable","calciteCarouselPause","calciteCarouselPlay","calciteCarouselResume","calciteCarouselStop","play","handlePlay","setFocus","options","value","stop","handlePause","connectedCallback","_this$resizeObserver","observe","el","load","paused","willUpdate","changes","hasUpdated","autoplayWatcher","directionWatcher","suspendWatcher","updated","updateHostInteraction","disconnectedCallback","_this$resizeObserver2","disconnect","whenAnimationDone","suspendStart","suspendEnd","clearInterval","emit","nextIndex","getRoundRobinIndex","selectedIndex","setSelectedItem","previousItem","prevIndex","Math","max","handleSlotChange","event","slotChangeGetAssignedElements","activeItemIndex","findIndex","item","selected","requestedSelectedIndex","requestedIndex","previousSelected","index","match","selectedItem","handleArrowClick","target","dataset","handleItemSelection","requestedPosition","toggleRotation","handleFocusIn","isPlaying","handleMouseIn","handleMouseOut","leavingComponent","contains","relatedTarget","handleFocusOut","composedPath","includes","containerKeyDownHandler","lastItem","key","preventDefault","tabListKeyDownHandler","visiblePaginationEls","querySelectorAll","currentEl","focusElementInGroup","renderRotationControl","text","pause","formattedValue","html","_templateObject2","safeClassMap","nothing","_templateObject3","carouselItemProgress","renderPaginationArea","_templateObject4","ref","renderArrow","renderPaginationItems","label","_templateObject5","repeat","_ref2","_item$label","itemCount","first","last","endRangeStart","inStartRange","inEndRange","rangeStart","floor","low","high","isEdge","visible","overflowActive","icon","_templateObject6","_this$containerId","isPrev","dir","getElementDir","scale","css2","title","previous","next","_templateObject7","_this$containerId2","InteractiveContainer","children","_templateObject8","carousel","_Carousel","properties","state","reflect","Number","Boolean","messageOverrides","attribute","customElement","Progress","reversed","isDeterminate","barStyles","indeterminate","CSS_UTILITY","rtl","safeStyleMap","_Progress"],"sourceRoot":""}