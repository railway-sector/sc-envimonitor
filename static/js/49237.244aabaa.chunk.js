"use strict";(self.webpackChunksc_envimonitor=self.webpackChunksc_envimonitor||[]).push([[49237],{8350:(e,t,i)=>{i.d(t,{H:()=>f});var n=i(35143),s=i(46053),a=(i(81806),i(76460),i(47249),i(85842)),r=i(69098),o=i(42553),l=i(40565),c=i(6409),u=i(88205);let d=class extends(r.A.ClonableMixin(o.A)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,n._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"name",void 0),(0,n._)([(0,s.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,c.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],d.prototype,"method",void 0),(0,n._)([(0,s.MZ)({type:String,json:{write:{isRequired:!0}}})],d.prototype,"value",void 0),(0,n._)([(0,s.MZ)({type:[l.jz],json:{write:{isRequired:!0}}})],d.prototype,"bandIds",void 0),(0,n._)([(0,s.MZ)({types:u.uy,json:{write:!0,origins:{"web-scene":{types:u.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],d.prototype,"renderer",void 0),d=(0,n._)([(0,a.$)("esri.renderers.support.RasterPresetRenderer")],d);const f=e=>{let t=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,n._)([(0,s.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),(0,n._)([(0,s.MZ)({type:[d],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=(0,n._)([(0,a.$)("esri.layers.mixins.RasterPresetRendererMixin")],t),t}},25213:(e,t,i)=>{i.d(t,{E9:()=>m,Tw:()=>h,X6:()=>p});var n=i(89379),s=i(3825),a=i(76797),r=i(19247),o=i(13312),l=i(23032),c=i(49653),u=i(54994),d=i(77725);async function f(e,t,i){var f,h,p,m,v,y,g,w,x,b;const I=(0,u.Dl)(e),{rasterFunction:A,sourceJSON:_}=t||{},S=A?JSON.stringify(A.rasterFunctionDefinition||A):null,T=(0,u.lF)((0,n.A)((0,n.A)({},I.query),{},{renderingRule:S,f:"json"})),R=(0,u.jV)(T,i);e=I.path;const C=_||await(0,s.A)(e,R).then(e=>e.data),M=C.hasRasterAttributeTable?(0,s.A)("".concat(e,"/rasterAttributeTable"),R):null,O=C.hasColormap?(0,s.A)("".concat(e,"/colormap"),R):null,F=C.hasHistograms?(0,s.A)("".concat(e,"/histograms"),R):null,P=C.currentVersion>=10.3?(0,s.A)("".concat(e,"/keyProperties"),R):null,k=C.hasMultidimensions?(0,s.A)("".concat(e,"/multidimensionalInfo"),R):null,D=await Promise.allSettled([M,O,F,P,k]);let N=null;if(C.minValues&&C.minValues.length===C.bandCount){N=[];for(let e=0;e<C.minValues.length;e++)N.push({min:C.minValues[e],max:C.maxValues[e],avg:C.meanValues[e],stddev:C.stdvValues[e]})}const L=a.A.fromJSON(C.extent),E=Math.ceil(L.width/C.pixelSizeX-.1),B=Math.ceil(L.height/C.pixelSizeY-.1),z=o.A.fromJSON(C.spatialReference||C.extent.spatialReference),J="fulfilled"===D[0].status?null===(f=D[0].value)||void 0===f?void 0:f.data:null,U=null!==J&&void 0!==J&&null!==(h=J.features)&&void 0!==h&&h.length?d.A.fromJSON(J):null,V="fulfilled"===D[1].status?null===(p=D[1].value)||void 0===p?void 0:p.data.colormap:null,j=null!==V&&void 0!==V&&V.length?V:null,H="fulfilled"===D[2].status?null===(m=D[2].value)||void 0===m?void 0:m.data.histograms:null,q=null!==H&&void 0!==H&&null!==(v=H[0])&&void 0!==v&&null!==(v=v.counts)&&void 0!==v&&v.length?H:null,Z="fulfilled"===D[3].status&&null!==(y=null===(g=D[3].value)||void 0===g?void 0:g.data)&&void 0!==y?y:{},G="fulfilled"===D[4].status?null===(w=D[4].value)||void 0===w?void 0:w.data.multidimensionalInfo:null,W=null!==G&&void 0!==G&&null!==(x=G.variables)&&void 0!==x&&x.length?G:null;W&&W.variables.forEach(e=>{var t,i;null!==(t=e.statistics)&&void 0!==t&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),null===(i=e.dimensions)||void 0===i||i.forEach(e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")})});const{defaultVariable:X,serviceDataType:Y}=C;X&&X!==Z.DefaultVariable&&(Z.DefaultVariable=X),(null===Y||void 0===Y?void 0:Y.includes("esriImageServiceDataTypeVector"))&&!Y.includes(Z.DataType)&&(Z.DataType=Y.replace("esriImageServiceDataType",""));let $=C.noDataValue;(null===(b=C.noDataValues)||void 0===b?void 0:b.length)&&C.noDataValues.some(e=>e!==$)&&($=C.noDataValues);const K=C.transposeInfo?new c.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new r.A({x:C.extent.xmin,y:C.extent.ymax,spatialReference:z}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(E,B))/Math.LN2-8)),transposeInfo:C.transposeInfo}):void 0;return new l.A({width:E,height:B,bandCount:C.bandCount,extent:a.A.fromJSON(C.extent),spatialReference:z,pixelSize:new r.A({x:C.pixelSizeX,y:C.pixelSizeY,spatialReference:z}),pixelType:C.pixelType.toLowerCase(),statistics:N,attributeTable:U,colormap:j,histograms:q,keyProperties:Z,noDataValue:$,multidimensionalInfo:W,storageInfo:K})}function h(e,t,i){return f(e,{sourceJSON:t},i)}function p(e,t,i){return f(e,{rasterFunction:t},i)}function m(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}},26855:(e,t,i)=>{i.d(t,{A:()=>c});var n,s=i(35143),a=i(46053),r=(i(81806),i(76460),i(47249),i(6409)),o=i(85842),l=i(75116);let c=n=class extends l.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new n({tolerance:this.tolerance})}};(0,s._)([(0,r.e)({GCSShiftXform:"gcs-shift"})],c.prototype,"type",void 0),(0,s._)([(0,a.MZ)()],c.prototype,"tolerance",void 0),c=n=(0,s._)([(0,o.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],c)},29754:(e,t,i)=>{i.d(t,{A:()=>m});var n,s=i(35143),a=i(46053),r=(i(81806),i(76460),i(47249),i(6409)),o=i(28379),l=i(85842),c=i(17707),u=i(76797),d=i(19247),f=i(75116);function h(e,t,i){const{x:n,y:s}=t;if(i<2)return{x:e[0]+n*e[2]+s*e[4],y:e[1]+n*e[3]+s*e[5]};if(2===i){const t=n*n,i=s*s,a=n*s;return{x:e[0]+n*e[2]+s*e[4]+t*e[6]+a*e[8]+i*e[10],y:e[1]+n*e[3]+s*e[5]+t*e[7]+a*e[9]+i*e[11]}}const a=n*n,r=s*s,o=n*s,l=a*n,c=a*s,u=n*r,d=s*r;return{x:e[0]+n*e[2]+s*e[4]+a*e[6]+o*e[8]+r*e[10]+l*e[12]+c*e[14]+u*e[16]+d*e[18],y:e[1]+n*e[3]+s*e[5]+a*e[7]+o*e[9]+r*e[11]+l*e[13]+c*e[15]+u*e[17]+d*e[19]}}function p(e,t,i){const{xmin:n,ymin:s,xmax:a,ymax:r,spatialReference:o}=t;let l=[];if(i<2)l.push({x:n,y:r}),l.push({x:a,y:r}),l.push({x:n,y:s}),l.push({x:a,y:s});else{let e=10;for(let t=0;t<e;t++)l.push({x:n,y:s+(r-s)*t/(e-1)}),l.push({x:a,y:s+(r-s)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:n+(a-n)*t/e,y:s}),l.push({x:n+(a-n)*t/e,y:r})}l=l.map(t=>h(e,t,i));const c=l.map(e=>e.x),d=l.map(e=>e.y);return new u.A({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,d),ymax:Math.max.apply(null,d),spatialReference:o})}let m=n=class extends f.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:n}=t;if(null===i||void 0===i||!i.length||null===n||void 0===n||!n.length||i.length!==n.length)return null;const s=[];for(let a=0;a<i.length;a++)s.push(i[a]),s.push(n[a]);return s}writeForwardCoefficients(e,t,i){const n=[],s=[];for(let a=0;a<(null===e||void 0===e?void 0:e.length);a++)a%2==0?n.push(e[a]):s.push(e[a]);t.coeffX=n,t.coeffY=s}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,n,s,a,r]=e,o=n*r-a*s,l=a*s-n*r;return[(a*i-t*r)/o,(n*i-t*s)/l,r/o,s/l,-a/o,-n/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:n}=t;if(null===i||void 0===i||!i.length||null===n||void 0===n||!n.length||i.length!==n.length)return null;const s=[];for(let a=0;a<i.length;a++)s.push(i[a]),s.push(n[a]);return s}writeInverseCoefficients(e,t,i){const n=[],s=[];for(let a=0;a<(null===e||void 0===e?void 0:e.length);a++)a%2==0?n.push(e[a]):s.push(e[a]);t.inverseCoeffX=n,t.inverseCoeffY=s}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if("point"===e.type){const t=h(this.forwardCoefficients,e,this.polynomialOrder);return new d.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return p(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=h(this.inverseCoefficients,e,this.polynomialOrder);return new d.A({x:t.x,y:t.y,spatialReference:e.spatialReference})}return p(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new n({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,s._)([(0,a.MZ)({json:{write:!0}})],m.prototype,"polynomialOrder",void 0),(0,s._)([(0,a.MZ)()],m.prototype,"forwardCoefficients",void 0),(0,s._)([(0,o.w)("forwardCoefficients",["coeffX","coeffY"])],m.prototype,"readForwardCoefficients",null),(0,s._)([(0,c.K)("forwardCoefficients")],m.prototype,"writeForwardCoefficients",null),(0,s._)([(0,a.MZ)({json:{write:!0}})],m.prototype,"inverseCoefficients",null),(0,s._)([(0,o.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],m.prototype,"readInverseCoefficients",null),(0,s._)([(0,c.K)("inverseCoefficients")],m.prototype,"writeInverseCoefficients",null),(0,s._)([(0,a.MZ)()],m.prototype,"affectsPixelSize",null),(0,s._)([(0,r.e)({PolynomialXform:"polynomial"})],m.prototype,"type",void 0),m=n=(0,s._)([(0,l.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],m)},49237:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Ze});var n=i(89379),s=i(35143),a=i(16868),r=i(69098),o=i(50076),l=i(76460),c=i(77717),u=i(50346),d=i(68134),f=i(46053),h=i(40565),p=i(81806),m=(i(47249),i(85842)),v=i(25515),y=i(19502),g=i(65624),w=i(31362),x=i(24709),b=i(11270),I=i(94729),A=i(84008),_=i(8350),S=i(21617),T=i(5682),R=i(78817),C=i(95363),M=i(44135),O=i(51939),F=i(44038),P=i(17775),k=i(16175),D=i(10410),N=i(69539),L=i(76797),E=i(13312),B=i(38042),z=i(66486),J=i(52297);function U(e){return["x","e","east","long","longitude"].includes(e.toLowerCase())}function V(e){return["y","n","west","lat","latitude"].includes(e.toLowerCase())}function j(e){const{axes:t}=e.domain,i=Object.keys(t),n=[],s=[];let a=-1,r=-1,o=[];for(let g=0;g<i.length;g++){const e=i[g];U(e)?a=g:V(e)&&(r=g);const l=t[e],c=[];if("values"in l){l.values.forEach(e=>c.push("string"==typeof e?new Date(e).getTime():e));const e=c[1]-c[0];n.push([c[0]-.5*e,c[c.length-1]+.5*e]),s.push(e)}else{const{start:e,stop:t,num:i}=l,a=(t-e)/(i-1);n.push([e-.5*a,t+.5*a]),s.push(a);for(let n=0;n<i;n++)c.push(e+a*n)}o.push({name:e,values:c,extent:[c[0],c[c.length-1]]})}a>-1&&-1===r?r=0===a?1:0:r>-1&&-1===a?a=0===r?1:0:-1===r&&-1===a&&(a=0,r=1),o=o.filter((e,t)=>!(t===a||t===r));const{referencing:l}=e.domain,c=l.find(e=>e.coordinates.includes(i[a])).system.id,u=null===c||void 0===c?void 0:c.slice(c.lastIndexOf("/")+1),d=null==u||"CRS84"===u?4326:Number(u),f=new E.A({wkid:d}),[h,p]=n[a],[m,v]=n[r],y=new L.A({xmin:h,xmax:p,ymin:m,ymax:v,spatialReference:f});return{width:Math.round(y.width/s[a]),height:Math.round(y.height/s[r]),extent:y,dimensions:o}}function H(e){var t,i;const n=null===(t=(0,B.ZS)())||void 0===t?void 0:t.language;return n&&null!==(i=e[n])&&void 0!==i?i:Object.values(e)[0]}function q(){return Math.round(255*Math.random())}function Z(e){const t={},{parameters:i}=e;if(!i)return t;for(const[a,r]of Object.entries(i)){var n;const{type:e,description:i,unit:o,categoryEncoding:l,observedProperty:c}=r;if("Parameter"===e&&(t[a]={},i&&(t[a].description=H(i)),o&&(t[a].unit=o.label?H(o.label):null,t[a].symbol=null===(n=o.symbol)||void 0===n?void 0:n.value),l)){var s;const e=Object.entries(l).map((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1}));let i=!1;(null===c||void 0===c||null===(s=c.categories)||void 0===s?void 0:s.length)&&(c.categories.forEach(t=>{if(!t.id)return;const n=t.id.slice(t.id.lastIndexOf("/")+1),s=e.find(e=>e.ClassName===n);if(!s)return;const a=t.label?H(t.label):null;if(s.Label=a,t.preferredColor){const e=N.A.fromHex(t.preferredColor);e&&(i=!0,s.Red=e.r,s.Green=e.g,s.Blue=e.b)}}),i&&e.forEach(e=>{null==e.Red&&(e.Red=q(),e.Green=q(),e.Blue=q())}));const n={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:e.map(e=>({attributes:e}))};i&&n.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),t[a].attributeTable=n}}return t}function G(e){let t=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let n=0;n<e.length;n++){const s=e[n];null!=s&&(s<t&&(t=s),s>i&&(i=s))}return(0,J.X1)(t,i)}function W(e,t,i){const n=e.map((e,i)=>({name:e,count:t[i]})).sort((e,t)=>e.name>t.name?-1:1),s=(a=1,e=>a*=e.count);var a;const r=[...n.slice(1),{name:"",count:1}].reverse().map(s).reverse();let o=0;for(let l=e.length-1;l>=0;l--)o+=r[n.findIndex(t=>{let{name:i}=t;return i===e[l]})]*(i%t[l]),i=Math.floor(i/t[l]);return o}var X=i(15359),Y=i(23032),$=i(68347),K=i(52494),Q=i(86866);let ee=class extends D.A{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!this._pixelBlockTiles){const{rasterInfo:s}=this,[a,r]=s.storageInfo.tileInfo.size,{sliceId:o}=n,{pixelBlocks:l}=this.source,c={pixelBlock:null==o?l[0]:l[o],useBilinear:"thematic"!==s.dataType,tileSize:{width:a,height:r},level:e,row:t,col:i},u=this.rasterJobHandler?this.rasterJobHandler.clipTile(c,n):(0,K.J$)(c);return Promise.resolve(u)}const s=this._pixelBlockTiles.get("".concat(e,"/").concat(t,"/").concat(i));return Promise.resolve(s)}async _open(e){var t,i;const s=this.source,{pixelBlocks:a,attributeTable:r,statistics:o,histograms:l,name:c,nativeExtent:u,transform:d}=s,f=a[0],{width:h,height:p,pixelType:m}=f,v=null!==(t=s.extent)&&void 0!==t?t:new L.A({xmin:-.5,ymin:.5,xmax:h-.5,ymax:p-.5,spatialReference:new E.A({wkid:3857})}),y=null!==(i=s.isPseudoSpatialReference)&&void 0!==i?i:!s.extent,g={x:v.width/h,y:v.height/p},w=(0,n.A)({},s.keyProperties);r&&(w.DataType="Thematic");const x=new Y.A({width:h,height:p,pixelType:m,extent:v,nativeExtent:u,attributeTable:r,transform:d,pixelSize:g,spatialReference:v.spatialReference,bandCount:f.pixels.length,keyProperties:w,multidimensionalInfo:s.multidimensionalInfo,statistics:o,isPseudoSpatialReference:y,histograms:l});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(x),this.createRemoteDatasetStorageInfo(x,512,512),this._set("rasterInfo",x),this.updateTileInfo(),x.multidimensionalInfo?await this._buildMDimStats(s.pixelBlocks,x.multidimensionalInfo):await this._buildInMemoryRaster(f,{width:512,height:512},e),x.multidimensionalInfo||(this.source=null),this.datasetName=c}async _buildInMemoryRaster(e,t,i){var n,s,a;const{rasterInfo:r}=this,l=null!==(n=r.storageInfo.maximumPyramidLevel)&&void 0!==n?n:0,c="thematic"!==r.dataType,d=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:l,useBilinear:c},i):Promise.resolve((0,K.lD)(e,t,l,c)),f=null!=r.statistics,h=null!=r.histograms,p=this.ioConfig.skipStatistics||f?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,Q.f4)(e)),m=await(0,u.Lx)([d,p]);if(!m[0].value&&m[1].value)throw new o.A("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=m[0].value,f||(r.statistics=null===(s=m[1].value)||void 0===s?void 0:s.statistics),h||(r.histograms=null===(a=m[1].value)||void 0===a?void 0:a.histograms)}async _buildMDimStats(e,t,i){for(let n=0;n<t.variables.length;n++){const s=t.variables[n];if(s.statistics)continue;const a=s.dimensions.map(e=>{var t,i,n;return new X.A({variableName:s.name,dimensionName:e.name,values:[null!==(t=null===(i=e.values)||void 0===i?void 0:i[0])&&void 0!==t?t:null===(n=e.extent)||void 0===n?void 0:n[0]],isSlice:!0})}),r=(0,$.NG)(a,t),o=null==r?null:e[r];if(null==o)continue;const l=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:o},i):(0,Q.eH)(o);s.statistics=l.statistics,s.histograms||(s.histograms=l.histograms)}}};(0,s._)([(0,f.MZ)({type:String,json:{write:!0}})],ee.prototype,"datasetFormat",void 0),(0,s._)([(0,f.MZ)()],ee.prototype,"source",void 0),(0,s._)([(0,f.MZ)()],ee.prototype,"url",null),ee=(0,s._)([(0,m.$)("esri.layers.support.rasterDatasets.InMemoryRaster")],ee);const te=ee;var ie=i(77725);let ne=class extends D.A{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _open(e){const{extent:t,pixelBlocks:i,multidimensionalInfo:n,attributeTable:s,bandNames:a}=await this._fetchData(e),{statistics:r,histograms:o}=(0,Q.eH)(i[0]),l=null===a||void 0===a?void 0:a.map(e=>({BandName:e})),c={DataType:s?"Thematic":n?"Scientific":"Generic",BandProperties:l},u=new te({source:{extent:t,pixelBlocks:i,attributeTable:s?ie.A.fromJSON(s):null,multidimensionalInfo:n,statistics:r,histograms:o,keyProperties:c,isPseudoSpatialReference:!1}});await u.open(),this._inMemoryRaster=u;const d=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",d.slice(0,d.indexOf("."))),this._set("rasterInfo",u.rasterInfo)}async _fetchData(e){var t,i,n,s;const a=null!==(t=this.source)&&void 0!==t?t:(await this.request(this.url,{signal:null===e||void 0===e?void 0:e.signal})).data,r="imagery-tile-layer:open-coverage-json";if("coverage"!==(null===(i=a.type)||void 0===i?void 0:i.toLowerCase())||"grid"!==(null===(n=a.domain)||void 0===n||null===(n=n.domainType)||void 0===n?void 0:n.toLowerCase()))throw new o.A(r,"Only coverage with Grid domain type is supported");if(!a.ranges)throw new o.A(r,"Missing ranges in the grid coverage data");if(null===(s=a.domain.referencing)||void 0===s||!s.length)throw new o.A(r,"Missing domain referencing in the grid coverage data");const l=Object.values(a.ranges);for(let c=0;c<l.length;c++){const{axisNames:e,shape:t,type:i,values:n}=l[c];if(!("ndarray"===i.toLowerCase()&&null!==n&&void 0!==n&&n.length&&null!==e&&void 0!==e&&e.length&&null!==t&&void 0!==t&&t.length))throw new o.A(r,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!U(e[e.length-1])||!V(e[e.length-2]))throw new o.A(r,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return function(e){var t;const{width:i,height:n,extent:s,dimensions:a}=j(e),{ranges:r}=e,o=Object.keys(r).sort((e,t)=>e<t?-1:1),l=[];for(let h=0;h<o.length;h++){const e=o[h];(null===a||void 0===a?void 0:a.length)&&l.push({name:e,dimensions:a})}const c=Z(e);l.forEach(e=>c[e.name]&&Object.assign(e,c[e.name]));const u=l.length?{variables:l}:void 0,d=[];for(let h=0;h<o.length;h++){const e=o[h],{values:t,dataType:s,axisNames:l,shape:c}=r[e],u=c.length>2?h*c.slice(0,-2).reduce((e,t)=>e*t):0,f=l.slice(0,-2),p=c.slice(0,-2),m="float"===s?"f32":G(t),v=i*n,y=t.length/v;for(let r=0;r<y;r++){const e=z.A.createEmptyBand(m,v),s=new Uint8Array(v).fill(255);let o=!1;const l=r*v;for(let i=0;i<v;i++){const n=t[l+i];null==n?(s[i]=0,o=!0):e[i]=n}if(0===h||null!==a&&void 0!==a&&a.length){const t=new z.A({width:i,height:n,mask:o?s:null,pixels:[e],pixelType:m});t.updateStatistics(),null!==a&&void 0!==a&&a.length?d[W(f,p,r)+u]=t:d.push(t)}else{const t=d[r];t.pixels.push(e),o?t.mask&&(t.mask=z.A.combineBandMasks([t.mask,s])):t.mask=o?s:null}}}const f=null===(t=Object.values(c).find(e=>e.attributeTable))||void 0===t?void 0:t.attributeTable;return{extent:s,pixelBlocks:d,multidimensionalInfo:u,attributeTable:f,bandNames:u?void 0:o}}(a)}};(0,s._)([(0,f.MZ)({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),(0,s._)([(0,f.MZ)({constructOnly:!0})],ne.prototype,"source",void 0),ne=(0,s._)([(0,m.$)("esri.layers.support.rasterDatasets.CovJSONRaster")],ne);const se=ne;var ae=i(18690),re=i(80963),oe=i(86769),le=i(29754);function ce(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function ue(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new E.A({wkid:t});if(e=String(e).trim(),(0,re.jp)(e))return new E.A({wkt2:e});const i=e.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const n=i.indexOf("VERTCS"),s=i.indexOf("PROJCS"),a=s>-1?s:i.indexOf("GEOGCS");if(-1===a)return null;const r=e.slice(a,e.lastIndexOf("]",n)+1).trim(),o=e.slice(n,e.lastIndexOf("]")).trim();t=de(r);const l=new E.A(t?{wkid:t}:{wkt:r}),c=de(o);return c&&(l.vcsWkid=c),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(t=de(e),new E.A(0!==t?{wkid:t}:{wkt:e})):null}function de(e){var t;const i=e.replaceAll("]","[").replaceAll('"',"").split("[").map(e=>e.trim()).filter(e=>""!==e),n=i[i.length-1].split(","),s=null===(t=n[0])||void 0===t?void 0:t.toLowerCase();if(("epsg"===s||"esri"===s)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function fe(e){var t;if("pamdataset"!==(null===e||void 0===e||null===(t=e.documentElement.tagName)||void 0===t?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if((0,oe.g7)(e,"SRS")){if(!i.spatialReference){const t=(0,oe.mX)(e);i.spatialReference=ue(t)}}else if((0,oe.g7)(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=function(e){var t;const i=(0,oe.V6)(e,"GeodataXform"),n=ue((0,oe.v7)(i,"SpatialReference/WKID")||(0,oe.mX)(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const s=null!==(t=(0,oe.v7)(i,"PolynomialOrder"))&&void 0!==t?t:1,a=(0,oe.Ui)(i,"CoeffX/Double"),r=(0,oe.Ui)(i,"CoeffY/Double"),o=(0,oe.Ui)(i,"InverseCoeffX/Double"),l=(0,oe.Ui)(i,"InverseCoeffY/Double"),c=ce(a,r),u=ce(o,l);return{spatialReference:n,transform:c&&u&&c.length&&u.length?new le.A({spatialReference:n,polynomialOrder:s,forwardCoefficients:c,inverseCoefficients:u}):null}}(e);i.transform=n,i.spatialReference||(i.spatialReference=t)}else(0,oe.IC)(e,"MDI").forEach(e=>i.metadata[e.getAttribute("key")]=(0,oe.mX)(e));else if((0,oe.g7)(e,"PAMRasterBand")){const t=function(e){var t;const i=(0,oe.v7)(e,"NoDataValue"),n=(0,oe.V6)(e,"Histograms/HistItem"),s=(0,oe.v7)(n,"HistMin"),a=(0,oe.v7)(n,"HistMax"),r=(0,oe.v7)(n,"BucketCount"),o=null===(t=(0,oe.mX)(n,"HistCounts"))||void 0===t?void 0:t.split("|").map(e=>Number(e));let l,c,u,d;(0,oe.IC)(e,"Metadata/MDI").forEach(e=>{var t;const i=Number(null!==(t=e.textContent)&&void 0!==t?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":d=i}});const f=(0,oe.v7)(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!==o&&void 0!==o&&o.length&&null!=s&&null!=a?{min:s,max:a,size:r||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:d}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}});const n=i.rasterBands;if(n.length){const e=!!n[0].statistics;i.statistics=e?n.map(e=>e.statistics).filter(ae.Ru):null;const t=!!n[0].histogram;i.histograms=t?n.map(e=>e.histogram).filter(ae.Ru):null}return i}var he=i(59648);let pe=class extends D.A{fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _open(e){const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:s,transform:a}=await this._fetchAuxiliaryData(e);const r=!i;r&&(i=new E.A({wkid:3857})),(null===s||void 0===s?void 0:s.length)&&null==n&&(n=(0,Q.Pg)(s));const{width:o,height:l}=t;let c=new L.A({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=a?a.forwardTransform(c):c;let d=!0;if(a){const e=a.forwardCoefficients;d=e&&0===e[1]&&0===e[2],d&&(a=null,c=u)}const f=new te({source:{extent:u,nativeExtent:c,transform:a,pixelBlocks:[t],statistics:n,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:r},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(f.ioConfig.skipMapInfo=!0),await f.open(),f.source=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=(0,he.g)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new o.A("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const n=i.toLowerCase(),s="gif"===n||"bmp"===n||!(0,p.A)("ios"),a=await this.decodePixelBlock(t,{format:n,useCanvas:s,hasNoZlibMask:!0});if(null==a)throw new o.A("image-aux-raster:open","the data cannot be decoded");return a}async _fetchAuxiliaryData(e){var t;const i=null===e||void 0===e?void 0:e.signal,{skipExtensions:n=[],skipMapInfo:s}=this.ioConfig,a=s||n.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:i}),r=this.datasetFormat,o="JPG"===r?"jgw":"PNG"===r?"pgw":"BMP"===r?"bpw":null,l=o&&n.includes(o)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:i}),c=await(0,u.Lx)([a,l]);if(null!==i&&void 0!==i&&i.aborted)throw(0,u.NK)();const d=fe(null===(t=c[0].value)||void 0===t?void 0:t.data);if(!d.transform){const e=c[1].value?c[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;d.transform=6===(null===e||void 0===e?void 0:e.length)?new le.A({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return d}};(0,s._)([(0,f.MZ)({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),pe=(0,s._)([(0,m.$)("esri.layers.support.rasterDatasets.ImageAuxRaster")],pe);const me=pe;var ve=i(30726),ye=i(90534),ge=i(19247),we=i(49653),xe=i(88235),be=i(82356),Ie=i(26855),Ae=i(25213);let _e=class extends D.A{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async fetchRawTile(e,t,i){var s;let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{storageInfo:r,extent:o}=this.rasterInfo,{transposeInfo:l}=r,c=null!=l&&!!a.transposedVariableName;if(this._slices&&!c&&null==a.sliceId)return null;const u=c?0:r.maximumPyramidLevel-e+this._levelOffset,d="".concat(this.url,"/tile/").concat(u,"/").concat(t,"/").concat(i),f=this._slices?c?{variable:a.transposedVariableName}:{sliceId:a.sliceId||0}:null;let h,p;if(r.isBsqTile){var m;const e=(null!==(m=a.bandIds)&&void 0!==m&&m.length?a.bandIds:[0,1,2]).map(e=>this.request(d,{query:(0,n.A)((0,n.A)({},f),{},{bandId:e}),responseType:"array-buffer",signal:a.signal})),t=await Promise.all(e),i=t.map(e=>e.data.byteLength).reduce((e,t)=>e+t),s=new Uint8Array(i);p=[];let r=0;for(const{data:n}of t)p.push(r),s.set(new Uint8Array(n),r),r+=n.byteLength;h=s.buffer}else h=(await this.request(d,{query:f,responseType:"array-buffer",signal:a.signal})).data;if(!h)return null;const v=c?l.tileSize:r.tileInfo.size,y=await this.decodePixelBlock(h,{width:v[0],height:v[1],planes:null===(s=p)||void 0===s?void 0:s.length,offsets:p,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:c,noDataValue:this.rasterInfo.noDataValue});if(null==y)return null;const g=r.blockBoundary[e];if("jpg"!==r.compression||i>g.minCol&&i<g.maxCol&&t>g.minRow&&t<g.maxRow)return y;const{origin:w,blockWidth:x,blockHeight:b}=r,{x:I,y:A}=this.getPyramidPixelSize(e),_=Math.round((o.xmin-w.x)/I)%x,S=Math.round((o.xmax-w.x)/I)%x||x,T=Math.round((w.y-o.ymax)/A)%b,R=Math.round((w.y-o.ymin)/A)%b||b,C=i===g.minCol?_:0,M=t===g.minRow?T:0,O=i===g.maxCol?S:x,F=t===g.maxRow?R:b;return(0,K.z$)(y,{x:C,y:M},{width:O-C,height:F-M}),y}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some(e=>{const i=t.find(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName);return!i||(Array.isArray(e.values[0])?"".concat(e.values[0][0],"-").concat(e.values[0][1]):e.values[0])!==(Array.isArray(i.values[0])?"".concat(i.values[0][0],"-").concat(i.values[0][1]):i.values[0])}))return i}return null}async fetchVariableStatisticsHistograms(e,t){var i;const n=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.statistics}),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.histograms}),a=await Promise.all([n,s]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),null!==(i=a[1])&&void 0!==i&&null!==(i=i[0])&&void 0!==i&&null!==(i=i.counts)&&void 0!==i&&i.length||(a[1]=null),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let n=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let a=s-n+this._levelOffset;const r=i.srcLocation;for(;a>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(a,i.row,i.col,t))break}catch(o){}if(a--,n++,i=this.identifyPixelLocation(r,n,t.datumTransformation),null===i)return null}return-1===a||null==i?null:n}async _open(e){var t,i,s,a,r;const l=null===e||void 0===e?void 0:e.signal,c=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:l});c.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const u=c.data;if(this.sourceJSON=u,!u)throw new o.A("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!u.tileInfo)throw new o.A("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=u.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(u.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===u.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=null!==(t=null===(i=u.name)||void 0===i?void 0:i.slice(u.name.indexOf("/")+1))&&void 0!==t?t:"";const d=await this._fetchRasterInfo({signal:l});if(null==d)throw new o.A("image-server-raster:open","cannot initialize image service");(0,Ae.E9)(d,u);const f="Map"===this.tileType?function(e,t){if(!e)return null;const{minScale:i,maxScale:s,minLOD:a,maxLOD:r}=t;if(null!=a&&null!=r)return xe.A.fromJSON((0,n.A)((0,n.A)({},e),{},{lods:e.lods.filter(e=>{let{level:t}=e;return null!=t&&t>=a&&t<=r})}));if(0!==i&&0!==s){const t=e=>Math.round(1e4*e)/1e4,a=i?t(i):1/0,r=s?t(s):-1/0;return xe.A.fromJSON((0,n.A)((0,n.A)({},e),{},{lods:e.lods.filter(e=>{const i=t(e.scale);return i<=a&&i>=r})}))}return xe.A.fromJSON(e)}(u.tileInfo,u):xe.A.fromJSON(u.tileInfo);(0,ve.Lw)(f);const[h,p]=this._computeMinMaxLOD(d,f),{extent:m,pixelSize:v}=d,y=.5/d.width*v.x,g=Math.max(v.x,v.y),{lods:w}=f;("Map"!==this.tileType&&0!==u.maxScale||Math.abs(v.x-v.y)>y||!w.some(e=>Math.abs(e.resolution-g)<y))&&(v.x=v.y=h.resolution,d.width=Math.ceil((m.xmax-m.xmin)/v.x-.1),d.height=Math.ceil((m.ymax-m.ymin)/v.y-.1));const x=h.level-p.level,[b,I]=f.size,A=[],_=[];w.forEach((e,t)=>{e.level>=p.level&&e.level<=h.level&&A.push({x:e.resolution,y:e.resolution}),t<w.length-1&&_.push(Math.round(10*e.resolution/w[t+1].resolution)/10)}),A.sort((e,t)=>e.x-t.x);const S=this.computeBlockBoundary(m,b,I,f.origin,A,x),T=A.length>1?A.slice(1):null;let R;u.transposeInfo&&(R={tileSize:[u.transposeInfo.rows,u.transposeInfo.cols],packetSize:null!==(s=null===(a=d.keyProperties)||void 0===a?void 0:a._yxs.PacketSize)&&void 0!==s?s:0});const C=_.length<=1||_.length>=3&&_.slice(0,-1).every(e=>e===_[0])?null!==(r=_[0])&&void 0!==r?r:2:Math.round(10/(p.resolution/h.resolution)**(-1/x))/10;if(d.storageInfo=new we.A({blockWidth:f.size[0],blockHeight:f.size[1],pyramidBlockWidth:f.size[0],pyramidBlockHeight:f.size[1],pyramidResolutions:T,pyramidScalingFactor:C,compression:f.format,origin:f.origin,firstPyramidLevel:1,maximumPyramidLevel:x,tileInfo:f,isBsqTile:!!u.bsq,transposeInfo:R,blockBoundary:S}),function(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&(null===i||void 0===i?void 0:i.wkid)&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Ie.A,e.extent=e.transform.forwardTransform(t))}(d),this._set("rasterInfo",d),u.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:d.storageInfo.tileInfo,parsedUrl:(0,ye.An)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new be.d({layer:e})}}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),n=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),s=E.A.fromJSON(t.spatialReference||e.spatialReference),a=new ge.A({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s});return new Y.A({width:i,height:n,bandCount:3,extent:L.A.fromJSON(e),spatialReference:s,pixelSize:a,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,n=(0,Ae.Tw)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),s=t.hasMultidimensions?this.request("".concat(this.url,"/slices"),{query:{f:"json"},signal:i}).then(e=>{var t;return null===(t=e.data)||void 0===t?void 0:t.slices}).catch(()=>null):null,a=await Promise.all([n,s]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_computeMinMaxLOD(e,t){var i,n;const{pixelSize:s}=e,a=.5/e.width*s.x,{lods:r}=t,o=t.lodAt(Math.max.apply(null,r.map(e=>e.level))),l=t.lodAt(Math.min.apply(null,r.map(e=>e.level))),{tileType:c}=this;if("Map"===c)return this._levelOffset=r[0].level,[o,l];var u;if("Raster"===c)return[null!==(u=r.find(e=>e.resolution===s.x))&&void 0!==u?u:o,l];const{minScale:d,maxScale:f}=this.sourceJSON;let h=o;f>0&&(h=r.find(e=>Math.abs(e.scale-f)<a),h||(h=null!==(i=r.filter(e=>e.scale>f).sort((e,t)=>e.scale>t.scale?1:-1)[0])&&void 0!==i?i:o));let p=l;return d>0&&(p=null!==(n=r.find(e=>Math.abs(e.scale-d)<a))&&void 0!==n?n:l,this._levelOffset=p.level-l.level),[h,p]}};(0,s._)([(0,f.MZ)({type:String,json:{write:!0}})],_e.prototype,"datasetFormat",void 0),(0,s._)([(0,f.MZ)()],_e.prototype,"tileType",void 0),_e=(0,s._)([(0,m.$)("esri.layers.support.rasterDatasets.ImageServerRaster")],_e);const Se=_e;var Te=i(10798);const Re=new Map;Re.set("Int8","s8"),Re.set("UInt8","u8"),Re.set("Int16","s16"),Re.set("UInt16","u16"),Re.set("Int32","s32"),Re.set("UInt32","u32"),Re.set("Float32","f32"),Re.set("Float64","f32"),Re.set("Double64","f32");const Ce=new Map;Ce.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Ce.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Ce.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Ce.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Me=class extends D.A{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async fetchRawTile(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{blockWidth:s,blockHeight:a,blockBoundary:r}=this.rasterInfo.storageInfo,o=r[e];if(!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:d,actualTileHeight:f}=this._getTileLocation(e,t,i);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const e=new Uint8Array(s*a);return new z.A({width:s,height:a,pixels:void 0,mask:e,validPixelCount:0})}const{bandIds:h}=this.ioConfig,p=this._getBandSegmentCount(),m=[];let v=0;for(v=0;v<p;v++)h&&!h.includes(v)||m.push(this.request(this._files.data,{range:{from:u[v].from,to:u[v].to},responseType:"array-buffer",signal:n.signal}));const y=await Promise.all(m),g=y.map(e=>e.data.byteLength).reduce((e,t)=>e+t),w=new Uint8Array(g),x=[];let b=0;for(v=0;v<p;v++)x.push(b),w.set(new Uint8Array(y[v].data),b),b+=y[v].data.byteLength;const I=Ce.get(this.rasterInfo.storageInfo.compression).decoderFormat,A=await this.decodePixelBlock(w.buffer,{width:s,height:a,format:I,planes:(null===h||void 0===h?void 0:h.length)||l,offsets:x,pixelType:c});if(null==A)return null;let{noDataValue:_}=this.rasterInfo;if(null!=_&&"lerc"!==I&&!A.mask&&(_=_[0],null!=_)){const e=A.width*A.height,t=new Uint8Array(e);if(Math.abs(_)>1e24)for(v=0;v<e;v++)Math.abs((A.pixels[0][v]-_)/_)>1e-6&&(t[v]=1);else for(v=0;v<e;v++)A.pixels[0][v]!==_&&(t[v]=1);A.mask=t}let S=0,T=0;if(d!==s||f!==a){let e=A.mask;if(e)for(v=0;v<a;v++)if(T=v*s,v<f)for(S=d;S<s;S++)e[T+S]=0;else for(S=0;S<s;S++)e[T+S]=0;else for(e=new Uint8Array(s*a),A.mask=e,v=0;v<f;v++)for(T=v*s,S=0;S<d;S++)e[T+S]=1}return A}async _open(e){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const t=e?e.signal:null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:n,files:s}=this._parseHeader(i.data),{skipMapInfo:a,skipExtensions:r=[]}=this.ioConfig;if(!r.includes("aux.xml")&&!a){var o;const t=await this._fetchAuxiliaryData(e);null!=t&&(n.statistics=null!==(o=t.statistics)&&void 0!==o?o:n.statistics,n.histograms=t.histograms,t.histograms&&null==n.statistics&&(n.statistics=(0,Q.Pg)(t.histograms)))}a&&this.updateImageSpaceRasterInfo(n),this._set("rasterInfo",n),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:t});this._storageIndex=function(e){if(e.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let t,i,n,s,a,r;if(Te.Z){for(i=new Uint8Array(e),s=new ArrayBuffer(e.byteLength),n=new Uint8Array(s),a=0;a<e.byteLength/4;a++)for(r=0;r<4;r++)n[4*a+r]=i[4*a+3-r];t=new Uint32Array(s)}else t=new Uint32Array(e);return t}(l.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,d=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:h}=this.rasterInfo,p=[],m=this._getBandSegmentCount();let v=0,y=-1;for(;v<this._storageIndex.length;){y++;const e=Math.ceil(f/c/d**y)-1,t=Math.ceil(h/u/d**y)-1;v+=(e+1)*(t+1)*m*4,p.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}_getBandSegmentCount(){return Ce.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:s,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:r,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,d,f=0,h=0;for(d=0;d<e;d++)h=a**d,c=Math.ceil(r/n/h),u=Math.ceil(o/s/h),f+=c*u;h=a**e,c=Math.ceil(r/n/h),u=Math.ceil(o/s/h),f+=t*c+i,f*=4*l;const p=this._storageIndex.subarray(f,f+4*l);let m=0,v=0;const y=[];for(let g=0;g<l;g++)m=p[4*g]*2**32+p[4*g+1],v=m+p[4*g+2]*2**32+p[4*g+3],y.push({from:m,to:v});return{ranges:y,actualTileWidth:i<c-1?n:Math.ceil(r/h)-n*(c-1),actualTileHeight:t<u-1?s:Math.ceil(o/h)-s*(u-1)}}_parseHeader(e){const t=(0,oe.V6)(e,"MRF_META/Raster");if(!t)throw new o.A("mrf:open","not a valid MRF format");const i=(0,oe.V6)(t,"Size"),n=parseInt(i.getAttribute("x"),10),s=parseInt(i.getAttribute("y"),10),a=parseInt(i.getAttribute("c"),10),r=((0,oe.mX)(t,"Compression")||"none").toLowerCase();if(!Ce.has(r))throw new o.A("mrf:open","currently does not support compression "+r);const l=(0,oe.mX)(t,"DataType")||"UInt8",c=Re.get(l);if(null==c)throw new o.A("mrf:open","currently does not support pixel type "+l);const u=(0,oe.V6)(t,"PageSize"),d=parseInt(u.getAttribute("x"),10),f=parseInt(u.getAttribute("y"),10),h=(0,oe.V6)(t,"DataValues");let p,m;if(h&&(m=h.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map(e=>parseFloat(e)))),(0,oe.V6)(e,"MRF_META/CachedSource"))throw new o.A("mrf:open","currently does not support MRF referencing other data files");const v=(0,oe.V6)(e,"MRF_META/GeoTags"),y=(0,oe.V6)(v,"BoundingBox");let g,w=!1;if(null!=y){var x;const e=parseFloat(y.getAttribute("minx")),t=parseFloat(y.getAttribute("miny")),i=parseFloat(y.getAttribute("maxx")),n=parseFloat(y.getAttribute("maxy")),s=(0,oe.mX)(v,"Projection")||"";let a=E.A.WGS84;if("LOCAL_CS[]"!==s)if(s.toLowerCase().startsWith("epsg:")){const e=Number(s.slice(5));isNaN(e)||0===e||(a=new E.A({wkid:e}))}else a=null!==(x=ue(s))&&void 0!==x?x:E.A.WGS84;else w=!0,a=new E.A({wkid:3857});g=new L.A(e,t,i,n),g.spatialReference=a}else w=!0,g=new L.A({xmin:-.5,ymin:.5-s,xmax:n-.5,ymax:.5,spatialReference:new E.A({wkid:3857})});const b=(0,oe.V6)(e,"MRF_META/Rsets"),I=parseInt((null===b||void 0===b?void 0:b.getAttribute("scale"))||"2",10),A=g.spatialReference,_=new we.A({origin:new ge.A({x:g.xmin,y:g.ymax,spatialReference:A}),blockWidth:d,blockHeight:f,pyramidBlockWidth:d,pyramidBlockHeight:f,compression:r,pyramidScalingFactor:I}),S=new ge.A({x:g.width/n,y:g.height/s,spatialReference:A}),T=new Y.A({width:n,height:s,extent:g,isPseudoSpatialReference:w,spatialReference:A,bandCount:a,pixelType:c,pixelSize:S,noDataValue:p,storageInfo:_}),R=(0,oe.mX)(e,"datafile"),C=(0,oe.mX)(e,"IndexFile");return{rasterInfo:T,files:{mrf:this.url,index:C||this.url.replace(".mrf",".idx"),data:R||this.url.replace(".mrf",Ce.get(r).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return fe(t)}catch(t){return null}}};(0,s._)([(0,f.MZ)()],Me.prototype,"_files",void 0),(0,s._)([(0,f.MZ)()],Me.prototype,"_storageIndex",void 0),(0,s._)([(0,f.MZ)({type:String,json:{write:!0}})],Me.prototype,"datasetFormat",void 0),Me=(0,s._)([(0,m.$)("esri.layers.support.rasterDatasets.MRFRaster")],Me);const Oe=Me;var Fe=i(50611);function Pe(e){const t=e.fields,i=e.records,n=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",s=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),a=s.map(e=>e.name),r=[];let o=0,l=0;return i.forEach(e=>{const t={};for(t[n]=o++,l=1;l<a.length;l++)t[a[l]]=e[l-1];r.push({attributes:t})}),{displayFieldName:"",fields:s,features:r}}class ke{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),s=t.getUint16(8,!0),a=t.getUint16(10,!0),r={version:i,recordCount:n,headerByteCount:s,recordByteCount:a};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,Fe.w)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&e.byteLength-o>a;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if("C"===t.type)i.push((0,Fe.w)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.slice(0,4),10),parseInt(n.slice(4,6),10)-1,parseInt(n.slice(6,8),10)))}o+=t.length}),c.push(i)):o+=a}}return{header:r,fields:l,records:c,recordSet:Pe({fields:l,records:c})}}}var De=i(87018),Ne=i(75374);const Le=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i?void 0:i.values},Ee=(e,t)=>{var i;return null===(i=e.get(t))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0]};let Be=class extends D.A{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this._chunkSize=10485760,this.datasetFormat="TIFF"}async fetchRawTile(e,t,i){var n;let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(null===(n=this._headerInfo)||void 0===n||!n.isSupported||this.isBlockOutside(e,t,i))return null;const a=await this._fetchRawTiffTile(e,t,i,!1,s);if(null!=a&&this._headerInfo.hasMaskBand){const n=await this._fetchRawTiffTile(e,t,i,!0,s);null!=n&&n.pixels[0]instanceof Uint8Array&&(a.mask=n.pixels[0])}return a}async _open(e){var t,i;const s=e?e.signal:null,{data:a}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:s});if(!a)throw new o.A("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:r,firstIFDPos:c,isBigTiff:u}=(0,De.uT)(a),d=[],f={fileChunk:a,posIFD:c,fileOffset:0};await this._readIFDs(d,f,r,u?8:4,s);const{imageInfo:h,rasterInfo:p}=function(e){var t,i;const s=(0,De.uc)(e),{width:a,height:r,tileWidth:o,tileHeight:l,planes:c,pixelType:u,compression:d,firstPyramidLevel:f,maximumPyramidLevel:h,pyramidBlockWidth:p,pyramidBlockHeight:m,pyramidResolutions:v,tileBoundary:y,affine:g,metadata:w}=s,x=(null===(t=s.extent.spatialReference)||void 0===t?void 0:t.wkt)||(null===(i=s.extent.spatialReference)||void 0===i?void 0:i.wkid);let b=ue(x),I=!!s.isPseudoGeographic;null==b&&(I=!0,b=new E.A({wkid:3857}));const A=new L.A((0,n.A)((0,n.A)({},s.extent),{},{spatialReference:b})),_=new ge.A(A?{x:A.xmin,y:A.ymax,spatialReference:b}:{x:0,y:0}),S=new we.A({blockWidth:o,blockHeight:l,pyramidBlockWidth:p,pyramidBlockHeight:m,compression:d,origin:_,firstPyramidLevel:f,maximumPyramidLevel:h,pyramidResolutions:v,blockBoundary:y}),T=new ge.A({x:(A.xmax-A.xmin)/a,y:(A.ymax-A.ymin)/r,spatialReference:b}),R=w?{BandProperties:w.bandProperties,DataType:w.dataType}:{};let C=null;const M=Ee(e[0],"PHOTOMETRICINTERPRETATION"),O=Le(e[0],"COLORMAP");if(M<=3&&(null===O||void 0===O?void 0:O.length)>3&&O.length%3==0){C=[];const e=O.length/3;for(let t=0;t<e;t++)C.push([t,O[t]>>>8,O[t+e]>>>8,O[t+2*e]>>>8])}const F=new Y.A({width:a,height:r,bandCount:c,pixelType:u,pixelSize:T,storageInfo:S,spatialReference:b,isPseudoSpatialReference:I,keyProperties:R,extent:A,colormap:C,statistics:w?w.statistics:null});if(null!==g&&void 0!==g&&g.length&&(F.nativeExtent=new L.A({xmin:-.5,ymin:.5-r,xmax:a-.5,ymax:.5,spatialReference:b}),F.transform=new le.A({polynomialOrder:1,forwardCoefficients:[g[2]+g[0]/2,g[5]-g[3]/2,g[0],g[3],-g[1],-g[4]]}),F.extent=F.transform.forwardTransform(F.nativeExtent),F.pixelSize=new ge.A({x:(A.xmax-A.xmin)/a,y:(A.ymax-A.ymin)/r,spatialReference:b}),S.origin.x=-.5,S.origin.y=.5),v){const{x:e,y:t}=F.pixelSize;v.forEach(i=>{i.x*=e,i.y*=t})}return{imageInfo:s,rasterInfo:F}}(d),m=(0,De.zS)(d),v=(0,De.r9)(d);if(this._headerInfo=(0,n.A)({littleEndian:r,isBigTiff:u,ifds:d,pyramidIFDs:m,maskIFDs:v},h),this._set("rasterInfo",p),!h.isSupported)throw new o.A("tiffraster:open","this tiff is not supported: "+h.message);if(!h.tileWidth)throw new o.A("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");p.isPseudoSpatialReference&&l.A.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const y=null===(t=d[0].get("PREDICTOR"))||void 0===t||null===(t=t.values)||void 0===t?void 0:t[0];if(3===(null===(i=d[0].get("SAMPLEFORMAT"))||void 0===i||null===(i=i.values)||void 0===i?void 0:i[0])&&2===y)throw new o.A("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:g,skipExtensions:w=[]}=this.ioConfig;if(!w.includes("aux.xml")&&!g){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&function(e,t){var i;if(t.statistics=null!==(i=e.statistics)&&void 0!==i?i:t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,Q.Pg)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new ge.A({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}(t,p)}w.includes("vat.dbf")||1!==p.bandCount||"u8"!==p.pixelType||g||(p.attributeTable=await this._fetchAuxiliaryTable(e),null!=p.attributeTable&&(p.keyProperties.DataType="thematic")),g&&this.updateImageSpaceRasterInfo(p),this.updateTileInfo()}async _validateOrFetchHeaderBuffer(e,t){let{fileChunk:i,fileOffset:n,posIFD:s}=e;return(s+8>=i.byteLength||s<0)&&(n=s+n,i=(await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:t})).data,s=0),{fileChunk:i,fileOffset:n,posIFD:s}}async _readIFDs(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,s=arguments.length>4?arguments[4]:void 0;if(!t.posIFD)return null;t=await this._validateOrFetchHeaderBuffer(t,s);const a=await this._readIFD(t,i,Ne.NB,n,s);if(null===a||void 0===a||!a.ifd)throw new o.A("tiffraster:open","cannot parse tiff header. failed to open url "+this.url);if(e.push(a.ifd),!a.nextIFD)return null;t.posIFD=a.nextIFD-t.fileOffset,await this._readIFDs(e,t,i,n,s)}async _readIFD(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ne.NB,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,s=arguments.length>4?arguments[4]:void 0,{fileChunk:a,posIFD:r,fileOffset:o}=e;if(!e.fileChunk)return null;const l=(0,De.JM)(a,t,r,o,i,n);if(l.success){var c,u;const e=[];if(null!==(c=l.ifd)&&void 0!==c&&c.forEach(t=>{t.values||e.push(t)}),e.length>0&&await this._fillOffsets(e,t,l.nextIFD,s),null!==(u=l.ifd)&&void 0!==u&&u.has("GEOKEYDIRECTORY")){const e=l.ifd.get("GEOKEYDIRECTORY"),i=null===e||void 0===e?void 0:e.values;if(i&&i.length>4){const n=i[0]+"."+i[1]+"."+i[2];r=e.valueOffset+6-o;const l=await this._validateOrFetchHeaderBuffer({fileChunk:a,posIFD:r,fileOffset:o},s),c=await this._readIFD(l,t,Ne.YC,2,s);e.data=null===c||void 0===c?void 0:c.ifd,e.data&&e.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[n]})}}return l}return l.requiredBufferSize?(a=(await this.request(this.url,{range:{from:o,to:o+r+l.requiredBufferSize+8},responseType:"array-buffer",signal:s})).data,a.byteLength<r+l.requiredBufferSize?null:(e.fileChunk=a,e.fileOffset=o,this._readIFD(e,t,i,n,s))):null}async _fillOffsets(e,t,i,n){const s=e.filter(e=>null!=e.offlineOffsetSize);if(0===s.length)return;const a=s.map(e=>e.offlineOffsetSize),r=Math.min.apply(null,a.map(e=>e[0])),o=Math.max.apply(null,a.map(e=>e[0]+e[1]));let l=1===a.length||o-r<=this._bufferSize;if(!l&&a.length>1&&(a.sort((e,t)=>e[0]-t[0]),l=a.reduce((e,t)=>e===t[0]?t[0]+t[1]:0,a[0][0])===o),l){const e=await this._fetchOffsets(r,Math.max(o,r+this._bufferSize),n);return void s.forEach(i=>(0,De.Cr)(e,t,i,r))}const c=s.map(async e=>{const i=e.offlineOffsetSize,s=await this._fetchOffsets(i[0],i[1]+i[0],n);(0,De.Cr)(s,t,e,i[0])});await Promise.all(c)}async _fetchOffsets(e,t,i){const n=[],s=this._chunkSize,a=Math.ceil((t-e)/s);let r=e;for(let c=0;c<a;c++)n.push(this.request(this.url,{range:{from:r,to:c===a-1?t:r+s-1},responseType:"array-buffer",signal:i})),r+=s;const o=await Promise.all(n);if(1===a)return o[0].data;const l=new Uint8Array(t-e+1);for(let c=0;c<a;c++)l.set(new Uint8Array(o[c].data),c*s);return l.buffer}async _fetchRawTiffTile(e,t,i,n){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};const a=this._getTileLocation(e,t,i,n);if(!a)return null;const{ranges:r,actualTileWidth:o,actualTileHeight:l,ifd:c}=a,u=r.map(e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:s.signal})),d=await Promise.all(u),f=d.map(e=>e.data.byteLength).reduce((e,t)=>e+t),h=1===d.length?d[0].data:new ArrayBuffer(f),p=[0],m=[0];if(d.length>1){const e=new Uint8Array(h);for(let t=0,i=0;t<d.length;t++){const n=d[t].data;e.set(new Uint8Array(n),i),p[t]=i,i+=n.byteLength,m[t]=n.byteLength}}const{blockWidth:v,blockHeight:y}=this.getBlockWidthHeight(e),g=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:m},width:v,height:y,planes:null,pixelType:null});if(null==g)return null;let w,x,b;if(o!==v||l!==y){let e=g.mask;if(e)for(w=0;w<y;w++)if(b=w*v,w<l)for(x=o;x<v;x++)e[b+x]=0;else for(x=0;x<v;x++)e[b+x]=0;else for(e=new Uint8Array(v*y),g.mask=e,w=0;w<l;w++)for(b=w*v,x=0;x<o;x++)e[b+x]=1}return g}_getTileLocation(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const{firstPyramidLevel:s,blockBoundary:a}=this.rasterInfo.storageInfo,r=0===e?0:e-(s-1),{_headerInfo:o}=this;if(!o)return null;const l=n?o.maskIFDs[r]:0===r?null===o||void 0===o?void 0:o.ifds[0]:null===o||void 0===o?void 0:o.pyramidIFDs[r-1];if(!l)return null;const c=(0,De.XO)(l,o),u=Le(l,"TILEOFFSETS");if(void 0===u)return null;const d=Le(l,"TILEBYTECOUNTS"),{minRow:f,minCol:h,maxRow:p,maxCol:m}=a[r];if(t>p||i>m||t<f||i<h)return null;const v=Ee(l,"IMAGEWIDTH"),y=Ee(l,"IMAGELENGTH"),g=Ee(l,"TILEWIDTH"),w=Ee(l,"TILELENGTH"),x=[];if(c){const{bandCount:e}=this.rasterInfo;for(let n=0;n<e;n++){const e=n*(p+1)*(m+1)+t*(m+1)+i;x[n]={from:u[e],to:u[e]+d[e]-1}}}else{const e=t*(m+1)+i;x.push({from:u[e],to:u[e]+d[e]-1})}for(let b=0;b<x.length;b++)if(null==x[b].from||!x[b].to||x[b].to<0)return null;return{ranges:x,ifd:l,actualTileWidth:i===m&&v%g||g,actualTileHeight:t===p&&y%w||w}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null===e||void 0===e?void 0:e.signal});return fe(t)}catch(t){return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:null===e||void 0===e?void 0:e.signal}),i=ke.parse(t);return null!==i&&void 0!==i&&i.recordSet?ie.A.fromJSON(i.recordSet):null}catch(t){return null}}};(0,s._)([(0,f.MZ)()],Be.prototype,"_files",void 0),(0,s._)([(0,f.MZ)()],Be.prototype,"_headerInfo",void 0),(0,s._)([(0,f.MZ)()],Be.prototype,"_bufferSize",void 0),(0,s._)([(0,f.MZ)()],Be.prototype,"_chunkSize",void 0),(0,s._)([(0,f.MZ)({type:String,json:{write:!0}})],Be.prototype,"datasetFormat",void 0),Be=(0,s._)([(0,m.$)("esri.layers.support.rasterDatasets.TIFFRaster")],Be);const ze=Be,Je=new Map;Je.set("MRF",{desc:"Meta Raster Format",constructor:Oe}),Je.set("TIFF",{desc:"GeoTIFF",constructor:ze}),Je.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Se}),Je.set("JPG",{desc:"JPG Raster Format",constructor:me}),Je.set("PNG",{desc:"PNG Raster Format",constructor:me}),Je.set("GIF",{desc:"GIF Raster Format",constructor:me}),Je.set("BMP",{desc:"BMP Raster Format",constructor:me}),Je.set("CovJSON",{desc:"COVJSON Raster Format",constructor:se}),Je.set("MEMORY",{desc:"In Memory Raster Format",constructor:te});class Ue{static get supportedFormats(){const e=new Set;return Je.forEach((t,i)=>e.add(i)),e}static async open(e){var t,i;const{url:n,ioConfig:s,source:a,sourceJSON:r}=e;let l=null!==(t=e.datasetFormat)&&void 0!==t?t:null===s||void 0===s?void 0:s.datasetFormat;null==l&&(n.includes(".")?l=n.slice(n.lastIndexOf(".")+1).toUpperCase():"coverage"===(null===a||void 0===a||null===(i=a.type)||void 0===i?void 0:i.toLowerCase())?l="CovJSON":(null===a||void 0===a?void 0:a.extent)&&a.pixelblocks&&(l="MEMORY")),"OVR"===l||"TIF"===l?l="TIFF":"JPG"===l||"JPEG"===l||"JFIF"===l?l="JPG":"COVJSON"===l&&(l="CovJSON"),n.toLowerCase().includes("/imageserver")&&!n.toLowerCase().includes("/wcsserver")&&(l="RasterTileServer");const c={url:n,source:a,sourceJSON:r,datasetFormat:l,ioConfig:null!==s&&void 0!==s?s:{bandIds:null,sampling:null}};if(Object.keys(c).forEach(e=>{null==c[e]&&delete c[e]}),l){if(!this.supportedFormats.has(l))throw new o.A("rasterfactory:open","not a supported format "+l);if("CRF"===l)throw new o.A("rasterfactory:open","cannot open raster: ".concat(n));const t=new(0,Je.get(l).constructor)(c);return await t.open({signal:e.signal}),t}const u=Array.from(Je.keys()).filter(e=>"CovJSON"!==e&&"Memory"!==e);let d=0;const f=()=>{if(l=u[d++],!l)return null;if("CRF"===l)return null;const t=new(0,Je.get(l).constructor)(c);return t.open({signal:e.signal}).then(()=>t).catch(()=>f())};return f()}static register(e,t,i){Je.has(e.toUpperCase())||Je.set(e.toUpperCase(),{desc:t,constructor:i})}}var Ve=i(81633),je=i(30973),He=i(61701);let qe=class extends((0,g.dM)((0,T.j)((0,b.q)((0,I.A)((0,_.H)((0,w.d)((0,x.o)((0,A.G)((0,R.e)((0,y.b)((0,S.J)((0,c.P)(r.A.ClonableMixin(v.A)))))))))))))){constructor(){super(...arguments),this._primaryRasters=[],this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,u.sg)(async(e,t,n)=>{const{save:s,saveAs:a}=await i.e(20964).then(i.bind(i,20964));switch(e){case He.X.SAVE:return s(this,t);case He.X.SAVE_AS:return a(this,n,t)}})}normalizeCtorArgs(e,t){return"string"==typeof e?(0,n.A)({url:e},t):e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(u.QP).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;const i=[(0,O.rZ)("Pixel Value"),(0,O.dy)("Raw Pixel Value")],n=null!==(e=null===(t=this.raster)||void 0===t?void 0:t.rasterInfo)&&void 0!==e?e:this.serviceRasterInfo,s=null===n||void 0===n?void 0:n.attributeTable;if(s){const e=(0,O.jC)(s);i.push(...e)}const a=null===n||void 0===n?void 0:n.dataType,r=null===n||void 0===n?void 0:n.multidimensionalInfo;if(("vector-magdir"===a||"vector-uv"===a)&&null!=r){var o;const e=null===(o=r.variables[0].unit)||void 0===o?void 0:o.trim(),t=(0,O.DV)(e),n=(0,O.y6)();i.push(t,n)}if(r){const e=(0,O.AL)(r);i.push(...e)}return i}createPopupTemplate(e){var t;const{rasterFields:i}=this,s=null!==(t=null===e||void 0===e?void 0:e.visibleFieldNames)&&void 0!==t?t:new Set(i.map(e=>{let{name:t}=e;return t}).filter(e=>e!==O.F_.rawServicePixelValue)),a=(0,je.tn)({fields:i,title:this.title},(0,n.A)((0,n.A)({},e),{},{visibleFieldNames:s})),{rasterInfo:r}=this.raster;return null!==a&&void 0!==a&&a.fieldInfos&&r&&(0,O.h4)(a.fieldInfos,r),a}async generateRasterInfo(e,t){var i;if(e=(0,h.PZ)(F.A,e),await this.load(),!e||"none"===(null===(i=e.functionName)||void 0===i?void 0:i.toLowerCase()))return this.serviceRasterInfo;try{const{rasterInfo:i}=await this._openFunctionRaster(e,t);return i}catch(ke){if(ke instanceof o.A)throw ke;throw new o.A("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(He.X.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(He.X.SAVE_AS,t,e)}write(e,t){var i;const n=null!==(i=this._primaryRasters[0])&&void 0!==i?i:this.raster;if(this.loaded?"RasterTileServer"===n.datasetFormat&&("Raster"===n.tileType||"Map"===n.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(null!==t&&void 0!==t&&t.messages){const e="".concat(t.origin,"/").concat(t.layerContainerType||"operational-layers");t.messages.push(new o.A("layer:unsupported","Layers (".concat(this.title,", ").concat(this.id,") of type '").concat(this.declaredClass,"' are not supported in the context of '").concat(e,"'"),{layer:this}))}return null}async _openRaster(e){var t;let i=!1;if(this.raster)await this._openFromRaster(this.raster,e),i=(0,P.q)(this.raster),!i&&this.rasterFunction&&(this._primaryRasters=[this.raster],await this._initializeWithFunctionRaster(this.rasterFunction));else{const{url:t,rasterFunction:i,source:n}=this;if(!t&&!n)throw new o.A("imagery-tile-layer:open","missing url or source parameter");n?await this._openFromSource(n,e):i?await this._openFromUrlWithRasterFunction(t,i,e):await this._openFromUrl(t,e)}const s=this.raster.rasterInfo;if(!s)throw new o.A("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",i?s:this._primaryRasters[0].rasterInfo),this._set("spatialReference",s.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:(0,n.A)((0,n.A)({},this.sourceJSON),{},{minScale:0,maxScale:0});this.read(e,{origin:"service"})}else this.read({tileInfo:null===(t=this.serviceRasterInfo)||void 0===t?void 0:t.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,d.wB)(()=>this.customParameters,e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)}))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters=(0,P.p)(e),this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,i){const s=[e];t&&(0,Ve.UD)(t.toJSON(),s);const a=await Promise.all(s.map(e=>Ue.open({url:e,sourceJSON:this.sourceJSON,ioConfig:(0,n.A)((0,n.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:i}))),r=a.findIndex(e=>null==e);if(r>-1)throw new o.A("imagery-tile-layer:open","cannot open raster: ".concat(s[r]));return this._primaryRasters=a,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){const i=await Ue.open({url:e,sourceJSON:this.sourceJSON,ioConfig:(0,n.A)((0,n.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:t});if(null==i)throw new o.A("imagery-tile-layer:open","cannot open raster: ".concat(e));this._primaryRasters=[i],this.raster=i}async _openFromSource(e,t){var i;const s="the tiled imagery data source is not supported",a="coverage"===(null===(i=e.type)||void 0===i?void 0:i.toLowerCase())?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!a)throw new o.A("imagery-tile-layer:open",s);"MEMORY"===a&&(e=(0,n.A)((0,n.A)({},e),{},{pixelBlock:void 0,pixelBlocks:[e.pixelBlock]}));const r=await Ue.open({url:"",source:e,datasetFormat:a,ioConfig:(0,n.A)((0,n.A)({sampling:"closest"},this.ioConfig),{},{customFetchParameters:this.customParameters}),signal:t});if(null==r)throw new o.A("imagery-tile-layer:open",s);this._primaryRasters=[r],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=r}async _openFunctionRaster(e,t){var i,n;const s={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(e=>s[e.url]=e);const a=(0,Ve.vt)(null!==(i=null===(n=e.functionDefinition)||void 0===n?void 0:n.toJSON())&&void 0!==i?i:e.toJSON(),s),r=new k.A({rasterFunction:a});return await r.open(t),r}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(ke){ke instanceof o.A&&l.A.getLogger(this).error("imagery-tile-layer:open",ke.message),l.A.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};(0,s._)([(0,f.MZ)({clonable:!1})],qe.prototype,"_primaryRasters",void 0),(0,s._)([(0,f.MZ)(C.fV)],qe.prototype,"legendEnabled",void 0),(0,s._)([(0,f.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],qe.prototype,"isReference",void 0),(0,s._)([(0,f.MZ)({type:["show","hide"]})],qe.prototype,"listMode",void 0),(0,s._)([(0,f.MZ)({json:{read:!0,write:!0}})],qe.prototype,"blendMode",void 0),(0,s._)([(0,f.MZ)({type:F.A,json:{name:"renderingRule",write:!0}})],qe.prototype,"rasterFunction",void 0),(0,s._)([(0,f.MZ)()],qe.prototype,"sourceJSON",void 0),(0,s._)([(0,f.MZ)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],qe.prototype,"version",void 0),(0,s._)([(0,f.MZ)({readOnly:!0,json:{read:!1}})],qe.prototype,"type",void 0),(0,s._)([(0,f.MZ)({type:["ArcGISTiledImageServiceLayer"]})],qe.prototype,"operationalLayerType",void 0),(0,s._)([(0,f.MZ)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],qe.prototype,"popupEnabled",void 0),(0,s._)([(0,f.MZ)({type:a.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],qe.prototype,"popupTemplate",void 0),(0,s._)([(0,f.MZ)({readOnly:!0})],qe.prototype,"defaultPopupTemplate",null),(0,s._)([(0,f.MZ)({readOnly:!0,type:[M.A]})],qe.prototype,"fields",void 0),(0,s._)([(0,f.MZ)({readOnly:!0,type:[M.A]})],qe.prototype,"rasterFields",null),(0,s._)([(0,f.MZ)({constructOnly:!0})],qe.prototype,"source",void 0),qe=(0,s._)([(0,m.$)("esri.layers.ImageryTileLayer")],qe);const Ze=qe},75116:(e,t,i)=>{i.d(t,{A:()=>o});var n=i(35143),s=i(42553),a=i(46053),r=(i(81806),i(76460),i(47249),i(85842));let o=class extends s.A{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};(0,n._)([(0,a.MZ)()],o.prototype,"affectsPixelSize",null),(0,n._)([(0,a.MZ)({json:{write:!0}})],o.prototype,"spatialReference",void 0),o=(0,n._)([(0,r.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],o)},82356:(e,t,i)=>{i.d(t,{d:()=>R});var n,s,a=i(89379),r=i(35143),o=i(3825),l=i(91967),c=i(55877),u=i(50076),d=i(54901),f=(i(81806),i(53521)),h=i(68930),p=i(50346),m=i(68134),v=i(52394),y=i(90534),g=i(46053),w=(i(76460),i(47249),i(85842)),x=i(11164),b=i(53084),I=i(97255),A=i(78393);class _{constructor(e){!function(e){if(null===e||void 0===e||!e.location)throw new u.A("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new u.A("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new u.A("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new u.A("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new u.A("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}(e);const{location:t,data:i}=e;this.location=Object.freeze((0,b.o8)(t));const n=this.location.width,s=this.location.height;let a=!0,r=!0;const o=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return e<=A.y9?t?new Array(e).fill(0):new Array(e):new Uint32Array(e)}(Math.ceil(n*s/32));let l=0;for(let c=0;c<i.length;c++){const e=c%32;i[c]?(r=!1,o[l]|=1<<e):a=!1,31===e&&++l}r?(this._availability="unavailable",this.byteSize=40):a?(this._availability="available",this.byteSize=40):(this._availability=o,this.byteSize=40+(0,I.Qf)(o))}getAvailability(e,t){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),n=i%32,s=i>>5,a=this._availability;return s<0||s>a.length?"unknown":a[s]&1<<n?"available":"unavailable"}static fromDefinition(e,t){const i=e.service.request||o.A,{row:n,col:s,width:r,height:l}=e,c={query:{f:"json"}};return t=t?(0,a.A)((0,a.A)({},c),t):c,i(function(e){var t;let i;if(null!==(t=e.service.tileServers)&&void 0!==t&&t.length){const t=e.service.tileServers;i="".concat(t&&t.length?t[e.row%t.length]:e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}else i="".concat(e.service.url,"/tilemap/").concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height);const n=e.service.query;return n&&(i="".concat(i,"?").concat(n)),i}(e),t).then(e=>e.data).catch(e=>{var t;if(422===(null===e||void 0===e||null===(t=e.details)||void 0===t?void 0:t.httpStatus))return{location:{top:n,left:s,width:r,height:l},valid:!0,data:new Array(r*l).fill(0)};throw e}).then(e=>{if(e.location&&(e.location.top!==n||e.location.left!==s||e.location.width!==r||e.location.height!==l))throw new u.A("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:n,left:s,width:r,height:l}});return _.fromJSON(e)})}static fromJSON(e){return Object.freeze(new _(e))}}function S(e){return"".concat(e.level,"/").concat(e.row,"/").concat(e.col,"/").concat(e.width,"/").concat(e.height)}function T(e,t,i){return new u.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})}let R=(n=class extends l.A{constructor(e){super(e),this._pendingTilemapRequests={},this.request=o.A,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new f.q(2*c.u.MEGABYTES),this.addHandles((0,m.wB)(()=>{const{layer:e}=this;return[null===e||void 0===e?void 0:e.parsedUrl,null===e||void 0===e?void 0:e.tileServers,null===e||void 0===e?void 0:e.apiKey,null===e||void 0===e?void 0:e.customParameters]},()=>this._initializeTilemapDefinition(),m.Vh))}get effectiveMinLOD(){var e;return null!==(e=this.minLOD)&&void 0!==e?e:this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){var e;return null!==(e=this.maxLOD)&&void 0!==e?e:this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const n=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return n?n.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,n){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(T(e,t,i)):this._fetchTilemap(e,t,i,n).catch(e=>e).then(n=>{if(n instanceof _){const s=n.getAvailability(t,i);if("unavailable"===s)throw T(e,t,i);return s}if((0,p.zf)(n))throw n;return"unknown"})}fetchAvailabilityUpsample(e,t,i,n,s){n.level=e,n.row=t,n.col=i;const a=this.layer.tileInfo;a.updateTileInfo(n);const r=this.fetchAvailability(e,t,i,s).catch(e=>{if((0,p.zf)(e))throw e;if(a.upsampleTile(n))return this.fetchAvailabilityUpsample(n.level,n.row,n.col,n,s);throw e});return this._fetchAvailabilityUpsamplePrefetch(n.id,e,t,i,s,r),r}async _fetchAvailabilityUpsamplePrefetch(e,t,i,n,r,o){if(!this._prefetchingEnabled||null==e)return;const l="prefetch-".concat(e);if(this.hasHandles(l))return;const c=new AbortController;o.then(()=>c.abort(),()=>c.abort());let u=!1;const f=(0,d.hA)(()=>{u||(u=!0,c.abort())});if(this.addHandles(f,l),await(0,v.md)(10,c.signal).catch(()=>{}),u||(u=!0,this.removeHandles(l)),(0,p.G4)(c))return;const h=new x.U(e,t,i,n),m=(0,a.A)((0,a.A)({},r),{},{signal:c.signal}),y=this.layer.tileInfo;for(let a=0;s._prefetches.length<s._maxPrefetch&&y.upsampleTile(h);++a){const e=this.fetchAvailability(h.level,h.row,h.col,m);s._prefetches.push(e);const t=()=>{s._prefetches.removeUnordered(e)};e.then(t,t)}}_fetchTilemap(e,t,i,n){var s;if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new u.A("tilemap-cache:level-unavailable","Level ".concat(e," is unavailable in the service")));const r=this._tmpTilemapDefinition,o=this._tilemapFromCache(e,t,i,r);if(o)return Promise.resolve(o);const l=null===(s=n)||void 0===s?void 0:s.signal;return n=(0,a.A)((0,a.A)({},n),{},{signal:null}),new Promise((e,t)=>{(0,p.u7)(l,()=>t((0,p.NK)()));const i=S(r);let s=this._pendingTilemapRequests[i];if(!s){s=_.fromDefinition(r,n).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>{delete this._pendingTilemapRequests[i]};this._pendingTilemapRequests[i]=s,s.then(e,e)}s.then(e,t)})}_initializeTilemapDefinition(){var e;if(!this.layer.parsedUrl)return;const{parsedUrl:t,apiKey:i,customParameters:n}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:t.path,query:(0,y.x0)((0,a.A)((0,a.A)((0,a.A)({},t.query),n),{},{token:null!==i&&void 0!==i?i:null===(e=t.query)||void 0===e?void 0:e.token})),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,n){n.level=e,n.row=t-t%this.size,n.col=i-i%this.size;const s=S(n);return this._tilemapCache.get(s)}get test(){}},s=n,n._maxPrefetch=4,n._prefetches=new h.A({initialSize:s._maxPrefetch}),n);(0,r._)([(0,g.MZ)({constructOnly:!0})],R.prototype,"layer",void 0),(0,r._)([(0,g.MZ)({constructOnly:!0})],R.prototype,"minLOD",void 0),(0,r._)([(0,g.MZ)({constructOnly:!0})],R.prototype,"maxLOD",void 0),(0,r._)([(0,g.MZ)({constructOnly:!0})],R.prototype,"request",void 0),(0,r._)([(0,g.MZ)({constructOnly:!0})],R.prototype,"size",void 0),R=s=(0,r._)([(0,w.$)("esri.layers.support.TilemapCache")],R)}}]);
//# sourceMappingURL=49237.244aabaa.chunk.js.map