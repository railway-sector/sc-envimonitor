"use strict";(self.webpackChunksc_envimonitor=self.webpackChunksc_envimonitor||[]).push([[46745],{46745:(e,t,n)=>{n.r(t),n.d(t,{TextureCompressionWorkerOutput:()=>h,compress:()=>f,compressRGBADataToKTX2:()=>v,createTextureDataKTX2:()=>m,initializeBasisEncoder:()=>p,initializeDXTEncoder:()=>w});var a=n(28899);let r;var l=n(45235);let i;var s=n(93345);let o,u,c=null,d=null;class h{constructor(e,t){this.internalFormat=e,this.compressedTexture=t}}async function f(e){let t;if(t=e.data instanceof ImageBitmap?function(e){const t=new OffscreenCanvas(e.width,e.height),n=t.getContext("2d");return n.drawImage(e,0,0),n.getImageData(0,0,t.width,t.height).data}(e.data):function(e,t,n,a,r){const l=new Uint8ClampedArray(e).subarray(0,t*n*a);if(!r)return l;const i=new Uint8ClampedArray(l.length),s=t*a;for(let o=0;o<n;o++){const e=o*s,t=(n-o-1)*s;i.set(l.subarray(e,e+s),t)}return i}(e.data,e.width,e.height,e.components,e.needsFlip),e.hasS3TC){var n;d||await w();const l=new Uint8Array(t.length);if(null!==(n=d)&&void 0!==n&&n.encode(t,e.width,e.height,e.preMultiplyAlpha,l)){var a,r;const e=function(e,t){const n=new Int32Array(e.buffer,e.byteOffset,C);let a,r;switch(n[_]){case D:a=8,r=s.CQ.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case R:a=16,r=s.CQ.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case X:a=16,r=s.CQ.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let l=1,i=n[g],o=n[A];(3&i||3&o)&&(i=i+3&-4,o=o+3&-4);const u=i,c=o;let d,h;n[y]&b&&!1!==t&&(l=Math.max(1,n[E]));let f=e.byteOffset+n[T]+4;const p=[];for(let s=0;s<l;++s)h=(i+3>>2)*(o+3>>2)*a,d=new Uint8Array(e.buffer,f,h),p.push(d),f+=h,i=Math.max(1,i>>1),o=Math.max(1,o>>1);return{textureData:{type:"compressed",levels:p},internalFormat:r,width:u,height:c}}(l,!0),t=[l.buffer];return{result:new h(null!==(a=null===e||void 0===e?void 0:e.internalFormat)&&void 0!==a?a:null,null!==(r=null===e||void 0===e?void 0:e.textureData)&&void 0!==r?r:null),transferList:t}}return{result:new h(null,null)}}if(e.hasETC){var l,i,o;if(c||await p(),e.preMultiplyAlpha&&!d&&await w(),e.preMultiplyAlpha){var u;const n=new Uint8ClampedArray(t.length);null!==(u=d)&&void 0!==u&&u.premultiply(new Uint8Array(t),e.width,e.height,n),t=n}const n=await v(t,e.width,e.height,e.hasMipmap),a=n?await m(n):null,r=(null===a||void 0===a||null===(l=a.compressedTexture)||void 0===l?void 0:l.levels.map(e=>e.buffer))||[];return{result:new h(null!==(i=null===a||void 0===a?void 0:a.internalFormat)&&void 0!==i?i:null,null!==(o=null===a||void 0===a?void 0:a.compressedTexture)&&void 0!==o?o:null),transferList:r}}return{result:new h(null,null)}}async function p(){c||(c=await(null!==o&&void 0!==o?o:(null!==r&&void 0!==r||(r=(async()=>{const e=await n.e(56378).then(n.bind(n,56378)),t=await e.default({locateFile:e=>(0,a.s)("esri/libs/basisu/".concat(e))});return t.initializeBasis(),t})()),o=r)))}async function w(){d||(d=await(null!==u&&void 0!==u?u:(null!==i&&void 0!==i||(i=(async()=>{const e=await n.e(53996).then(n.bind(n,53996));return await e.default({locateFile:e=>(0,a.s)("esri/libs/dxtEncoder/".concat(e))})})()),u=i)))}async function v(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:255,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];if(!c)return null;const o=new c.BasisEncoder;o.setPerceptual(!s),o.setCheckForAlpha(!0),o.setForceAlpha(!1),o.setRenormalize(s),o.setMipGen(a),o.setMipSRGB(!s),o.setCreateKTX2File(!0),o.setKTX2SRGBTransferFunc(!s),o.setQualityLevel(r),o.setCompressionLevel(l);const u=new Uint8Array(e.byteLength);o.setSliceSourceImage(0,new Uint8Array(e),t,n,i);const d=o.encode(u),h=new Uint8Array(u.buffer,0,d),f=new c.KTX2File(new Uint8Array(h));return f.isValid()?(o.delete(),h):(f.close(),f.delete(),o.delete(),null)}async function m(e){if(!c)return new h(null,null);const t=new c.KTX2File(new Uint8Array(e));t.startTranscoding();const[n,a]=t.getHasAlpha()?[l.n.ETC2_RGBA,s.CQ.COMPRESSED_RGBA8_ETC2_EAC]:[l.n.ETC1_RGB,s.CQ.COMPRESSED_RGB8_ETC2],r=t.getLevels(),i=[];for(let l=0;l<r;l++)i.push(new Uint8Array(t.getImageTranscodedSizeInBytes(l,0,0,n))),t.transcodeImage(i[l],l,0,0,n,0,-1,-1);return t.close(),t.delete(),{internalFormat:a,compressedTexture:{type:"compressed",levels:i}}}const C=31,T=1,y=2,A=3,g=4,E=7,_=21,b=131072;function S(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const D=S("DXT1"),R=S("DXT3"),X=S("DXT5")}}]);
//# sourceMappingURL=46745.27c66ece.chunk.js.map