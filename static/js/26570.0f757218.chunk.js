"use strict";(self.webpackChunksc_envimonitor=self.webpackChunksc_envimonitor||[]).push([[26570],{26570:(e,i,t)=>{t.r(i),t.d(i,{default:()=>R});var a=t(35143),n=t(55),s=t(19276),o=t(50076),r=t(76460),l=t(87663),d=t(77717),h=t(50346),p=t(68134),y=t(90534),u=t(49723),c=t(46053),f=(t(81806),t(47249),t(28379)),g=t(85842),m=t(17707),w=t(49140),M=t(25515),b=t(12718),T=t(83716),v=t(2948),_=t(19502),D=t(65624),A=t(31362),S=t(11270),L=t(94729),k=t(21617),N=t(5682),G=t(95363),E=t(78026),C=t(79453);let I=class extends((0,D.dM)((0,N.j)((0,k.J)((0,_.b)((0,S.q)((0,L.A)((0,d.P)((0,A.d)(M.A))))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(s.A.ofType(T.A)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(s.A.ofType(T.A)),this.type="knowledge-graph",this.url=null,this.addHandles((0,p.wB)(()=>this.layers.concat(this.tables),(e,i)=>this._handleSublayersChange(e,i),p.OH))}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(i){(0,h.QP)(i)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await(0,v.qN)(this)}async _fetchMetadata(){if(!this.url)throw new o.A("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await(0,E.fetchKnowledgeGraph)(this.url);this.knowledgeGraph=e,this._forEachGraphType(e=>{e.name&&this._graphTypeLookup.set(e.name,e)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===w.Gr.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new b.P({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await(0,n.cZ)(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(i=>{const t=this._graphTypeLookup.get(i.graphTypeName);t&&!e.namedTypeDefinitions.has(t.name)&&e.namedTypeDefinitions.set(t.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,(0,w.OL)(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:i}=e;if((null===i||void 0===i?void 0:i.size)>0)i.forEach((e,t)=>{const a=this._graphTypeLookup.get(t);if(!a)return r.A.getLogger(this).warn("A named type, ".concat(t,", was in the inclusion list that wasn't in the data model and will be removed")),void i.delete(t);"relationship"!==a.type&&"entity"!==a.type&&(r.A.getLogger(this).warn("A named type, ".concat(t,", was in the inclusion list that wasn't properly modeled and will be removed")),i.delete(t))});else if(!e.generateAllSublayers)throw new o.A("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var e,i,t,a;let n=[],s=[];const{inclusionModeDefinition:o}=this,r=null===o||void 0===o?void 0:o.namedTypeDefinitions;!o||o.generateAllSublayers?(n=null!==(e=null===(i=this.knowledgeGraph.dataModel)||void 0===i?void 0:i.entityTypes)&&void 0!==e?e:[],s=null!==(t=null===(a=this.knowledgeGraph.dataModel)||void 0===a?void 0:a.relationshipTypes)&&void 0!==t?t:[]):r&&r.size>0&&r.forEach((e,i)=>{const t=this._graphTypeLookup.get(i);switch(null===t||void 0===t?void 0:t.type){case"relationship":s.push(t);break;case"entity":n.push(t)}}),this.memberEntityTypes=n,this.memberRelationshipTypes=s}_forEachGraphType(e){var i,t,a,n;[...null!==(i=null===(t=this.knowledgeGraph.dataModel)||void 0===t?void 0:t.entityTypes)&&void 0!==i?i:[],...null!==(a=null===(n=this.knowledgeGraph.dataModel)||void 0===n?void 0:n.relationshipTypes)&&void 0!==a?a:[]].forEach(i=>{e(i)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const i=new Set,t=[];for(const a of e)this._graphTypeLookup.has(a.typeName)&&(!1===this.layers.concat(this.tables).some(e=>e.objectType.name===a.typeName)&&(this.dataManager.sublayerCaches.set(a.typeName,new Map),i.add(a.typeName)),(0,l.tE)(this.sublayerIdsCache,a.typeName,()=>new Set).add(a.id),t.push(a));this.dataManager.addToLayer(t);for(const a of i){const e=this._graphTypeLookup.get(a);e&&(this._addSublayer(e),"entity"===e.type?this.dataManager.entityTypeNames.add(a):this.dataManager.relationshipTypeNames.add(a))}await(0,v.qN)(this,Array.from(i)),this._refreshNamedTypes()}_createSublayers(e,i,t){e.forEach(e=>{const a=this._createSublayer(e);t(a)&&i.push(a),this._updateSublayerCaches(e)})}_addSublayer(e){const i=this._createSublayer(e);return i.geometryType?this.layers.push(i):this.tables.push(i),i}_createSublayer(e){return new T.A({objectType:e,parentCompositeLayer:this,graphType:e.type})}_updateSublayers(e,i){i.forEach(i=>{i.parentCompositeLayer=this;const t=e.find(e=>e.type===i.graphType&&e.name===i.graphTypeName);t&&(i.objectType=t,this._updateSublayerCaches(t))})}_updateSublayerCaches(e){let{name:i}=e;if(!i)return;const t=this.dataManager.sublayerCaches;t.has(i)||t.set(i,new Map)}_saveUrlAsNewResource(e,i,t,a){e[i]="<pending>",t.pendingOperations.push(async function(e){const i=await(0,n.fe)(e);return new Blob([i],{type:"application/x-protobuf"})}(this.inclusionModeDefinition).then(n=>{const s=function(e){const i="definitionSetMap-".concat((0,u.lk)(),".dat"),t=(0,y.fj)("knowledgeGraphLayer",i);return e.resourceFromPath(t)}(a);e[i]=s.itemRelativeUrl,t.toAdd.push({resource:s,content:{type:"blob",blob:n},compress:!1,finish:e=>{this.definitionSetMap=e.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:i}]of e.namedTypeDefinitions)if(!i)return!1;return!0}_handleSublayersChange(e,i){i&&(i.forEach(e=>{e.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(e=>{e.parent=this}),this.addHandles([e.on("after-add",e=>{let{item:i}=e;i.parent=this}),e.on("after-remove",e=>{let{item:i}=e;i.parent=null})],"sublayers-owner"))}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=w.Gr.PORTAL_ITEM&&e<w.Gr.USER}readDefinitionSetMap(e,i,t){return(0,C.f)(e,t)}writeDefinitionSetMap(e,i,t,a){const n=null===a||void 0===a?void 0:a.portalItem,s=null===a||void 0===a?void 0:a.resources,o=(0,w.aB)(null===a||void 0===a?void 0:a.origin);if(!n||!s||null==o)return void(e&&(i[t]=(0,C.t)(e,a)));const{inclusionModeDefinition:r}=this;if(!r||this._displaysAllRecords(r))return void(this.definitionSetMap=null);const l=this.originIdOf("inclusionModeDefinition");if(l===w.Gr.USER||this._namedTypesModified||o<l)this._saveUrlAsNewResource(i,t,s,n);else if(o===l&&e){const o=(0,C.t)(e,a);(0,y.oP)(o)?this._saveUrlAsNewResource(i,t,s,n):i[t]=o}}set inclusionModeDefinition(e){"loaded"!==this.loadStatus&&"failed"!==this.loadStatus?this._set("inclusionModeDefinition",e):r.A.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var e;const i=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.layers.length||this.originIdOf("tables")===w.Gr.DEFAULTS?this.originIdOf("layers")===w.Gr.DEFAULTS?this._createSublayers(i,this.layers,e=>!!e.geometryType):this._updateSublayers(i,this.layers):this.layers=new s.A,this.tables.length||this.originIdOf("layers")===w.Gr.DEFAULTS?this.originIdOf("tables")===w.Gr.DEFAULTS?this._createSublayers(i,this.tables,e=>!e.geometryType):this._updateSublayers(i,this.tables):this.tables=new s.A,null===(e=this.dataManager.inclusionModeDefinition)||void 0===e||null===(e=e.namedTypeDefinitions)||void 0===e||e.forEach((e,i)=>{var t;const a=(0,l.tE)(this.sublayerIdsCache,i,()=>new Set);null===(t=e.members)||void 0===t||t.forEach(e=>{a.add(e.id)})})}async addRecords(e){await this.load(),await this._handleNewRecords(e)}async createSublayerForNamedType(e){await this.load();const i=this._graphTypeLookup.get(e);if(!i)throw new o.A("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");if(this.dataManager.sublayerCaches.has(e))throw new o.A("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),(0,l.tE)(this.sublayerIdsCache,e,()=>new Set);const t=this._addSublayer(i);return"entity"===i.type?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),this.dataManager.inclusionModeDefinition&&this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!0}),await(0,v.qN)(this,[e]),this._refreshNamedTypes(),t}convertSublayerToDynamicData(e){if(!this.dataManager.inclusionModeDefinition)throw new o.A("knowledge-graph:fully-dynamic-membership","This Knowledge Graph Layer already uses fully dynamic membership, individual sublayers cannot be converted");if(!this._graphTypeLookup.get(e))throw new o.A("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");if(!this.dataManager.sublayerCaches.has(e))throw new o.A("knowledge-graph:duplicate-type","The specified type does not exist as a sublayer.");const i=this.dataManager.inclusionModeDefinition.namedTypeDefinitions.get(e);null!==i&&void 0!==i&&i.useAllData?r.A.getLogger(this).warn("This Knowledge Graph Layer already uses dynamic membership for the sublayer - no conversion was made"):(this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!0}),this.sublayerIdsCache.delete(e),this._refreshNamedTypes())}convertSublayerToExplicitMembership(e){if(!this.dataManager.inclusionModeDefinition)throw new o.A("knowledge-graph:fully-dynamic-membership","This Knowledge Graph Layer already uses fully dynamic membership, individual sublayers cannot be converted");if(!this._graphTypeLookup.get(e))throw new o.A("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");const i=this.dataManager.inclusionModeDefinition.namedTypeDefinitions.get(e);if(!i||i.useAllData){if(!this.dataManager.sublayerCaches.has(e))throw new o.A("knowledge-graph:duplicate-type","The specified type does not exist as a sublayer.");this.sublayerIdsCache.set(e,new Set),this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:new Map}),this._refreshNamedTypes()}else r.A.getLogger(this).warn("This Knowledge Graph Layer already uses explicit membership for the sublayer - no conversion was made")}convertToFullyDynamicData(){this.dataManager.inclusionModeDefinition||r.A.getLogger(this).warn("This Knowledge Graph Layer already uses fully dynamic membership - no conversion was made"),this.sublayerIdsCache.clear(),this.dataManager.inclusionModeDefinition=null,this._refreshNamedTypes()}convertToExplicitMembership(){this.dataManager.inclusionModeDefinition&&this.dataManager.inclusionModeDefinition.namedTypeDefinitions.size>0&&r.A.getLogger(this).warn("This Knowledge Graph Layer already uses explicit membership - no conversion was made"),this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map};for(const e of this.dataManager.sublayerCaches.keys())(0,l.tE)(this.sublayerIdsCache,e,()=>new Set),this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:new Map});this._refreshNamedTypes()}async removeRecords(e){await this.load();const i=[];for(const s of e){var t,a;!1===(null===(t=this.dataManager.inclusionModeDefinition)||void 0===t||null===(t=t.namedTypeDefinitions)||void 0===t||null===(t=t.get(s.typeName))||void 0===t?void 0:t.useAllData)&&(null===(a=this.dataManager.inclusionModeDefinition)||void 0===a||null===(a=a.namedTypeDefinitions)||void 0===a||null===(a=a.get(s.typeName))||void 0===a||null===(a=a.members)||void 0===a?void 0:a.has(s.id))&&i.push(s)}this.dataManager.removeFromLayer(i);for(const s of i){var n;null===(n=this.sublayerIdsCache.get(s.typeName))||void 0===n||n.delete(s.id)}return this._refreshNamedTypes(),i}};(0,a._)([(0,c.MZ)()],I.prototype,"dataManager",void 0),(0,a._)([(0,c.MZ)({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],I.prototype,"definitionSetMap",void 0),(0,a._)([(0,f.w)("definitionSetMap")],I.prototype,"readDefinitionSetMap",null),(0,a._)([(0,m.K)("definitionSetMap")],I.prototype,"writeDefinitionSetMap",null),(0,a._)([(0,c.MZ)()],I.prototype,"inclusionModeDefinition",null),(0,a._)([(0,c.MZ)()],I.prototype,"knowledgeGraph",void 0),(0,a._)([(0,c.MZ)({type:s.A.ofType(T.A),json:{write:{ignoreOrigin:!0}}})],I.prototype,"layers",void 0),(0,a._)([(0,c.MZ)()],I.prototype,"memberEntityTypes",void 0),(0,a._)([(0,c.MZ)()],I.prototype,"memberRelationshipTypes",void 0),(0,a._)([(0,c.MZ)({type:["KnowledgeGraphLayer"]})],I.prototype,"operationalLayerType",void 0),(0,a._)([(0,c.MZ)()],I.prototype,"sublayerIdsCache",void 0),(0,a._)([(0,c.MZ)({type:s.A.ofType(T.A),json:{write:{ignoreOrigin:!0}}})],I.prototype,"tables",void 0),(0,a._)([(0,c.MZ)({json:{read:!1}})],I.prototype,"type",void 0),(0,a._)([(0,c.MZ)(G.OZ)],I.prototype,"url",void 0),I=(0,a._)([(0,g.$)("esri.layers.KnowledgeGraphLayer")],I);const R=I}}]);
//# sourceMappingURL=26570.0f757218.chunk.js.map